openapi: 3.0.1
info:
  title: GECI Organization API
  description: "Data Centric API for domains Orders, BatchSubscription, Base, Catalog, CommonsCommerce, Integrations, Customers, Education, Batch, Commons, Billing, CommonsGECI, FlatRate, Subscription and I18n"
  contact:
    name: Paco Hernández Gómez
    email: paco@hernandezgomez.com
  version: "1.6"
servers:
 -
  url: https://backoffice-geci-dc.paas.nft.eci.geci
security:
 -
  default: []
paths:
  /api/commons-commerce-sites/validate:
    post:
      description: Validate CommonsCommerceSites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceSite'
        required: true
      responses:
        "200":
          description: "CommonsCommerceSite validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-row-level-policies:
    get:
      description: Get SecurityRowLevelPolicies
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityRowLevelPolicy'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SecurityRowLevelPolicies. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityRowLevelPolicy'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SecurityRowLevelPolicy'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SecurityRowLevelPolicies
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SecurityRowLevelPolicies
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/modeling-entities:
    get:
      description: Get ModelingEntities
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/ModelingEntity'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update ModelingEntities. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {name}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingEntity'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/ModelingEntity'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete ModelingEntities
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options ModelingEntities
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-subdivisions:
    get:
      description: Get CommonsGECISubdivisions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsGECISubdivision'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsGECISubdivisions. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECISubdivision'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsGECISubdivision'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsGECISubdivisions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsGECISubdivisions
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-renewal-reminder-types:
    get:
      description: Get FlatRateRenewalReminderTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRenewalReminderType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRenewalReminderTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {name}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRenewalReminderType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRenewalReminderType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRenewalReminderTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRenewalReminderTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-provider-subchannels/validate:
    post:
      description: Validate CatalogItemProviderSubchannels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemProviderSubchannel'
        required: true
      responses:
        "200":
          description: "CatalogItemProviderSubchannel validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-brands/validate:
    post:
      description: Validate CatalogBrands
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBrand'
        required: true
      responses:
        "200":
          description: "CatalogBrand validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-subchannel-types/validate:
    post:
      description: Validate CommonsGECISubchannelTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECISubchannelType'
        required: true
      responses:
        "200":
          description: "CommonsGECISubchannelType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-scopes/validate:
    post:
      description: Validate FlatRateRestrictionScopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionScope'
        required: true
      responses:
        "200":
          description: "FlatRateRestrictionScope validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-families/validate:
    post:
      description: Validate CommonsGECIFamilies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECIFamily'
        required: true
      responses:
        "200":
          description: "CommonsGECIFamily validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-action-status-types/validate:
    post:
      description: Validate FlatRateActionStatusTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateActionStatusType'
        required: true
      responses:
        "200":
          description: "FlatRateActionStatusType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-seller-item-features:
    get:
      description: Get CatalogSellerItemFeatures
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogSellerItemFeature'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogSellerItemFeatures. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogSellerItemFeature'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogSellerItemFeature'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogSellerItemFeatures
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogSellerItemFeatures
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-job-parameter-types:
    get:
      description: Get BatchJobParameterTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/BatchJobParameterType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update BatchJobParameterTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchJobParameterType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/BatchJobParameterType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete BatchJobParameterTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options BatchJobParameterTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/customer-merges/validate:
    post:
      description: Validate CustomerMerges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerMerge'
        required: true
      responses:
        "200":
          description: "CustomerMerge validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restrictions:
    get:
      description: Get FlatRateRestrictions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRestriction'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRestrictions. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestriction'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRestriction'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRestrictions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRestrictions
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/teaching-grades/validate:
    post:
      description: Validate TeachingGrades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeachingGrade'
        required: true
      responses:
        "200":
          description: "TeachingGrade validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-days-of-week/validate:
    post:
      description: Validate CommonsDaysOfWeek
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsDayOfWeek'
        required: true
      responses:
        "200":
          description: "CommonsDayOfWeek validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-operation-types:
    get:
      description: Get SecurityOperationTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityOperationType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SecurityOperationTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityOperationType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SecurityOperationType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SecurityOperationTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SecurityOperationTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-provider-delivery-area-except-dates/validate:
    post:
      description: Validate CatalogItemProviderDeliveryAreaExceptDates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemProviderDeliveryAreaExceptDate'
        required: true
      responses:
        "200":
          description: "CatalogItemProviderDeliveryAreaExceptDate validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/integration-jdbc-executions/validate:
    post:
      description: Validate IntegrationJdbcExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationJdbcExecution'
        required: true
      responses:
        "200":
          description: "IntegrationJdbcExecution validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-extensions:
    get:
      description: Get FlatRateExtensions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateExtension'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateExtensions. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateExtension'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateExtension'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateExtensions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateExtensions
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-payment-statuses:
    get:
      description: Get SubscriptionCustomerPaymentStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubscriptionCustomerPaymentStatus'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SubscriptionCustomerPaymentStatuses. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerPaymentStatus'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SubscriptionCustomerPaymentStatus'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SubscriptionCustomerPaymentStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SubscriptionCustomerPaymentStatuses
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-subscription-products/validate:
    post:
      description: Validate CatalogItemSubscriptionProducts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemSubscriptionProduct'
        required: true
      responses:
        "200":
          description: "CatalogItemSubscriptionProduct validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-systems/validate:
    post:
      description: Validate CommonsSystems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsSystem'
        required: true
      responses:
        "200":
          description: "CommonsSystem validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/materials/validate:
    post:
      description: Validate Materials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
        required: true
      responses:
        "200":
          description: "Material validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/order-sale-transactions:
    get:
      description: Get OrderSaleTransactions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderSaleTransaction'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update OrderSaleTransactions. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {externalId}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSaleTransaction'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/OrderSaleTransaction'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete OrderSaleTransactions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options OrderSaleTransactions
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-usages:
    get:
      description: Get FlatRateUsages
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateUsage'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateUsages. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateUsage'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateUsage'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateUsages
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateUsages
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-administrative-area-groups:
    get:
      description: Get CommonsAdministrativeAreaGroups
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsAdministrativeAreaGroup'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsAdministrativeAreaGroups. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsAdministrativeAreaGroup'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsAdministrativeAreaGroup'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsAdministrativeAreaGroups
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsAdministrativeAreaGroups
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /blob/metadata:
    get:
      description: Search for for blob
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/Blob'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-products:
    get:
      description: Get SubscriptionCustomerProducts
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubscriptionCustomerProduct'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SubscriptionCustomerProducts. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {item}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerProduct'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SubscriptionCustomerProduct'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SubscriptionCustomerProducts
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SubscriptionCustomerProducts
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-renewal-reminder-super-types:
    get:
      description: Get FlatRateRenewalReminderSuperTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRenewalReminderSuperType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRenewalReminderSuperTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {name}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRenewalReminderSuperType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRenewalReminderSuperType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRenewalReminderSuperTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRenewalReminderSuperTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/integration-jdbc-execution-range-columns/validate:
    post:
      description: Validate IntegrationJdbcExecutionRangeColumns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationJdbcExecutionRangeColumn'
        required: true
      responses:
        "200":
          description: "IntegrationJdbcExecutionRangeColumn validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-customer-statuses:
    get:
      description: Get FlatRateCustomerStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateCustomerStatus'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateCustomerStatuses. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateCustomerStatus'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateCustomerStatus'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateCustomerStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateCustomerStatuses
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-integration-maps/validate:
    post:
      description: Validate CommonsIntegrationMaps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsIntegrationMap'
        required: true
      responses:
        "200":
          description: "CommonsIntegrationMap validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-renewals:
    get:
      description: Get FlatRateRenewals
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRenewal'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRenewals. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRenewal'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRenewal'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRenewals
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRenewals
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-jobs:
    get:
      description: Get FlatRateJobs
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateJob'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateJobs. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateJob'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateJob'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateJobs
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateJobs
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-departments:
    get:
      description: Get CommonsGECIDepartments
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsGECIDepartment'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsGECIDepartments. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECIDepartment'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsGECIDepartment'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsGECIDepartments
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsGECIDepartments
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-renewal-reminders:
    get:
      description: Get FlatRateRenewalReminders
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRenewalReminder'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRenewalReminders. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRenewalReminder'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRenewalReminder'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRenewalReminders
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRenewalReminders
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/materials:
    get:
      description: Get Materials
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/Material'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update Materials. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {item}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/Material'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete Materials
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options Materials
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-payments:
    get:
      description: Get SubscriptionCustomerPayments
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubscriptionCustomerPayment'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SubscriptionCustomerPayments. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerPayment'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SubscriptionCustomerPayment'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SubscriptionCustomerPayments
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SubscriptionCustomerPayments
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-shipping-types/validate:
    post:
      description: Validate CommonsCommerceShippingTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceShippingType'
        required: true
      responses:
        "200":
          description: "CommonsCommerceShippingType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-provider-delivery-area-except-date-types:
    get:
      description: Get CatalogItemProviderDeliveryAreaExceptDateTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogItemProviderDeliveryAreaExceptDateType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogItemProviderDeliveryAreaExceptDateTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemProviderDeliveryAreaExceptDateType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogItemProviderDeliveryAreaExceptDateType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogItemProviderDeliveryAreaExceptDateTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogItemProviderDeliveryAreaExceptDateTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/i18n-scopes/validate:
    post:
      description: Validate I18nScopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/I18nScope'
        required: true
      responses:
        "200":
          description: "I18nScope validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/integratiosn-job:
    get:
      description: Get IntegratiosnJob
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/IntegrationJob'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update IntegratiosnJob. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationJob'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/IntegrationJob'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete IntegratiosnJob
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options IntegratiosnJob
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-action-status-types:
    get:
      description: Get FlatRateActionStatusTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateActionStatusType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateActionStatusTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateActionStatusType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateActionStatusType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateActionStatusTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateActionStatusTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-shipping-rates:
    get:
      description: Get CatalogShippingRates
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogShippingRate'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogShippingRates. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogShippingRate'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogShippingRate'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogShippingRates
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogShippingRates
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-job-executions:
    get:
      description: Get BatchJobExecutions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/BatchJobExecution'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update BatchJobExecutions. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {jobExecutionId}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchJobExecution'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/BatchJobExecution'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete BatchJobExecutions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options BatchJobExecutions
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-family-groups/validate:
    post:
      description: Validate CommonsGECIFamilyGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECIFamilyGroup'
        required: true
      responses:
        "200":
          description: "CommonsGECIFamilyGroup validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-job-executions/validate:
    post:
      description: Validate FlatRateJobExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateJobExecution'
        required: true
      responses:
        "200":
          description: "FlatRateJobExecution validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-attributes:
    get:
      description: Get SecurityAttributes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityAttribute'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SecurityAttributes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityAttribute'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SecurityAttribute'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SecurityAttributes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SecurityAttributes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-seller-types:
    get:
      description: Get CommonsCommerceSellerTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceSellerType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceSellerTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceSellerType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceSellerType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceSellerTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceSellerTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-renewal-reminder-super-types/validate:
    post:
      description: Validate FlatRateRenewalReminderSuperTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRenewalReminderSuperType'
        required: true
      responses:
        "200":
          description: "FlatRateRenewalReminderSuperType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-payment-status-reasons/validate:
    post:
      description: Validate SubscriptionCustomerPaymentStatusReasons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerPaymentStatusReason'
        required: true
      responses:
        "200":
          description: "SubscriptionCustomerPaymentStatusReason validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-families:
    get:
      description: Get FlatRateRestrictionFamilies
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRestrictionFamily'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRestrictionFamilies. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionFamily'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRestrictionFamily'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRestrictionFamilies
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRestrictionFamilies
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-refund-costs/validate:
    post:
      description: Validate CommonsCommerceRefundCosts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceRefundCost'
        required: true
      responses:
        "200":
          description: "CommonsCommerceRefundCost validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-sellers/validate:
    post:
      description: Validate CommonsCommerceSellers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceSeller'
        required: true
      responses:
        "200":
          description: "CommonsCommerceSeller validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-payment-statuses/validate:
    post:
      description: Validate SubscriptionCustomerPaymentStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerPaymentStatus'
        required: true
      responses:
        "200":
          description: "SubscriptionCustomerPaymentStatus validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-families:
    get:
      description: Get CommonsGECIFamilies
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsGECIFamily'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsGECIFamilies. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECIFamily'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsGECIFamily'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsGECIFamilies
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsGECIFamilies
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-job-execution-items/validate:
    post:
      description: Validate FlatRateJobExecutionItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateJobExecutionItem'
        required: true
      responses:
        "200":
          description: "FlatRateJobExecutionItem validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/customer-consents/validate:
    post:
      description: Validate CustomerConsents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerConsent'
        required: true
      responses:
        "200":
          description: "CustomerConsent validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-items/validate:
    post:
      description: Validate CatalogItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItem'
        required: true
      responses:
        "200":
          description: "CatalogItem validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-notification-statuses/validate:
    post:
      description: Validate CommonsCommerceNotificationStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceNotificationStatus'
        required: true
      responses:
        "200":
          description: "CommonsCommerceNotificationStatus validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-subchannels/validate:
    post:
      description: Validate CommonsGECISubchannels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECISubchannel'
        required: true
      responses:
        "200":
          description: "CommonsGECISubchannel validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-administrative-area-groups/validate:
    post:
      description: Validate CommonsAdministrativeAreaGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsAdministrativeAreaGroup'
        required: true
      responses:
        "200":
          description: "CommonsAdministrativeAreaGroup validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-access-privileges:
    get:
      description: Get SecurityAccessPrivileges
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityAccessPrivilege'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SecurityAccessPrivileges. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityAccessPrivilege'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SecurityAccessPrivilege'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SecurityAccessPrivileges
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SecurityAccessPrivileges
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-user-formats:
    get:
      description: Get SecurityUserFormats
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityUserFormat'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SecurityUserFormats. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityUserFormat'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SecurityUserFormat'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SecurityUserFormats
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SecurityUserFormats
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-items:
    get:
      description: Get CatalogItems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogItem'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogItems. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {gtin}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItem'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogItem'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogItems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogItems
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-provider-delivery-area-except-dates:
    get:
      description: Get CatalogItemProviderDeliveryAreaExceptDates
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogItemProviderDeliveryAreaExceptDate'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogItemProviderDeliveryAreaExceptDates. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {, calendartype}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemProviderDeliveryAreaExceptDate'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogItemProviderDeliveryAreaExceptDate'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogItemProviderDeliveryAreaExceptDates
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogItemProviderDeliveryAreaExceptDates
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-statuses/validate:
    post:
      description: Validate SubscriptionCustomerStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerStatus'
        required: true
      responses:
        "200":
          description: "SubscriptionCustomerStatus validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-subscription-product-types/validate:
    post:
      description: Validate CatalogItemSubscriptionProductTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemSubscriptionProductType'
        required: true
      responses:
        "200":
          description: "CatalogItemSubscriptionProductType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-systems:
    get:
      description: Get CommonsGECISystems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsGECISystem'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsGECISystems. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECISystem'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsGECISystem'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsGECISystems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsGECISystems
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-entities/validate:
    post:
      description: Validate SecurityEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntity'
        required: true
      responses:
        "200":
          description: "SecurityEntity validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-provider-delivery-ranges:
    get:
      description: Get CatalogItemProviderDeliveryRanges
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogItemProviderDeliveryRange'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogItemProviderDeliveryRanges. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemProviderDeliveryRange'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogItemProviderDeliveryRange'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogItemProviderDeliveryRanges
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogItemProviderDeliveryRanges
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-channels/validate:
    post:
      description: Validate CommonsGECIChannels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECIChannel'
        required: true
      responses:
        "200":
          description: "CommonsGECIChannel validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /blob:
    post:
      description: Create blob
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              description: File to be uploaded
              format: binary
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/Blob'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete Blob
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/customer-merges:
    get:
      description: Get CustomerMerges
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerMerge'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CustomerMerges. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {cuc}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerMerge'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CustomerMerge'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CustomerMerges
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CustomerMerges
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-refund-costs:
    get:
      description: Get CommonsCommerceRefundCosts
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceRefundCost'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceRefundCosts. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceRefundCost'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceRefundCost'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceRefundCosts
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceRefundCosts
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/billing-sac-codes/validate:
    post:
      description: Validate BillingSacCodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingSacCode'
        required: true
      responses:
        "200":
          description: "BillingSacCode validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-time-units:
    get:
      description: Get CommonsTimeUnits
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsTimeUnit'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsTimeUnits. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code} or {name}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsTimeUnit'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsTimeUnit'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsTimeUnits
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsTimeUnits
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-providers:
    get:
      description: Get CatalogItemProviders
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogItemProvider'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogItemProviders. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemProvider'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogItemProvider'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogItemProviders
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogItemProviders
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-seller-item-features/validate:
    post:
      description: Validate CatalogSellerItemFeatures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogSellerItemFeature'
        required: true
      responses:
        "200":
          description: "CatalogSellerItemFeature validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/modeling-attribute-cardinalities/validate:
    post:
      description: Validate ModelingAttributeCardinalities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingAttributeCardinality'
        required: true
      responses:
        "200":
          description: "ModelingAttributeCardinality validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-sell-modes:
    get:
      description: Get CommonsCommerceSellModes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceSellMode'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceSellModes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceSellMode'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceSellMode'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceSellModes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceSellModes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/modeling-attribute-sets/validate:
    post:
      description: Validate ModelingAttributeSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingAttributeSet'
        required: true
      responses:
        "200":
          description: "ModelingAttributeSet validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-selller-items:
    get:
      description: Get CatalogSelllerItems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogSelllerItem'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogSelllerItems. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogSelllerItem'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogSelllerItem'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogSelllerItems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogSelllerItems
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/i18n-message-languages/validate:
    post:
      description: Validate I18nMessageLanguages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/I18nMessageLanguage'
        required: true
      responses:
        "200":
          description: "I18nMessageLanguage validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-user-timezones:
    get:
      description: Get SecurityUserTimezones
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityUserTimezone'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SecurityUserTimezones. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {name}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityUserTimezone'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SecurityUserTimezone'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SecurityUserTimezones
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SecurityUserTimezones
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-payment-methods:
    get:
      description: Get CommonsCommercePaymentMethods
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommercePaymentMethod'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommercePaymentMethods. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommercePaymentMethod'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommercePaymentMethod'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommercePaymentMethods
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommercePaymentMethods
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-job-parameters:
    get:
      description: Get BatchJobParameters
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/BatchJobParameter'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update BatchJobParameters. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {name}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchJobParameter'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/BatchJobParameter'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete BatchJobParameters
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options BatchJobParameters
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-cancellation-reasons/validate:
    post:
      description: Validate SubscriptionCustomerCancellationReasons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerCancellationReason'
        required: true
      responses:
        "200":
          description: "SubscriptionCustomerCancellationReason validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-usage-details/validate:
    post:
      description: Validate FlatRateUsageDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateUsageDetail'
        required: true
      responses:
        "200":
          description: "FlatRateUsageDetail validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-action-types:
    get:
      description: Get FlatRateActionTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateActionType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateActionTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateActionType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateActionType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateActionTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateActionTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/integration-job-executions:
    get:
      description: Get IntegrationJobExecutions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/IntegrationJobExecution'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update IntegrationJobExecutions. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationJobExecution'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/IntegrationJobExecution'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete IntegrationJobExecutions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options IntegrationJobExecutions
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-administrative-areas/validate:
    post:
      description: Validate CommonsAdministrativeAreas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsAdministrativeArea'
        required: true
      responses:
        "200":
          description: "CommonsAdministrativeArea validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/billing-concept-rows:
    get:
      description: Get BillingConceptRows
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingConceptRow'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update BillingConceptRows. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingConceptRow'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/BillingConceptRow'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete BillingConceptRows
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options BillingConceptRows
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-set-departments/validate:
    post:
      description: Validate FlatRateRestrictionSetDepartments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionSetDepartment'
        required: true
      responses:
        "200":
          description: "FlatRateRestrictionSetDepartment validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-job-executions/validate:
    post:
      description: Validate BatchJobExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchJobExecution'
        required: true
      responses:
        "200":
          description: "BatchJobExecution validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-sell-scopes:
    get:
      description: Get FlatRateSellScopes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateSellScope'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateSellScopes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateSellScope'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateSellScope'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateSellScopes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateSellScopes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-payments/validate:
    post:
      description: Validate SubscriptionCustomerPayments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerPayment'
        required: true
      responses:
        "200":
          description: "SubscriptionCustomerPayment validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/order-items/validate:
    post:
      description: Validate OrderItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
        required: true
      responses:
        "200":
          description: "OrderItem validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-notification-types:
    get:
      description: Get SubscriptionNotificationTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubscriptionNotificationType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SubscriptionNotificationTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {name}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionNotificationType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SubscriptionNotificationType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SubscriptionNotificationTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SubscriptionNotificationTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/orders:
    get:
      description: Get Orders
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update Orders. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {, originexternalId}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/Order'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete Orders
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options Orders
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-customer-status-reasons:
    get:
      description: Get FlatRateCustomerStatusReasons
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateCustomerStatusReason'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateCustomerStatusReasons. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateCustomerStatusReason'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateCustomerStatusReason'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateCustomerStatusReasons
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateCustomerStatusReasons
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-products/validate:
    post:
      description: Validate SubscriptionCustomerProducts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerProduct'
        required: true
      responses:
        "200":
          description: "SubscriptionCustomerProduct validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-product-deliveries:
    get:
      description: Get SubscriptionCustomerProductDeliveries
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubscriptionCustomerProductDelivery'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SubscriptionCustomerProductDeliveries. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerProductDelivery'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SubscriptionCustomerProductDelivery'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SubscriptionCustomerProductDeliveries
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SubscriptionCustomerProductDeliveries
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-sequences:
    get:
      description: Get SecuritySequences
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecuritySequence'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SecuritySequences. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuritySequence'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SecuritySequence'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SecuritySequences
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SecuritySequences
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-set-min-amounts/validate:
    post:
      description: Validate FlatRateRestrictionSetMinAmounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionSetMinAmount'
        required: true
      responses:
        "200":
          description: "FlatRateRestrictionSetMinAmount validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/integration-job-executions/validate:
    post:
      description: Validate IntegrationJobExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationJobExecution'
        required: true
      responses:
        "200":
          description: "IntegrationJobExecution validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/order-statuses:
    get:
      description: Get OrderStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderStatus'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update OrderStatuses. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatus'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/OrderStatus'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete OrderStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options OrderStatuses
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-statuses/validate:
    post:
      description: Validate BatchStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchStatus'
        required: true
      responses:
        "200":
          description: "BatchStatus validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-subchannels:
    get:
      description: Get CommonsGECISubchannels
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsGECISubchannel'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsGECISubchannels. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECISubchannel'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsGECISubchannel'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsGECISubchannels
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsGECISubchannels
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/billing-concepts:
    get:
      description: Get BillingConcepts
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingConcept'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update BillingConcepts. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingConcept'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/BillingConcept'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete BillingConcepts
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options BillingConcepts
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-selller-items/validate:
    post:
      description: Validate CatalogSelllerItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogSelllerItem'
        required: true
      responses:
        "200":
          description: "CatalogSelllerItem validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/customers:
    get:
      description: Get Customers
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update Customers. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {cuc}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/Customer'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete Customers
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options Customers
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-cancellation-reasons/validate:
    post:
      description: Validate CommonsCommerceCancellationReasons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceCancellationReason'
        required: true
      responses:
        "200":
          description: "CommonsCommerceCancellationReason validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-proceder-service-types/validate:
    post:
      description: Validate CatalogItemProcederServiceTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemProviderServiceType'
        required: true
      responses:
        "200":
          description: "CatalogItemProviderServiceType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-seller-item-feature-types:
    get:
      description: Get CatalogSellerItemFeatureTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogSellerItemFeatureType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogSellerItemFeatureTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogSellerItemFeatureType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogSellerItemFeatureType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogSellerItemFeatureTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogSellerItemFeatureTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-usages/validate:
    post:
      description: Validate FlatRateUsages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateUsage'
        required: true
      responses:
        "200":
          description: "FlatRateUsage validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-extensions/validate:
    post:
      description: Validate FlatRateExtensions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateExtension'
        required: true
      responses:
        "200":
          description: "FlatRateExtension validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-access-privileges/validate:
    post:
      description: Validate SecurityAccessPrivileges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityAccessPrivilege'
        required: true
      responses:
        "200":
          description: "SecurityAccessPrivilege validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-item-types/validate:
    post:
      description: Validate CommonsCommerceItemTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceItemType'
        required: true
      responses:
        "200":
          description: "CommonsCommerceItemType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/integration-jdbc-executions:
    get:
      description: Get IntegrationJdbcExecutions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/IntegrationJdbcExecution'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update IntegrationJdbcExecutions. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationJdbcExecution'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/IntegrationJdbcExecution'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete IntegrationJdbcExecutions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options IntegrationJdbcExecutions
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-set-min-amounts:
    get:
      description: Get FlatRateRestrictionSetMinAmounts
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRestrictionSetMinAmount'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRestrictionSetMinAmounts. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionSetMinAmount'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRestrictionSetMinAmount'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRestrictionSetMinAmounts
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRestrictionSetMinAmounts
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restrictions/validate:
    post:
      description: Validate FlatRateRestrictions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestriction'
        required: true
      responses:
        "200":
          description: "FlatRateRestriction validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-action-types/validate:
    post:
      description: Validate FlatRateActionTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateActionType'
        required: true
      responses:
        "200":
          description: "FlatRateActionType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/courses:
    get:
      description: Get Courses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/Course'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update Courses. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {grade}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/Course'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete Courses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options Courses
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-sell-modes/validate:
    post:
      description: Validate CommonsCommerceSellModes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceSellMode'
        required: true
      responses:
        "200":
          description: "CommonsCommerceSellMode validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/scheduling-processes:
    get:
      description: Get SchedulingProcesses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SchedulingProcess'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SchedulingProcesses. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchedulingProcess'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SchedulingProcess'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SchedulingProcesses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SchedulingProcesses
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-seller-item-publications/validate:
    post:
      description: Validate CatalogSellerItemPublications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogSellerItemPublication'
        required: true
      responses:
        "200":
          description: "CatalogSellerItemPublication validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/teaching-centers:
    get:
      description: Get TeachingCenters
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/TeachingCenter'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update TeachingCenters. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code} or {governmentCode}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeachingCenter'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/TeachingCenter'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete TeachingCenters
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options TeachingCenters
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-durations:
    get:
      description: Get CommonsDurations
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsDuration'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsDurations. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsDuration'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsDuration'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsDurations
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsDurations
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-customer-statuses/validate:
    post:
      description: Validate FlatRateCustomerStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateCustomerStatus'
        required: true
      responses:
        "200":
          description: "FlatRateCustomerStatus validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-subchannel-types:
    get:
      description: Get CommonsGECISubchannelTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsGECISubchannelType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsGECISubchannelTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECISubchannelType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsGECISubchannelType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsGECISubchannelTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsGECISubchannelTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-provider-subchannels:
    get:
      description: Get CatalogItemProviderSubchannels
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogItemProviderSubchannel'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogItemProviderSubchannels. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {, subchannel, businessLinesubchannelType}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemProviderSubchannel'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogItemProviderSubchannel'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogItemProviderSubchannels
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogItemProviderSubchannels
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-business-lines:
    get:
      description: Get CommonsGECIBusinessLines
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsGECIBusinessLine'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsGECIBusinessLines. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECIBusinessLine'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsGECIBusinessLine'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsGECIBusinessLines
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsGECIBusinessLines
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-renewal-error-payment-codes:
    get:
      description: Get FlatRateRenewalErrorPaymentCodes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRenewalErrorPaymentCode'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRenewalErrorPaymentCodes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRenewalErrorPaymentCode'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRenewalErrorPaymentCode'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRenewalErrorPaymentCodes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRenewalErrorPaymentCodes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/scheduling-processes/validate:
    post:
      description: Validate SchedulingProcesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchedulingProcess'
        required: true
      responses:
        "200":
          description: "SchedulingProcess validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/i18n-scopes:
    get:
      description: Get I18nScopes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/I18nScope'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update I18nScopes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/I18nScope'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/I18nScope'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete I18nScopes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options I18nScopes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/i18n-messages:
    get:
      description: Get I18nMessages
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/I18nMessage'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update I18nMessages. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {, codescope}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/I18nMessage'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/I18nMessage'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete I18nMessages
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options I18nMessages
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/integration-jdbc-execution-range-columns:
    get:
      description: Get IntegrationJdbcExecutionRangeColumns
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/IntegrationJdbcExecutionRangeColumn'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update IntegrationJdbcExecutionRangeColumns. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationJdbcExecutionRangeColumn'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/IntegrationJdbcExecutionRangeColumn'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete IntegrationJdbcExecutionRangeColumns
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options IntegrationJdbcExecutionRangeColumns
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/integration-service-executions/validate:
    post:
      description: Validate IntegrationServiceExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationServiceExecution'
        required: true
      responses:
        "200":
          description: "IntegrationServiceExecution validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/order-details:
    get:
      description: Get OrderDetails
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderDetail'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update OrderDetails. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {order}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetail'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/OrderDetail'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete OrderDetails
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options OrderDetails
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-business-lines/validate:
    post:
      description: Validate CommonsGECIBusinessLines
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECIBusinessLine'
        required: true
      responses:
        "200":
          description: "CommonsGECIBusinessLine validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-brands:
    get:
      description: Get CatalogBrands
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogBrand'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogBrands. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code} or {externalId}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBrand'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogBrand'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogBrands
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogBrands
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/teaching-grades:
    get:
      description: Get TeachingGrades
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/TeachingGrade'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update TeachingGrades. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code} or {name}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeachingGrade'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/TeachingGrade'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete TeachingGrades
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options TeachingGrades
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-step-executions/validate:
    post:
      description: Validate BatchStepExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchStepExecution'
        required: true
      responses:
        "200":
          description: "BatchStepExecution validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-refund-reasons/validate:
    post:
      description: Validate CommonsCommerceRefundReasons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceRefundReason'
        required: true
      responses:
        "200":
          description: "CommonsCommerceRefundReason validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-payment-methods/validate:
    post:
      description: Validate CommonsCommercePaymentMethods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommercePaymentMethod'
        required: true
      responses:
        "200":
          description: "CommonsCommercePaymentMethod validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-subdivisions/validate:
    post:
      description: Validate CommonsGECISubdivisions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECISubdivision'
        required: true
      responses:
        "200":
          description: "CommonsGECISubdivision validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-languages:
    get:
      description: Get CommonsLanguages
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsLanguage'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsLanguages. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {codeISO6392t} {codeISO6391} or {name}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsLanguage'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsLanguage'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsLanguages
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsLanguages
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/order-item-statuses/validate:
    post:
      description: Validate OrderItemStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemStatus'
        required: true
      responses:
        "200":
          description: "OrderItemStatus validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/order-item-statuses:
    get:
      description: Get OrderItemStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderItemStatus'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update OrderItemStatuses. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemStatus'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/OrderItemStatus'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete OrderItemStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options OrderItemStatuses
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/modeling-domains:
    get:
      description: Get ModelingDomains
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/ModelingDomain'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update ModelingDomains. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {name}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingDomain'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/ModelingDomain'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete ModelingDomains
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options ModelingDomains
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-departments/validate:
    post:
      description: Validate FlatRateRestrictionDepartments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionDepartment'
        required: true
      responses:
        "200":
          description: "FlatRateRestrictionDepartment validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-currencies:
    get:
      description: Get CommonsCurrencies
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCurrency'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCurrencies. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {numericCode} or {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCurrency'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCurrency'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCurrencies
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCurrencies
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-subscription-products:
    get:
      description: Get CatalogItemSubscriptionProducts
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogItemSubscriptionProduct'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogItemSubscriptionProducts. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {item}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemSubscriptionProduct'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogItemSubscriptionProduct'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogItemSubscriptionProducts
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogItemSubscriptionProducts
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/teaching-centers/validate:
    post:
      description: Validate TeachingCenters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeachingCenter'
        required: true
      responses:
        "200":
          description: "TeachingCenter validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-shopping-centres/validate:
    post:
      description: Validate CommonsCommerceShoppingCentres
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceShoppingCentre'
        required: true
      responses:
        "200":
          description: "CommonsCommerceShoppingCentre validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-renewal-statuses/validate:
    post:
      description: Validate FlatRateRenewalStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRenewalStatus'
        required: true
      responses:
        "200":
          description: "FlatRateRenewalStatus validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-family-groups:
    get:
      description: Get CommonsGECIFamilyGroups
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsGECIFamilyGroup'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsGECIFamilyGroups. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECIFamilyGroup'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsGECIFamilyGroup'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsGECIFamilyGroups
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsGECIFamilyGroups
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-job-instances:
    get:
      description: Get BatchJobInstances
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/BatchJobInstance'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update BatchJobInstances. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {, jobNamejobKey}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchJobInstance'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/BatchJobInstance'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete BatchJobInstances
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options BatchJobInstances
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/integration-statuses/validate:
    post:
      description: Validate IntegrationStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationStatus'
        required: true
      responses:
        "200":
          description: "IntegrationStatus validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-sites:
    get:
      description: Get CommonsCommerceSites
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceSite'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceSites. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceSite'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceSite'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceSites
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceSites
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-provider-delivery-areas:
    get:
      description: Get CatalogItemProviderDeliveryAreas
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogItemProviderDeliveryArea'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogItemProviderDeliveryAreas. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {, deliveryAreadeliveryAreaGroup}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemProviderDeliveryArea'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogItemProviderDeliveryArea'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogItemProviderDeliveryAreas
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogItemProviderDeliveryAreas
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/orders/validate:
    post:
      description: Validate Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        "200":
          description: "Order validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-sequences/validate:
    post:
      description: Validate SecuritySequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuritySequence'
        required: true
      responses:
        "200":
          description: "SecuritySequence validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-provider-delivery-area-except-date-types/validate:
    post:
      description: Validate CatalogItemProviderDeliveryAreaExceptDateTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemProviderDeliveryAreaExceptDateType'
        required: true
      responses:
        "200":
          description: "CatalogItemProviderDeliveryAreaExceptDateType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-cancellation-reasons:
    get:
      description: Get CommonsCommerceCancellationReasons
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceCancellationReason'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceCancellationReasons. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceCancellationReason'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceCancellationReason'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceCancellationReasons
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceCancellationReasons
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-step-executions:
    get:
      description: Get BatchStepExecutions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/BatchStepExecution'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update BatchStepExecutions. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {stepName}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchStepExecution'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/BatchStepExecution'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete BatchStepExecutions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options BatchStepExecutions
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/modeling-attribute-types:
    get:
      description: Get ModelingAttributeTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/ModelingAttributeType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update ModelingAttributeTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {name}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingAttributeType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/ModelingAttributeType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete ModelingAttributeTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options ModelingAttributeTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-payment-method-tags:
    get:
      description: Get CommonsCommercePaymentMethodTags
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommercePaymentMethodTag'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommercePaymentMethodTags. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommercePaymentMethodTag'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommercePaymentMethodTag'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommercePaymentMethodTags
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommercePaymentMethodTags
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/billing-concepts/validate:
    post:
      description: Validate BillingConcepts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingConcept'
        required: true
      responses:
        "200":
          description: "BillingConcept validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-departments/validate:
    post:
      description: Validate CommonsGECIDepartments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECIDepartment'
        required: true
      responses:
        "200":
          description: "CommonsGECIDepartment validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-notification-types:
    get:
      description: Get CommonsCommerceNotificationTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceNotificationType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceNotificationTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceNotificationType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceNotificationType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceNotificationTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceNotificationTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/billing-concept-types:
    get:
      description: Get BillingConceptTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingConceptType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update BillingConceptTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingConceptType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/BillingConceptType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete BillingConceptTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options BillingConceptTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-job-executions:
    get:
      description: Get FlatRateJobExecutions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateJobExecution'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateJobExecutions. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {, jobstartDate}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateJobExecution'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateJobExecution'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateJobExecutions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateJobExecutions
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/billing-concept-rows/validate:
    post:
      description: Validate BillingConceptRows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingConceptRow'
        required: true
      responses:
        "200":
          description: "BillingConceptRow validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-proceder-service-types:
    get:
      description: Get CatalogItemProcederServiceTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogItemProviderServiceType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogItemProcederServiceTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemProviderServiceType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogItemProviderServiceType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogItemProcederServiceTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogItemProcederServiceTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/integration-statuses:
    get:
      description: Get IntegrationStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/IntegrationStatus'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update IntegrationStatuses. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationStatus'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/IntegrationStatus'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete IntegrationStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options IntegrationStatuses
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-status-reasons:
    get:
      description: Get SubscriptionCustomerStatusReasons
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubscriptionCustomerStatusReason'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SubscriptionCustomerStatusReasons. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerStatusReason'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SubscriptionCustomerStatusReason'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SubscriptionCustomerStatusReasons
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SubscriptionCustomerStatusReasons
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/customer-consent-elements:
    get:
      description: Get CustomerConsentElements
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerConsentElement'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CustomerConsentElements. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerConsentElement'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CustomerConsentElement'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CustomerConsentElements
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CustomerConsentElements
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-subscription-payment-error-types:
    get:
      description: Get BatchSubscriptionPaymentErrorTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/BatchSubscriptionPaymentErrorType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update BatchSubscriptionPaymentErrorTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchSubscriptionPaymentErrorType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/BatchSubscriptionPaymentErrorType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete BatchSubscriptionPaymentErrorTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options BatchSubscriptionPaymentErrorTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-shipping-types:
    get:
      description: Get CommonsCommerceShippingTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceShippingType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceShippingTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceShippingType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceShippingType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceShippingTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceShippingTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-set-departments:
    get:
      description: Get FlatRateRestrictionSetDepartments
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRestrictionSetDepartment'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRestrictionSetDepartments. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionSetDepartment'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRestrictionSetDepartment'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRestrictionSetDepartments
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRestrictionSetDepartments
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-customer-actions:
    get:
      description: Get FlatRateCustomerActions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateCustomerAction'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateCustomerActions. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateCustomerAction'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateCustomerAction'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateCustomerActions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateCustomerActions
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-durations/validate:
    post:
      description: Validate CommonsDurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsDuration'
        required: true
      responses:
        "200":
          description: "CommonsDuration validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-renewal-error-payment-codes/validate:
    post:
      description: Validate FlatRateRenewalErrorPaymentCodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRenewalErrorPaymentCode'
        required: true
      responses:
        "200":
          description: "FlatRateRenewalErrorPaymentCode validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-row-level-policies/validate:
    post:
      description: Validate SecurityRowLevelPolicies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityRowLevelPolicy'
        required: true
      responses:
        "200":
          description: "SecurityRowLevelPolicy validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/integration-file-executions:
    get:
      description: Get IntegrationFileExecutions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/IntegrationFileExecution'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update IntegrationFileExecutions. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationFileExecution'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/IntegrationFileExecution'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete IntegrationFileExecutions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options IntegrationFileExecutions
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-cancellation-reasons:
    get:
      description: Get SubscriptionCustomerCancellationReasons
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubscriptionCustomerCancellationReason'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SubscriptionCustomerCancellationReasons. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerCancellationReason'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SubscriptionCustomerCancellationReason'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SubscriptionCustomerCancellationReasons
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SubscriptionCustomerCancellationReasons
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-providers/validate:
    post:
      description: Validate CatalogItemProviders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemProvider'
        required: true
      responses:
        "200":
          description: "CatalogItemProvider validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-shopping-centres:
    get:
      description: Get CommonsCommerceShoppingCentres
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceShoppingCentre'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceShoppingCentres. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {, codeseller}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceShoppingCentre'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceShoppingCentre'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceShoppingCentres
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceShoppingCentres
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-attributes/validate:
    post:
      description: Validate SecurityAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityAttribute'
        required: true
      responses:
        "200":
          description: "SecurityAttribute validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-customer-actions/validate:
    post:
      description: Validate FlatRateCustomerActions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateCustomerAction'
        required: true
      responses:
        "200":
          description: "FlatRateCustomerAction validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-shipping-variations:
    get:
      description: Get CommonsCommerceShippingVariations
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceShippingVariation'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceShippingVariations. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceShippingVariation'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceShippingVariation'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceShippingVariations
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceShippingVariations
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-set-items:
    get:
      description: Get FlatRateRestrictionSetItems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRestrictionSetItem'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRestrictionSetItems. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionSetItem'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRestrictionSetItem'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRestrictionSetItems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRestrictionSetItems
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/i18n-messages/validate:
    post:
      description: Validate I18nMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/I18nMessage'
        required: true
      responses:
        "200":
          description: "I18nMessage validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-user-formats/validate:
    post:
      description: Validate SecurityUserFormats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityUserFormat'
        required: true
      responses:
        "200":
          description: "SecurityUserFormat validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-seller-item-publications:
    get:
      description: Get CatalogSellerItemPublications
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogSellerItemPublication'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogSellerItemPublications. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogSellerItemPublication'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogSellerItemPublication'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogSellerItemPublications
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogSellerItemPublications
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-administrative-areas:
    get:
      description: Get CommonsAdministrativeAreas
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsAdministrativeArea'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsAdministrativeAreas. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {, parentname}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsAdministrativeArea'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsAdministrativeArea'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsAdministrativeAreas
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsAdministrativeAreas
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/billing-sac-codes:
    get:
      description: Get BillingSacCodes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingSacCode'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update BillingSacCodes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingSacCode'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/BillingSacCode'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete BillingSacCodes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options BillingSacCodes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customers:
    get:
      description: Get SubscriptionCustomers
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubscriptionCustomer'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SubscriptionCustomers. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomer'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SubscriptionCustomer'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SubscriptionCustomers
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SubscriptionCustomers
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/modeling-entities/validate:
    post:
      description: Validate ModelingEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingEntity'
        required: true
      responses:
        "200":
          description: "ModelingEntity validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/order-sale-transactions/validate:
    post:
      description: Validate OrderSaleTransactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSaleTransaction'
        required: true
      responses:
        "200":
          description: "OrderSaleTransaction validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/modeling-attribute-cardinalities:
    get:
      description: Get ModelingAttributeCardinalities
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/ModelingAttributeCardinality'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update ModelingAttributeCardinalities. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {name}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingAttributeCardinality'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/ModelingAttributeCardinality'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete ModelingAttributeCardinalities
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options ModelingAttributeCardinalities
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-subscription-product-types:
    get:
      description: Get CatalogItemSubscriptionProductTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogItemSubscriptionProductType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CatalogItemSubscriptionProductTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemSubscriptionProductType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CatalogItemSubscriptionProductType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CatalogItemSubscriptionProductTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CatalogItemSubscriptionProductTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-customers:
    get:
      description: Get FlatRateCustomers
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateCustomer'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateCustomers. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code} or {externalOrderId}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateCustomer'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateCustomer'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateCustomers
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateCustomers
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-renewal-statuses:
    get:
      description: Get FlatRateRenewalStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRenewalStatus'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRenewalStatuses. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRenewalStatus'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRenewalStatus'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRenewalStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRenewalStatuses
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-notification-types/validate:
    post:
      description: Validate CommonsCommerceNotificationTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceNotificationType'
        required: true
      responses:
        "200":
          description: "CommonsCommerceNotificationType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/modeling-attribute-types/validate:
    post:
      description: Validate ModelingAttributeTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingAttributeType'
        required: true
      responses:
        "200":
          description: "ModelingAttributeType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-scope-values/validate:
    post:
      description: Validate FlatRateRestrictionScopeValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionMinumumAmount'
        required: true
      responses:
        "200":
          description: "FlatRateRestrictionMinumumAmount validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/modeling-attributes:
    get:
      description: Get ModelingAttributes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/ModelingAttribute'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update ModelingAttributes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {name}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingAttribute'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/ModelingAttribute'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete ModelingAttributes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options ModelingAttributes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-modes:
    get:
      description: Get FlatRateRestrictionModes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRestrictionMode'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRestrictionModes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionMode'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRestrictionMode'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRestrictionModes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRestrictionModes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-notification-types/validate:
    post:
      description: Validate SubscriptionNotificationTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionNotificationType'
        required: true
      responses:
        "200":
          description: "SubscriptionNotificationType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/modeling-domains/validate:
    post:
      description: Validate ModelingDomains
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingDomain'
        required: true
      responses:
        "200":
          description: "ModelingDomain validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-seller-types/validate:
    post:
      description: Validate CommonsCommerceSellerTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceSellerType'
        required: true
      responses:
        "200":
          description: "CommonsCommerceSellerType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-shipping-rates/validate:
    post:
      description: Validate CatalogShippingRates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogShippingRate'
        required: true
      responses:
        "200":
          description: "CatalogShippingRate validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-sets:
    get:
      description: Get FlatRateRestrictionSets
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRestrictionSet'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRestrictionSets. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionSet'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRestrictionSet'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRestrictionSets
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRestrictionSets
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-product-delivery-items/validate:
    post:
      description: Validate SubscriptionCustomerProductDeliveryItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerProductDeliveryItem'
        required: true
      responses:
        "200":
          description: "SubscriptionCustomerProductDeliveryItem validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-subscription-payment-errors:
    get:
      description: Get BatchSubscriptionPaymentErrors
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/BatchSubscriptionPaymentError'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update BatchSubscriptionPaymentErrors. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchSubscriptionPaymentError'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/BatchSubscriptionPaymentError'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete BatchSubscriptionPaymentErrors
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options BatchSubscriptionPaymentErrors
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-statuses:
    get:
      description: Get SubscriptionCustomerStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubscriptionCustomerStatus'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SubscriptionCustomerStatuses. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerStatus'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SubscriptionCustomerStatus'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SubscriptionCustomerStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SubscriptionCustomerStatuses
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-integration-maps:
    get:
      description: Get CommonsIntegrationMaps
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsIntegrationMap'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsIntegrationMaps. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {, systemkey}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsIntegrationMap'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsIntegrationMap'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsIntegrationMaps
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsIntegrationMaps
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-notification-templates:
    get:
      description: Get CommonsCommerceNotificationTemplates
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceNotificationTemplate'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceNotificationTemplates. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceNotificationTemplate'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceNotificationTemplate'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceNotificationTemplates
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceNotificationTemplates
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-users/validate:
    post:
      description: Validate SecurityUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityUser'
        required: true
      responses:
        "200":
          description: "SecurityUser validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-item-types:
    get:
      description: Get CommonsCommerceItemTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceItemType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceItemTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceItemType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceItemType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceItemTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceItemTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-maxs-lines/validate:
    post:
      description: Validate FlatRateRestrictionMaxsLines
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionMaxLines'
        required: true
      responses:
        "200":
          description: "FlatRateRestrictionMaxLines validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-entities:
    get:
      description: Get SecurityEntities
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityEntity'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SecurityEntities. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntity'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SecurityEntity'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SecurityEntities
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SecurityEntities
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-notification-statuses:
    get:
      description: Get CommonsCommerceNotificationStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceNotificationStatus'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceNotificationStatuses. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceNotificationStatus'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceNotificationStatus'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceNotificationStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceNotificationStatuses
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-job-instances/validate:
    post:
      description: Validate BatchJobInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchJobInstance'
        required: true
      responses:
        "200":
          description: "BatchJobInstance validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-maxs-lines:
    get:
      description: Get FlatRateRestrictionMaxsLines
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRestrictionMaxLines'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRestrictionMaxsLines. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionMaxLines'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRestrictionMaxLines'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRestrictionMaxsLines
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRestrictionMaxsLines
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-operation-types/validate:
    post:
      description: Validate SecurityOperationTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityOperationType'
        required: true
      responses:
        "200":
          description: "SecurityOperationType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/customers/validate:
    post:
      description: Validate Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: "Customer validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-customers/validate:
    post:
      description: Validate FlatRateCustomers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateCustomer'
        required: true
      responses:
        "200":
          description: "FlatRateCustomer validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-refund-reasons:
    get:
      description: Get CommonsCommerceRefundReasons
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceRefundReason'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceRefundReasons. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceRefundReason'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceRefundReason'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceRefundReasons
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceRefundReasons
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-jobs/validate:
    post:
      description: Validate FlatRateJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateJob'
        required: true
      responses:
        "200":
          description: "FlatRateJob validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/courses/validate:
    post:
      description: Validate Courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        "200":
          description: "Course validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-delivery-event-status-types/validate:
    post:
      description: Validate CommonsCommerceDeliveryEventStatusTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceDeliveryEventStatusType'
        required: true
      responses:
        "200":
          description: "CommonsCommerceDeliveryEventStatusType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-units:
    get:
      description: Get CommonsUnits
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsUnit'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsUnits. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {commonCode}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsUnit'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsUnit'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsUnits
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsUnits
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-notifications:
    get:
      description: Get FlatRateNotifications
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateNotification'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateNotifications. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateNotification'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateNotification'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateNotifications
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateNotifications
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/integration-file-executions/validate:
    post:
      description: Validate IntegrationFileExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationFileExecution'
        required: true
      responses:
        "200":
          description: "IntegrationFileExecution validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-job-execution-items:
    get:
      description: Get FlatRateJobExecutionItems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateJobExecutionItem'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateJobExecutionItems. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateJobExecutionItem'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateJobExecutionItem'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateJobExecutionItems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateJobExecutionItems
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-sets/validate:
    post:
      description: Validate FlatRateRestrictionSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionSet'
        required: true
      responses:
        "200":
          description: "FlatRateRestrictionSet validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-provider-delivery-areas/validate:
    post:
      description: Validate CatalogItemProviderDeliveryAreas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemProviderDeliveryArea'
        required: true
      responses:
        "200":
          description: "CatalogItemProviderDeliveryArea validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-roles:
    get:
      description: Get SecurityRoles
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityRole'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SecurityRoles. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityRole'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SecurityRole'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SecurityRoles
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SecurityRoles
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-departments:
    get:
      description: Get FlatRateRestrictionDepartments
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRestrictionDepartment'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRestrictionDepartments. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionDepartment'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRestrictionDepartment'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRestrictionDepartments
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRestrictionDepartments
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-currencies/validate:
    post:
      description: Validate CommonsCurrencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCurrency'
        required: true
      responses:
        "200":
          description: "CommonsCurrency validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-set-maxs-lines/validate:
    post:
      description: Validate FlatRateRestrictionSetMaxsLines
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionSetMaxLines'
        required: true
      responses:
        "200":
          description: "FlatRateRestrictionSetMaxLines validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-job-parameter-types/validate:
    post:
      description: Validate BatchJobParameterTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchJobParameterType'
        required: true
      responses:
        "200":
          description: "BatchJobParameterType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-product-deliveries/validate:
    post:
      description: Validate SubscriptionCustomerProductDeliveries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerProductDelivery'
        required: true
      responses:
        "200":
          description: "SubscriptionCustomerProductDelivery validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-users:
    get:
      description: Get SecurityUsers
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityUser'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SecurityUsers. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityUser'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SecurityUser'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SecurityUsers
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SecurityUsers
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-statuses:
    get:
      description: Get BatchStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/BatchStatus'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update BatchStatuses. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchStatus'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/BatchStatus'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete BatchStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options BatchStatuses
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-days-of-week:
    get:
      description: Get CommonsDaysOfWeek
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsDayOfWeek'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsDaysOfWeek. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {dayOfWeek}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsDayOfWeek'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsDayOfWeek'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsDaysOfWeek
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsDaysOfWeek
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/modeling-attributes/validate:
    post:
      description: Validate ModelingAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingAttribute'
        required: true
      responses:
        "200":
          description: "ModelingAttribute validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-exit-statuses:
    get:
      description: Get BatchExitStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/BatchExitStatus'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update BatchExitStatuses. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExitStatus'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/BatchExitStatus'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete BatchExitStatuses
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options BatchExitStatuses
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/order-details/validate:
    post:
      description: Validate OrderDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetail'
        required: true
      responses:
        "200":
          description: "OrderDetail validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-payment-method-tags/validate:
    post:
      description: Validate CommonsCommercePaymentMethodTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommercePaymentMethodTag'
        required: true
      responses:
        "200":
          description: "CommonsCommercePaymentMethodTag validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/integratiosn-job/validate:
    post:
      description: Validate IntegratiosnJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationJob'
        required: true
      responses:
        "200":
          description: "IntegrationJob validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-systems/validate:
    post:
      description: Validate CommonsGECISystems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECISystem'
        required: true
      responses:
        "200":
          description: "CommonsGECISystem validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-scope-values:
    get:
      description: Get FlatRateRestrictionScopeValues
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRestrictionMinumumAmount'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRestrictionScopeValues. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionMinumumAmount'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRestrictionMinumumAmount'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRestrictionScopeValues
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRestrictionScopeValues
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-channels:
    get:
      description: Get CommonsGECIChannels
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsGECIChannel'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsGECIChannels. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECIChannel'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsGECIChannel'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsGECIChannels
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsGECIChannels
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-divisions:
    get:
      description: Get CommonsGECIDivisions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsGECIDivision'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsGECIDivisions. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECIDivision'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsGECIDivision'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsGECIDivisions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsGECIDivisions
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-subscription-payment-errors/validate:
    post:
      description: Validate BatchSubscriptionPaymentErrors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchSubscriptionPaymentError'
        required: true
      responses:
        "200":
          description: "BatchSubscriptionPaymentError validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-subscription-payment-error-types/validate:
    post:
      description: Validate BatchSubscriptionPaymentErrorTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchSubscriptionPaymentErrorType'
        required: true
      responses:
        "200":
          description: "BatchSubscriptionPaymentErrorType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-notification-templates/validate:
    post:
      description: Validate CommonsCommerceNotificationTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceNotificationTemplate'
        required: true
      responses:
        "200":
          description: "CommonsCommerceNotificationTemplate validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/i18n-message-languages:
    get:
      description: Get I18nMessageLanguages
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/I18nMessageLanguage'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update I18nMessageLanguages. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {language}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/I18nMessageLanguage'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/I18nMessageLanguage'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete I18nMessageLanguages
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options I18nMessageLanguages
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-scopes:
    get:
      description: Get FlatRateRestrictionScopes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRestrictionScope'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRestrictionScopes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionScope'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRestrictionScope'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRestrictionScopes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRestrictionScopes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-modes/validate:
    post:
      description: Validate FlatRateRestrictionModes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionMode'
        required: true
      responses:
        "200":
          description: "FlatRateRestrictionMode validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-status-reasons/validate:
    post:
      description: Validate SubscriptionCustomerStatusReasons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerStatusReason'
        required: true
      responses:
        "200":
          description: "SubscriptionCustomerStatusReason validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-families/validate:
    post:
      description: Validate FlatRateRestrictionFamilies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionFamily'
        required: true
      responses:
        "200":
          description: "FlatRateRestrictionFamily validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-set-items/validate:
    post:
      description: Validate FlatRateRestrictionSetItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionSetItem'
        required: true
      responses:
        "200":
          description: "FlatRateRestrictionSetItem validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-calendars/validate:
    post:
      description: Validate CommonsCalendars
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCalendar'
        required: true
      responses:
        "200":
          description: "CommonsCalendar validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-systems:
    get:
      description: Get CommonsSystems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsSystem'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsSystems. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsSystem'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsSystem'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsSystems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsSystems
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-usage-details:
    get:
      description: Get FlatRateUsageDetails
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateUsageDetail'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateUsageDetails. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateUsageDetail'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateUsageDetail'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateUsageDetails
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateUsageDetails
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-shipping-variations/validate:
    post:
      description: Validate CommonsCommerceShippingVariations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceShippingVariation'
        required: true
      responses:
        "200":
          description: "CommonsCommerceShippingVariation validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-sell-scopes/validate:
    post:
      description: Validate FlatRateSellScopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateSellScope'
        required: true
      responses:
        "200":
          description: "FlatRateSellScope validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/customer-consent-elements/validate:
    post:
      description: Validate CustomerConsentElements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerConsentElement'
        required: true
      responses:
        "200":
          description: "CustomerConsentElement validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-divisions/validate:
    post:
      description: Validate CommonsGECIDivisions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECIDivision'
        required: true
      responses:
        "200":
          description: "CommonsGECIDivision validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-sellers:
    get:
      description: Get CommonsCommerceSellers
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceSeller'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceSellers. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceSeller'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceSeller'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceSellers
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceSellers
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-user-timezones/validate:
    post:
      description: Validate SecurityUserTimezones
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityUserTimezone'
        required: true
      responses:
        "200":
          description: "SecurityUserTimezone validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-job-parameters/validate:
    post:
      description: Validate BatchJobParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchJobParameter'
        required: true
      responses:
        "200":
          description: "BatchJobParameter validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customers/validate:
    post:
      description: Validate SubscriptionCustomers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomer'
        required: true
      responses:
        "200":
          description: "SubscriptionCustomer validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-units/validate:
    post:
      description: Validate CommonsUnits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsUnit'
        required: true
      responses:
        "200":
          description: "CommonsUnit validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-renewal-reminders/validate:
    post:
      description: Validate FlatRateRenewalReminders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRenewalReminder'
        required: true
      responses:
        "200":
          description: "FlatRateRenewalReminder validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-payment-status-reasons:
    get:
      description: Get SubscriptionCustomerPaymentStatusReasons
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubscriptionCustomerPaymentStatusReason'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SubscriptionCustomerPaymentStatusReasons. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerPaymentStatusReason'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SubscriptionCustomerPaymentStatusReason'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SubscriptionCustomerPaymentStatusReasons
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SubscriptionCustomerPaymentStatusReasons
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-set-maxs-lines:
    get:
      description: Get FlatRateRestrictionSetMaxsLines
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRestrictionSetMaxLines'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRestrictionSetMaxsLines. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionSetMaxLines'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRestrictionSetMaxLines'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRestrictionSetMaxsLines
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRestrictionSetMaxsLines
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/customer-consents:
    get:
      description: Get CustomerConsents
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerConsent'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CustomerConsents. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerConsent'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CustomerConsent'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CustomerConsents
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CustomerConsents
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-languages/validate:
    post:
      description: Validate CommonsLanguages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsLanguage'
        required: true
      responses:
        "200":
          description: "CommonsLanguage validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /graphql:
    get:
      summary: GraphQL endpoint. Pleaase check /graphiql for more detail on the supported queries
      parameters:
       -
        name: query
        in: query
        description: GraphQL query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                required:
                 - data
                type: object
                properties:
                  data:
                    type: object
                    description: Query results
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: GraphQL endpoint
      requestBody:
        content:
          application/json:
            schema:
              required:
               - query
              type: object
              properties:
                query:
                  type: string
                  description: The GraphQL query to be executed
                variables:
                  type: object
                  description: Variables to use on the GraphQL query.  (Accepted but yet no supported by the implementation)
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                required:
                 - data
                type: object
                properties:
                  data:
                    type: object
                    description: Query results
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/modeling-attribute-sets:
    get:
      description: Get ModelingAttributeSets
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/ModelingAttributeSet'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update ModelingAttributeSets. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {name}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingAttributeSet'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/ModelingAttributeSet'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete ModelingAttributeSets
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options ModelingAttributeSets
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-seller-item-feature-types/validate:
    post:
      description: Validate CatalogSellerItemFeatureTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogSellerItemFeatureType'
        required: true
      responses:
        "200":
          description: "CatalogSellerItemFeatureType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/catalog-item-provider-delivery-ranges/validate:
    post:
      description: Validate CatalogItemProviderDeliveryRanges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemProviderDeliveryRange'
        required: true
      responses:
        "200":
          description: "CatalogItemProviderDeliveryRange validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-calendars:
    get:
      description: Get CommonsCalendars
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCalendar'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCalendars. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {, nameyear}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCalendar'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCalendar'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCalendars
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCalendars
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/batch-exit-statuses/validate:
    post:
      description: Validate BatchExitStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExitStatus'
        required: true
      responses:
        "200":
          description: "BatchExitStatus validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/order-statuses/validate:
    post:
      description: Validate OrderStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatus'
        required: true
      responses:
        "200":
          description: "OrderStatus validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-set-families:
    get:
      description: Get FlatRateRestrictionSetFamilies
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlatRateRestrictionSetFamily'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update FlatRateRestrictionSetFamilies. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionSetFamily'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/FlatRateRestrictionSetFamily'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete FlatRateRestrictionSetFamilies
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options FlatRateRestrictionSetFamilies
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-companies:
    get:
      description: Get CommonsGECICompanies
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsGECICompany'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsGECICompanies. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {salesCode} {procurementCodes} or {salesAdminCode}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECICompany'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsGECICompany'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsGECICompanies
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsGECICompanies
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-renewals/validate:
    post:
      description: Validate FlatRateRenewals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRenewal'
        required: true
      responses:
        "200":
          description: "FlatRateRenewal validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/security-roles/validate:
    post:
      description: Validate SecurityRoles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityRole'
        required: true
      responses:
        "200":
          description: "SecurityRole validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-time-units/validate:
    post:
      description: Validate CommonsTimeUnits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsTimeUnit'
        required: true
      responses:
        "200":
          description: "CommonsTimeUnit validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/subscription-customer-product-delivery-items:
    get:
      description: Get SubscriptionCustomerProductDeliveryItems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubscriptionCustomerProductDeliveryItem'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update SubscriptionCustomerProductDeliveryItems. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCustomerProductDeliveryItem'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/SubscriptionCustomerProductDeliveryItem'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete SubscriptionCustomerProductDeliveryItems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options SubscriptionCustomerProductDeliveryItems
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/integration-service-executions:
    get:
      description: Get IntegrationServiceExecutions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/IntegrationServiceExecution'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update IntegrationServiceExecutions. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationServiceExecution'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/IntegrationServiceExecution'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete IntegrationServiceExecutions
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options IntegrationServiceExecutions
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-customer-status-reasons/validate:
    post:
      description: Validate FlatRateCustomerStatusReasons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateCustomerStatusReason'
        required: true
      responses:
        "200":
          description: "FlatRateCustomerStatusReason validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/order-items:
    get:
      description: Get OrderItems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderItem'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update OrderItems. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {primeLineNumber}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/OrderItem'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete OrderItems
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options OrderItems
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-notifications/validate:
    post:
      description: Validate FlatRateNotifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateNotification'
        required: true
      responses:
        "200":
          description: "FlatRateNotification validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/billing-concept-types/validate:
    post:
      description: Validate BillingConceptTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingConceptType'
        required: true
      responses:
        "200":
          description: "BillingConceptType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-g-e-c-i-companies/validate:
    post:
      description: Validate CommonsGECICompanies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsGECICompany'
        required: true
      responses:
        "200":
          description: "CommonsGECICompany validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-renewal-reminder-types/validate:
    post:
      description: Validate FlatRateRenewalReminderTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRenewalReminderType'
        required: true
      responses:
        "200":
          description: "FlatRateRenewalReminderType validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/flat-rate-restriction-set-families/validate:
    post:
      description: Validate FlatRateRestrictionSetFamilies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateRestrictionSetFamily'
        required: true
      responses:
        "200":
          description: "FlatRateRestrictionSetFamily validation results. If validation is correct, empry response is returned"
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /blob/{blobId}:
    get:
      description: Search for for blob
      parameters:
       -
        name: blobId
        in: path
        description: Blob ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: The blob data
          content:
            application/x-www-form-urlencoded:
              schema:
                format: binary
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Updates blob
      parameters:
       -
        name: blobId
        in: path
        description: Blob ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              description: File to be uploaded
              format: binary
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/Blob'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    head:
      description: Search for for blob
      parameters:
       -
        name: blobId
        in: path
        description: Blob ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: string
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/commons-commerce-delivery-event-status-types:
    get:
      description: Get CommonsCommerceDeliveryEventStatusTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/filterParam'
       -
        $ref: '#/components/parameters/orderParam'
       -
        $ref: '#/components/parameters/offsetParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/totalCountParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonsCommerceDeliveryEventStatusType'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: "Add or update CommonsCommerceDeliveryEventStatusTypes. Documents without _id atttribute are created. Doucments with _id are updated. Update operation are full: missing attributes will be updated to null. Partial updates are available using query param \"patch\". On full updates attribute _id is required. On partil update, _id param or any of the unique indexes( {code}) is required "
      parameters:
       -
        name: patch
        in: query
        description: Flag para especificar que se quiere realizar una actualización parcial
        required: false
        style: form
        explode: true
        schema:
          type: boolean
       -
        $ref: '#/components/parameters/auditParam'
       -
        $ref: '#/components/parameters/auditAppUserParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonsCommerceDeliveryEventStatusType'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/CommonsCommerceDeliveryEventStatusType'
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "409":
          description: Resources has been modified by anohter user. Refresh data and apply changes again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete CommonsCommerceDeliveryEventStatusTypes
      parameters:
       -
        $ref: '#/components/parameters/idParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: "Invalid request cause due to to data validation errors, invalid filter or order param"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    options:
      description: Options CommonsCommerceDeliveryEventStatusTypes
      responses:
        "200":
          description: Always return 200
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
components:
  schemas:
    errors:
      minItems: 1
      uniqueItems: true
      type: array
      description: Set of errors returned for the operation
      items:
        $ref: '#/components/schemas/error'
    error:
      type: object
      properties:
        code:
          type: string
          enum:
           - TOKEN_EXPIRED
           - UNAUTHORIZED
           - CONCURRENT_MODIFICATION
           - UNHANDLED_EXCEPTION
           - UNEXISTING_RECORD
           - INVALID_FILTER
           - INVALID_ORDER
           - SERVICE_UNAVAILABLE
           - GRAPHQL_ERROR
           - DB_IN_READONLY
        description:
          type: string
        graphqlValidations:
          minItems: 1
          uniqueItems: true
          type: array
          description: Set of graphql validation errors
          items:
            $ref: '#/components/schemas/graphqlvalidation'
        validations:
          minItems: 1
          uniqueItems: true
          type: array
          description: Set of data validation errors
          items:
            $ref: '#/components/schemas/validation'
      description: Error definition
    graphqlvalidation:
      required:
       - errorType
       - message
      type: object
      properties:
        errorType:
          type: string
          description: The error type occured
        locations:
          minItems: 1
          uniqueItems: true
          type: array
          description: Graphql validation error location
          items:
            $ref: '#/components/schemas/location'
        message:
          type: string
          description: Graphql validation error message
      description: Graphql validation error definition
    location:
      required:
       - column
       - line
      type: object
      properties:
        line:
          type: integer
          description: Line where the error occurs
        column:
          type: integer
          description: Column where the error occurs
      description: Graphql validation error location definition
    validations:
      minItems: 1
      uniqueItems: true
      type: array
      description: Set of validation errors
      items:
        $ref: '#/components/schemas/validation'
    validation:
      required:
       - message
      type: object
      properties:
        errorCode:
          type: string
          description: 'The validation constraint that failed. Complete list of values are '
        fieldDeclaringClass:
          type: string
          description: The entity that violated the contstraint
        fieldName:
          type: string
          description: The entity's field that violated the contstraint
        message:
          type: string
          description: Validation message
        messageVariables:
          type: object
          description: Validation message variables
      description: Validation error definition
    Blob:
      required:
       - contentType
       - fileName
       - size
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: I18NRef"
          items:
            type: string
            enum:
             - Blob
        fileName:
          minLength: 1
          type: string
        contentType:
          minLength: 1
          type: string
        size:
          minimum: 1
          type: integer
      additionalProperties: false
    Order:
      required:
       - customer
       - date
       - externalId
       - origin
       - status
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: Order, OrderSingleSaleTransaction "
          items:
            type: string
            enum:
             - Order
             - OrderSingleSaleTransaction
        customer:
          $ref: '#/components/schemas/Customer'
        externalId:
          maxLength: 100
          minLength: 1
          type: string
          description: External system identifier
        date:
          type: string
          description: Order creation date time
          format: date-time
        status:
          $ref: '#/components/schemas/OrderStatus'
        origin:
          $ref: '#/components/schemas/CommonsGECISystem'
        totalAmount:
          multipleOf: 0.01
          type: number
          description: Sum of orderedItems saleAmount (excl. shipping costs) excluding order discounts
      additionalProperties: false
    OrderStatus:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: OrderStatus"
          items:
            type: string
            enum:
             - OrderStatus
        code:
          maxLength: 100
          minLength: 1
          type: string
        description:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    OrderSaleTransaction:
      required:
       - date
       - externalId
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: OrderSaleTransaction"
          items:
            type: string
            enum:
             - OrderSaleTransaction
        externalId:
          maxLength: 100
          minLength: 1
          type: string
          description: External system identifier
        date:
          type: string
          description: Transaction date
          format: date-time
        order:
          $ref: '#/components/schemas/Order'
      additionalProperties: false
    OrderDetail:
      required:
       - order
       - orderedItems
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: OrderDetail"
          items:
            type: string
            enum:
             - OrderDetail
        order:
          $ref: '#/components/schemas/Order'
        orderedItems:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
            description: Lines of the order
      additionalProperties: false
    OrderItem:
      required:
       - orderedItem
       - primeLineNumber
       - quantity
       - quantityUnit
       - saleAmount
       - status
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: OrderItem, OrderItemLoyaltyProgram "
          items:
            type: string
            enum:
             - OrderItem
             - OrderItemLoyaltyProgram
        primeLineNumber:
          maxLength: 100
          minLength: 1
          type: string
        quantity:
          multipleOf: 0.001
          type: number
        quantityUnit:
          $ref: '#/components/schemas/CommonsUnit'
        status:
          $ref: '#/components/schemas/OrderItemStatus'
        orderedItem:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
        loyaltyProgramBrand:
          $ref: '#/components/schemas/CatalogBrand'
        saleAmount:
          multipleOf: 0.01
          type: number
          description: The sale price multiplied by the quantity of an order line
        loyaltyProgramJoinDate:
          type: string
          format: date-time
      additionalProperties: false
    OrderItemStatus:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: OrderItemStatus"
          items:
            type: string
            enum:
             - OrderItemStatus
        code:
          maxLength: 100
          minLength: 1
          type: string
        description:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    BatchSubscriptionPaymentError:
      required:
       - jobExecution
       - paymentErrorType
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: BatchSubscriptionPaymentError"
          items:
            type: string
            enum:
             - BatchSubscriptionPaymentError
        jobExecution:
          $ref: '#/components/schemas/BatchJobExecution'
        subscriptionCode:
          maxLength: 100
          type: string
        paymentErrorType:
          $ref: '#/components/schemas/BatchSubscriptionPaymentErrorType'
      additionalProperties: false
    BatchSubscriptionPaymentErrorType:
      required:
       - code
       - type
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: BatchSubscriptionPaymentErrorType"
          items:
            type: string
            enum:
             - BatchSubscriptionPaymentErrorType
        code:
          maxLength: 100
          minLength: 1
          type: string
        origin:
          uniqueItems: true
          type: array
          items:
            type: array
            items:
              type: string
        retryable:
          type: boolean
        description:
          maxLength: 100
          type: string
        reason:
          maxLength: 100
          type: string
        type:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    SecurityUserTimezone:
      required:
       - name
       - utcOffset
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SecurityUserTimezone"
          items:
            type: string
            enum:
             - SecurityUserTimezone
        utcOffset:
          maxLength: 100
          minLength: 1
          pattern: "\\+[0-9]{2}\\:[0-9]{2}"
          type: string
          description: Zona horaria
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Nombre zona horaria
      additionalProperties: false
    SecurityUserFormat:
      required:
       - dateFormat
       - name
       - timestampFormat
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SecurityUserFormat"
          items:
            type: string
            enum:
             - SecurityUserFormat
        dateFormat:
          maxLength: 100
          minLength: 1
          type: string
          description: Formato de fecha
        name:
          maxLength: 100
          minLength: 1
          type: string
        timestampFormat:
          maxLength: 100
          minLength: 1
          type: string
          description: Formato de timestamp
      additionalProperties: false
    SecurityUser:
      required:
       - password
       - roles
       - username
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SecurityUser, Person "
          items:
            type: string
            enum:
             - SecurityUser
             - Person
        username:
          maxLength: 100
          minLength: 1
          type: string
          description: Nombre de usuario
        password:
          type: string
          description: Contraseña de acceso
        roles:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SecurityRole'
        userFormat:
          $ref: '#/components/schemas/SecurityUserFormat'
        timeZone:
          $ref: '#/components/schemas/SecurityUserTimezone'
        presentationVideo:
          type: string
          description: Vídeo de presentación
        photo:
          type: string
          description: Fotografía
        identityCards:
          uniqueItems: true
          type: array
          items:
            type: string
            description: Documentos de identificación
        birthDate:
          type: string
          description: Fecha de nacimiento
          format: date
        email:
          maxLength: 100
          type: string
          description: Correo electrónico
      additionalProperties: false
    SecuritySequence:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SecuritySequence"
          items:
            type: string
            enum:
             - SecuritySequence
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Nombre de la entidad
      additionalProperties: false
    SecurityRowLevelPolicy:
      required:
       - entity
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SecurityRowLevelPolicy"
          items:
            type: string
            enum:
             - SecurityRowLevelPolicy
        entity:
          $ref: '#/components/schemas/SecurityEntity'
        operations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SecurityOperationType'
        checkExpression:
          maxLength: 100
          type: string
          description: Regla de comprobación para escritura
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Nombre
        usingExpression:
          maxLength: 100
          type: string
          description: Regla de filtrado
      additionalProperties: false
    SecurityRole:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SecurityRole"
          items:
            type: string
            enum:
             - SecurityRole
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Nombre del perfil
        comments:
          maxLength: 100
          type: string
        policies:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SecurityRowLevelPolicy'
        privileges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SecurityAccessPrivilege'
      additionalProperties: false
    SecurityOperationType:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SecurityOperationType"
          items:
            type: string
            enum:
             - SecurityOperationType
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Nombre
      additionalProperties: false
    SecurityEntity:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SecurityEntity"
          items:
            type: string
            enum:
             - SecurityEntity
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Nombre de la entidad
        attributes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SecurityAttribute'
      additionalProperties: false
    SecurityAttribute:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SecurityAttribute"
          items:
            type: string
            enum:
             - SecurityAttribute
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Nombre del atributo
      additionalProperties: false
    SecurityAccessPrivilege:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SecurityAccessPrivilege"
          items:
            type: string
            enum:
             - SecurityAccessPrivilege
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Nombre
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SecurityEntity'
        attributes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SecurityAttribute'
        operations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SecurityOperationType'
        sequences:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SecuritySequence'
        blob:
          type: boolean
          description: Priviledge for blob access
      additionalProperties: false
    SchedulingProcess:
      required:
       - cronExpression
       - name
       - script
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SchedulingProcess"
          items:
            type: string
            enum:
             - SchedulingProcess
        cronExpression:
          maxLength: 100
          minLength: 1
          type: string
          description: Expresión de planificación (CRON)
        script:
          maxLength: 100000
          minLength: 1
          type: string
          description: Script (JavaScript)
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Nombre del proceso
      additionalProperties: false
    ModelingDomain:
      required:
       - entities
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: ModelingDomain"
          items:
            type: string
            enum:
             - ModelingDomain
        i18nLabel:
          type: object
          properties:
            pt_PT:
              type: string
            en_GB:
              type: string
            de_DE:
              type: string
            ca_ES:
              type: string
            fr_FR:
              type: string
            es_ES:
              type: string
          description: The name of the domain
        entities:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
            description: The domain entities
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: The name of the domain
      additionalProperties: false
    ModelingEntity:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: ModelingEntity"
          items:
            type: string
            enum:
             - ModelingEntity
        attributes:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
            description: The domain entities
        i18nLabel:
          type: object
          properties:
            pt_PT:
              type: string
            en_GB:
              type: string
            de_DE:
              type: string
            ca_ES:
              type: string
            fr_FR:
              type: string
            es_ES:
              type: string
          description: The name of the domain
        attributeSets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ModelingAttributeSet'
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: The name of the domain
      additionalProperties: false
    ModelingAttribute:
      required:
       - cardinality
       - containment
       - name
       - type
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: ModelingAttribute"
          items:
            type: string
            enum:
             - ModelingAttribute
        containment:
          type: boolean
          description: The name of the domain
        attributeSet:
          $ref: '#/components/schemas/ModelingAttributeSet'
        type:
          $ref: '#/components/schemas/ModelingAttributeType'
        i18nLabel:
          type: object
          properties:
            pt_PT:
              type: string
            en_GB:
              type: string
            de_DE:
              type: string
            ca_ES:
              type: string
            fr_FR:
              type: string
            es_ES:
              type: string
          description: The name of the domain
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: The name of the domain
        cardinality:
          $ref: '#/components/schemas/ModelingAttributeCardinality'
        entity:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
          description: The name of the domain
      additionalProperties: false
    ModelingAttributeSet:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: ModelingAttributeSet"
          items:
            type: string
            enum:
             - ModelingAttributeSet
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: The name of the domain
        i18nLabel:
          type: object
          properties:
            pt_PT:
              type: string
            en_GB:
              type: string
            de_DE:
              type: string
            ca_ES:
              type: string
            fr_FR:
              type: string
            es_ES:
              type: string
          description: The name of the domain
      additionalProperties: false
    ModelingAttributeType:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: ModelingAttributeType"
          items:
            type: string
            enum:
             - ModelingAttributeType
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: The name of the domain
      additionalProperties: false
    ModelingAttributeCardinality:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: ModelingAttributeCardinality"
          items:
            type: string
            enum:
             - ModelingAttributeCardinality
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: The name of the domain
      additionalProperties: false
    CatalogItem:
      required:
       - gtin
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogItem, Service, FlatRate, PhysicalGood, Book, Subscription, SubscriptionExternalProvider, SubscriptionPayment, SubscriptionFixed, SubscriptionVar, SubscriptionDurable, SubscriptionScheduled, SubscriptionProduct "
          items:
            type: string
            enum:
             - CatalogItem
             - Service
             - FlatRate
             - PhysicalGood
             - Book
             - Subscription
             - SubscriptionExternalProvider
             - SubscriptionPayment
             - SubscriptionFixed
             - SubscriptionVar
             - SubscriptionDurable
             - SubscriptionScheduled
             - SubscriptionProduct
        gtin:
          maxLength: 14
          minLength: 8
          type: string
          description: GTIN-14
        basicFeatures:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              pt_PT:
                type: array
                items:
                  type: object
              en_GB:
                type: array
                items:
                  type: object
              de_DE:
                type: array
                items:
                  type: object
              ca_ES:
                type: array
                items:
                  type: object
              fr_FR:
                type: array
                items:
                  type: object
              es_ES:
                type: array
                items:
                  type: object
            description: Product basic features list
        description:
          type: object
          properties:
            pt_PT:
              type: string
            en_GB:
              type: string
            de_DE:
              type: string
            ca_ES:
              type: string
            fr_FR:
              type: string
            es_ES:
              type: string
          description: Descripción del producto
        itemType:
          $ref: '#/components/schemas/CommonsCommerceItemType'
        parentItem:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
          description: The parent product. Defines attributes that are common to all children
        autorenewal:
          type: boolean
          description: Labels a service as autorewal (added so Sevice attribute set has at least one value)
        paymentMethodTag:
          $ref: '#/components/schemas/CommonsCommercePaymentMethodTag'
        requiresConsent:
          type: boolean
          description: Service requires customer consent for it's data to be delegated to a third party provider
        defaultPaymentMethodAccepted:
          type: boolean
        serviceConditionsUrl:
          type: object
          properties:
            pt_PT:
              type: string
            en_GB:
              type: string
            de_DE:
              type: string
            ca_ES:
              type: string
            fr_FR:
              type: string
            es_ES:
              type: string
          description: URL para acceder a documento con las condiciones del servicio
        trialAmount:
          multipleOf: 1
          maximum: 365
          minimum: 1
          type: number
          description: Amount of trial time units
        trialTimeUnit:
          $ref: '#/components/schemas/CommonsTimeUnit'
        ordersLimit:
          multipleOf: 1
          maximum: 1000
          minimum: 1
          type: number
          description: Amount of trial time units
        ordersLimitTimeUnit:
          $ref: '#/components/schemas/CommonsTimeUnit'
        ordersLimitAmount:
          multipleOf: 1
          maximum: 1000
          minimum: 1
          type: number
          description: Amount of trial time units
        lifespanAmount:
          type: number
          description: Duración de la tarifa plana
        lifespanTimeUnit:
          $ref: '#/components/schemas/CommonsTimeUnit'
        flatRateRestrictionSets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateRestrictionSet'
        flatRateRestrictions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateRestriction'
        flatRateDefaultTarget:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
          description: 'Default Flat rate product in auto renewal '
        compatibleFlatRatesOnPurchase:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
            description: Compatible flat rates on purchase time
        compatibleFlatRatesOnRenewal:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
            description: Conjunto de tarifas planas a la que se puede hacer upgrade en el momento de renovación
        compatibleFlatRatesOnUpgrade:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
            description: Conjunto de tarifas planas a la que se puede hacer upgrade
        renewalReminders:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateRenewalReminderType'
        renewalRemindersKO:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateRenewalReminderType'
        flatRateCreatedNotificationTemplate:
          $ref: '#/components/schemas/CommonsCommerceNotificationTemplate'
        failureChargeTemplate:
          $ref: '#/components/schemas/CommonsCommerceNotificationTemplate'
        subscriptionDurableDurationAmount:
          type: number
        subscriptionDurableTimeUnit:
          $ref: '#/components/schemas/CommonsTimeUnit'
        subscriptionRepeatFrecuency:
          $ref: '#/components/schemas/CommonsDuration'
        subscriptionScheduledEventCount:
          type: number
        consumableSubscription:
          type: boolean
          description: Label a subscription as consumable (payed and used only once)
        subscriptionExternalProvider:
          $ref: '#/components/schemas/CatalogItemProvider'
        subscriptionExternaProviderItemId:
          maxLength: 100
          type: string
          description: External provider Item ID
        subscriptionVarPaymentGraceAmount:
          type: number
          description: Payment grace period por extensible subscriptions
        subscriptionVarPaymentGraceTimeUnit:
          $ref: '#/components/schemas/CommonsTimeUnit'
        subscriptionVarPaymentFreqAmount:
          type: number
          description: Subscription extension payment frequency
        subscriptionVarPaymentFreqTimeUnit:
          $ref: '#/components/schemas/CommonsTimeUnit'
        subscriptionVarPaymentItem:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
          description: Subscription extension product for no extensible products
        subscriptionCompatibleOnRenewal:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
            description: Conjunto de suscripciones a la que se puede hacer upgrade en el momento de renovación
        subscriptionCompatibleOnPurchase:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
            description: Compatible subscriptions on purchase time
        subscriptionNotifications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionNotificationType'
        subscriptionProducts:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
        secondChargeTemplate:
          $ref: '#/components/schemas/CommonsCommerceNotificationTemplate'
        graceDays:
          maximum: 10000
          type: number
      additionalProperties: false
    CatalogSelllerItem:
      required:
       - items
       - sellerCode
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogSelllerItem, ECISaleReference, CatalogSellerItemFlatRate, CatalogSellerItemSubscription "
          items:
            type: string
            enum:
             - CatalogSelllerItem
             - ECISaleReference
             - CatalogSellerItemFlatRate
             - CatalogSellerItemSubscription
        sellerCode:
          maxLength: 100
          minLength: 1
          type: string
          description: 'Seller code '
        sku:
          maxLength: 100
          type: string
          description: SKU
        name:
          maxLength: 100
          type: string
          description: Name
        items:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
        mainItem:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
          description: Main or default item related to the seller reference
        typeReference:
          maxLength: 100
          type: string
          description: Type Reference
        purchaseReference:
          maxLength: 100
          type: string
        company:
          $ref: '#/components/schemas/CommonsGECICompany'
        publications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CatalogSellerItemPublication'
        salePrice:
          multipleOf: 0.01
          minimum: 0
          type: number
        salePriceCurrency:
          $ref: '#/components/schemas/CommonsCurrency'
        shippingRates:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
        sellModes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsCommerceSellMode'
        sites:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsCommerceSite'
        collectives:
          uniqueItems: true
          type: array
          items:
            type: array
            description: Collectives in which the customer should be included on product purchase
            items:
              type: string
        sellingFeatures:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CatalogSellerItemFeature'
        flatRateSellScopes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateSellScope'
        flatRateCompatibleOnVoucherRedemption:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
            description: Flat rate sell references compatibles with this one when purchasing with voucher
        flatRateActions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateActionType'
        subscriptionLastOrderDate:
          type: string
          description: Last order date for fixed date product subscriptions
          format: date-time
        subscriptionLaunchDate:
          type: string
          description: Launch date on Order Creation
          format: date-time
        subscriptionDeliveryEndDate:
          type: string
          description: Delivery Date on Order Creation
          format: date-time
        subscriptionShipDate:
          type: string
          description: Ship date on Order Creation
          format: date-time
        subscriptionPaymentDisabled:
          type: boolean
      additionalProperties: false
    CatalogSellerItemPublication:
      required:
       - startDate
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogSellerItemPublication"
          items:
            type: string
            enum:
             - CatalogSellerItemPublication
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
      additionalProperties: false
    CatalogSellerItemFeature:
      required:
       - feature
       - type
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogSellerItemFeature"
          items:
            type: string
            enum:
             - CatalogSellerItemFeature
        feature:
          required:
           - es_ES
          type: object
          properties:
            pt_PT:
              type: string
            en_GB:
              type: string
            de_DE:
              type: string
            ca_ES:
              type: string
            fr_FR:
              type: string
            es_ES:
              type: string
          description: Feature
        type:
          $ref: '#/components/schemas/CatalogSellerItemFeatureType'
      additionalProperties: false
    CatalogSellerItemFeatureType:
      required:
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogSellerItemFeatureType"
          items:
            type: string
            enum:
             - CatalogSellerItemFeatureType
        code:
          maxLength: 100
          minLength: 1
          type: string
        description:
          maxLength: 100
          type: string
          description: Description
      additionalProperties: false
    CatalogItemProvider:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogItemProvider, ECISaleChannel "
          items:
            type: string
            enum:
             - CatalogItemProvider
             - ECISaleChannel
        name:
          maxLength: 100
          minLength: 1
          type: string
        code:
          maxLength: 100
          minLength: 1
          type: string
        consentCode:
          maxLength: 100
          type: string
          description: 'GDPR consent code '
        fiscalNumber:
          maxLength: 100
          type: string
          description: Fiscal ID for the provicers
        deliveryAreas:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CatalogItemProviderDeliveryArea'
        subchannels:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CatalogItemProviderSubchannel'
        serviceType:
          $ref: '#/components/schemas/CatalogItemProviderServiceType'
      additionalProperties: false
    CatalogItemProviderDeliveryArea:
      required:
       - deliveryRanges
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogItemProviderDeliveryArea"
          items:
            type: string
            enum:
             - CatalogItemProviderDeliveryArea
        deliveryArea:
          $ref: '#/components/schemas/CommonsAdministrativeArea'
        deliveryAreaGroup:
          $ref: '#/components/schemas/CommonsAdministrativeAreaGroup'
        daysAfterHoliday:
          type: number
        deliveryRanges:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CatalogItemProviderDeliveryRange'
        deliveryExceptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CatalogItemProviderDeliveryAreaExceptDate'
      additionalProperties: false
    CatalogItemProviderDeliveryRange:
      required:
       - cuttingHours
       - endTime
       - startTime
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogItemProviderDeliveryRange"
          items:
            type: string
            enum:
             - CatalogItemProviderDeliveryRange
        dayOfWeek:
          $ref: '#/components/schemas/CommonsDayOfWeek'
        day:
          type: string
          format: date
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        cuttingHours:
          type: number
      additionalProperties: false
    CatalogItemProviderSubchannel:
      required:
       - businessLine
       - subchannel
       - subchannelType
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogItemProviderSubchannel, CatalogItemProviderSubchTicket "
          items:
            type: string
            enum:
             - CatalogItemProviderSubchannel
             - CatalogItemProviderSubchTicket
        subchannel:
          $ref: '#/components/schemas/CommonsGECISubchannel'
        businessLine:
          $ref: '#/components/schemas/CommonsGECIBusinessLine'
        subchannelType:
          $ref: '#/components/schemas/CommonsGECISubchannelType'
        ticketingAfterSalesUrl:
          maxLength: 500
          type: string
        ticketingAfterSalesMessage:
          maxLength: 500
          type: string
        description:
          maxLength: 100
          type: string
          description: Description
      additionalProperties: false
    CatalogItemProviderDeliveryAreaExceptDateType:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogItemProviderDeliveryAreaExceptDateType"
          items:
            type: string
            enum:
             - CatalogItemProviderDeliveryAreaExceptDateType
        code:
          maxLength: 100
          minLength: 1
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    CatalogItemProviderDeliveryAreaExceptDate:
      required:
       - calendar
       - type
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogItemProviderDeliveryAreaExceptDate"
          items:
            type: string
            enum:
             - CatalogItemProviderDeliveryAreaExceptDate
        calendar:
          $ref: '#/components/schemas/CommonsCalendar'
        type:
          $ref: '#/components/schemas/CatalogItemProviderDeliveryAreaExceptDateType'
      additionalProperties: false
    CatalogBrand:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogBrand, CatalogBrandLoyaltyProgram "
          items:
            type: string
            enum:
             - CatalogBrand
             - CatalogBrandLoyaltyProgram
        code:
          maxLength: 100
          minLength: 1
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
        externalId:
          maxLength: 100
          type: string
          description: External system identifier
        logo:
          type: string
        loyaltyProgramIdentifier:
          maxLength: 100
          type: string
          description: Loyalty Program Identifier
        loyaltyProgramName:
          maxLength: 100
          type: string
          description: Loyalty Program Name
        loyaltyProgramOrganization:
          $ref: '#/components/schemas/CatalogItemProvider'
        loyaltyProgramSignupUrl:
          maxLength: 100
          type: string
        loyaltyProgramConsentText:
          type: object
          properties:
            pt_PT:
              type: string
            en_GB:
              type: string
            de_DE:
              type: string
            ca_ES:
              type: string
            fr_FR:
              type: string
            es_ES:
              type: string
          description: Consent text for GDPR consent
        gdprConsentIdentifer:
          maxLength: 100
          type: string
          description: GDPR Consent identifier
        gdprConsentFunction:
          maxLength: 100
          type: string
          description: The functionality of the system form which the consent is required
        loyaltyProgramActivated:
          type: boolean
          description: Loyalty Program Brand activated
        gdprConsentVersion:
          maxLength: 100
          type: string
          description: GDPR Consent version
      additionalProperties: false
    CatalogItemSubscriptionProduct:
      required:
       - item
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogItemSubscriptionProduct"
          items:
            type: string
            enum:
             - CatalogItemSubscriptionProduct
        item:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
        quantity:
          type: number
        quantityUnit:
          $ref: '#/components/schemas/CommonsUnit'
        type:
          $ref: '#/components/schemas/CatalogItemSubscriptionProductType'
        isRealItem:
          type: boolean
      additionalProperties: false
    CatalogShippingRate:
      required:
       - name
       - shippingRateItem
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogShippingRate"
          items:
            type: string
            enum:
             - CatalogShippingRate
        name:
          maxLength: 100
          minLength: 1
          type: string
        shippingRateItem:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
        shippingDestinationArea:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsAdministrativeAreaGroup'
      additionalProperties: false
    CatalogItemSubscriptionProductType:
      required:
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogItemSubscriptionProductType"
          items:
            type: string
            enum:
             - CatalogItemSubscriptionProductType
        code:
          maxLength: 100
          minLength: 1
          type: string
        name:
          maxLength: 100
          type: string
      additionalProperties: false
    CatalogItemProviderServiceType:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CatalogItemProviderServiceType"
          items:
            type: string
            enum:
             - CatalogItemProviderServiceType
        code:
          maxLength: 100
          minLength: 1
          type: string
        description:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    CommonsCommerceNotificationType:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceNotificationType"
          items:
            type: string
            enum:
             - CommonsCommerceNotificationType
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Notification type code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Notification type name
      additionalProperties: false
    CommonsCommerceNotificationStatus:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceNotificationStatus"
          items:
            type: string
            enum:
             - CommonsCommerceNotificationStatus
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Notification status code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Notification status name
      additionalProperties: false
    CommonsCommerceShippingVariation:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceShippingVariation"
          items:
            type: string
            enum:
             - CommonsCommerceShippingVariation
        code:
          maxLength: 100
          minLength: 1
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Nombre
      additionalProperties: false
    CommonsCommerceNotificationTemplate:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceNotificationTemplate"
          items:
            type: string
            enum:
             - CommonsCommerceNotificationTemplate
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Unique code for notification templates
        description:
          maxLength: 100
          minLength: 1
          type: string
          description: Template description for describing the template usage
      additionalProperties: false
    CommonsCommerceShippingType:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceShippingType"
          items:
            type: string
            enum:
             - CommonsCommerceShippingType
        code:
          maxLength: 50
          minLength: 1
          type: string
          description: Shipping Type code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Shipping Type name
      additionalProperties: false
    CommonsCommerceItemType:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceItemType"
          items:
            type: string
            enum:
             - CommonsCommerceItemType
        code:
          maxLength: 3
          minLength: 1
          type: string
          description: Item Type code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Item type name
      additionalProperties: false
    CommonsCommercePaymentMethod:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommercePaymentMethod"
          items:
            type: string
            enum:
             - CommonsCommercePaymentMethod
        code:
          maxLength: 3
          minLength: 1
          type: string
          description: Payment method code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Payment method name
      additionalProperties: false
    CommonsCommercePaymentMethodTag:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommercePaymentMethodTag"
          items:
            type: string
            enum:
             - CommonsCommercePaymentMethodTag
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Codes
        name:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    CommonsCommerceSellerType:
      required:
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceSellerType"
          items:
            type: string
            enum:
             - CommonsCommerceSellerType
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Code
        name:
          maxLength: 100
          type: string
      additionalProperties: false
    CommonsCommerceRefundReason:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceRefundReason"
          items:
            type: string
            enum:
             - CommonsCommerceRefundReason
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Code
        name:
          maxLength: 200
          minLength: 1
          type: string
          description: The definition for the refund reason
        message:
          type: object
          properties:
            pt_PT:
              type: string
            en_GB:
              type: string
            de_DE:
              type: string
            ca_ES:
              type: string
            fr_FR:
              type: string
            es_ES:
              type: string
          description: Label
        suitableForCustomers:
          type: boolean
          description: Flag that shows that this refund reason can be used by users in post-sale actions
        equalExchange:
          type: boolean
          description: Flag that identifies that this refund reason allow exchange a product by an equal
        refundCosts:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
      additionalProperties: false
    CommonsCommerceRefundCost:
      required:
       - sellerItem
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceRefundCost"
          items:
            type: string
            enum:
             - CommonsCommerceRefundCost
        sellerItem:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
      additionalProperties: false
    CommonsCommerceCancellationReason:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceCancellationReason"
          items:
            type: string
            enum:
             - CommonsCommerceCancellationReason
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: The definition for the cancellation reason
        message:
          type: object
          properties:
            pt_PT:
              type: string
            en_GB:
              type: string
            de_DE:
              type: string
            ca_ES:
              type: string
            fr_FR:
              type: string
            es_ES:
              type: string
          description: Label
        suitableForCustomers:
          type: boolean
          description: Flag that shows that this refund reason can be used by users in post-sale actions
      additionalProperties: false
    CommonsCommerceSite:
      required:
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceSite"
          items:
            type: string
            enum:
             - CommonsCommerceSite
        code:
          maxLength: 100
          minLength: 1
          type: string
        url:
          uniqueItems: true
          type: array
          items:
            type: array
            items:
              type: string
        language:
          $ref: '#/components/schemas/CommonsLanguage'
      additionalProperties: false
    CommonsCommerceSellMode:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceSellMode"
          items:
            type: string
            enum:
             - CommonsCommerceSellMode
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Sell mode code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Name
      additionalProperties: false
    CommonsCommerceShoppingCentre:
      required:
       - code
       - name
       - seller
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceShoppingCentre, ShoppingCentreGECI "
          items:
            type: string
            enum:
             - CommonsCommerceShoppingCentre
             - ShoppingCentreGECI
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Shopping Centre Code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Shopping Centre Name
        seller:
          $ref: '#/components/schemas/CommonsCommerceSeller'
        geciCompany:
          $ref: '#/components/schemas/CommonsGECICompany'
        streetAddress:
          maxLength: 100
          type: string
          description: Street address
        postalCode:
          maxLength: 100
          type: string
        addressLocality:
          $ref: '#/components/schemas/CommonsAdministrativeArea'
        latitude:
          multipleOf: 1.0E-8
          maximum: 90
          minimum: -90
          type: number
          description: Latitud
        longitude:
          multipleOf: 1.0E-8
          maximum: 180
          minimum: -180
          type: number
          description: Longitud
        openingHours:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              pt_PT:
                type: array
                items:
                  type: object
              en_GB:
                type: array
                items:
                  type: object
              de_DE:
                type: array
                items:
                  type: object
              ca_ES:
                type: array
                items:
                  type: object
              fr_FR:
                type: array
                items:
                  type: object
              es_ES:
                type: array
                items:
                  type: object
      additionalProperties: false
    CommonsCommerceSeller:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceSeller"
          items:
            type: string
            enum:
             - CommonsCommerceSeller
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Seller code
        name:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    CommonsCommerceDeliveryEventStatusType:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCommerceDeliveryEventStatusType"
          items:
            type: string
            enum:
             - CommonsCommerceDeliveryEventStatusType
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Code
        name:
          maxLength: 100
          minLength: 1
          type: string
        message:
          type: object
          properties:
            pt_PT:
              type: string
            en_GB:
              type: string
            de_DE:
              type: string
            ca_ES:
              type: string
            fr_FR:
              type: string
            es_ES:
              type: string
          description: Label
        suitableForCustomers:
          type: boolean
          description: Flag that shows that this event status can be viewed by users
      additionalProperties: false
    IntegrationStatus:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: IntegrationStatus"
          items:
            type: string
            enum:
             - IntegrationStatus
        code:
          maxLength: 100
          minLength: 1
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    IntegrationJobExecution:
      required:
       - code
       - end
       - job
       - start
       - status
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: IntegrationJobExecution, IntegrationJobExecutionFile, IntegrationJobExecutionJdbc, IntegrationJobExecutionService, IntegrationJobExecutionFr "
          items:
            type: string
            enum:
             - IntegrationJobExecution
             - IntegrationJobExecutionFile
             - IntegrationJobExecutionJdbc
             - IntegrationJobExecutionService
             - IntegrationJobExecutionFr
        code:
          maxLength: 100
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]* [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{5}\\+[0-9]{2}$"
          type: string
          description: Unique identifier for job execution. Concatenation of job name and execution time
        job:
          $ref: '#/components/schemas/IntegrationJob'
        start:
          type: string
          description: Job start timestamp
          format: date-time
        end:
          type: string
          description: Job finaliztion timestamp
          format: date-time
        status:
          $ref: '#/components/schemas/IntegrationStatus'
        flatRateCustomer:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
        files:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IntegrationFileExecution'
        jdbcQueries:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IntegrationJdbcExecution'
        services:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IntegrationServiceExecution'
      additionalProperties: false
    IntegrationFileExecution:
      required:
       - fileName
       - fileType
       - hash
       - status
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: IntegrationFileExecution"
          items:
            type: string
            enum:
             - IntegrationFileExecution
        fileType:
          maxLength: 100
          minLength: 1
          type: string
          description: File type
        fileName:
          maxLength: 100
          minLength: 1
          type: string
          description: Filie name
        status:
          $ref: '#/components/schemas/IntegrationStatus'
        error:
          maxLength: 100
          type: string
          description: Error detail when file processing failed
        hash:
          maxLength: 100
          minLength: 1
          type: string
          description: File hash
      additionalProperties: false
    IntegrationJob:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: IntegrationJob"
          items:
            type: string
            enum:
             - IntegrationJob
        code:
          maxLength: 100
          minLength: 1
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    IntegrationJdbcExecution:
      required:
       - queryAlias
       - status
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: IntegrationJdbcExecution"
          items:
            type: string
            enum:
             - IntegrationJdbcExecution
        queryAlias:
          maxLength: 9999
          minLength: 1
          type: string
        rowCount:
          type: number
          description: Número de filas procesadas
        status:
          $ref: '#/components/schemas/IntegrationStatus'
        rangeColumns:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IntegrationJdbcExecutionRangeColumn'
        filter:
          maxLength: 100
          type: string
          description: Filter applied in JDBC Execution
      additionalProperties: false
    IntegrationJdbcExecutionRangeColumn:
      required:
       - column
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: IntegrationJdbcExecutionRangeColumn"
          items:
            type: string
            enum:
             - IntegrationJdbcExecutionRangeColumn
        column:
          maxLength: 100
          minLength: 1
          type: string
          description: Columna usada para criterio de rango
        minValue:
          maxLength: 9999
          type: string
          description: Valor mínimo del rango
        maxValue:
          maxLength: 9999
          type: string
      additionalProperties: false
    IntegrationServiceExecution:
      required:
       - status
       - system
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: IntegrationServiceExecution"
          items:
            type: string
            enum:
             - IntegrationServiceExecution
        system:
          $ref: '#/components/schemas/CommonsSystem'
        inputData:
          maxLength: 100
          type: string
        outputData:
          maxLength: 100
          type: string
          description: Output data
        status:
          $ref: '#/components/schemas/IntegrationStatus'
        statusMessage:
          maxLength: 100
          type: string
          description: Message
      additionalProperties: false
    Customer:
      required:
       - cuc
       - invoiceRequested
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: Customer, CustomerByPhone, CustomerNotRegistered "
          items:
            type: string
            enum:
             - Customer
             - CustomerByPhone
             - CustomerNotRegistered
        cuc:
          maxLength: 100
          minLength: 1
          type: string
          description: Customer Unique Code
        email:
          maxLength: 100
          type: string
          description: Customers email
        digitalWalletIdentifier:
          maxLength: 100
          type: string
          description: Alternate Digital Wallet ID
        invoiceRequested:
          type: boolean
          description: Si el cliente require factura
        consents:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CustomerConsent'
        merges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CustomerMerge'
        mimoPreferredShoppingCentre:
          $ref: '#/components/schemas/CommonsCommerceShoppingCentre'
      additionalProperties: false
    CustomerConsent:
      required:
       - consentElements
       - provider
       - timestamp
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CustomerConsent"
          items:
            type: string
            enum:
             - CustomerConsent
        timestamp:
          type: string
          description: Time and date when the consent was sent to the provider
          format: date-time
        provider:
          $ref: '#/components/schemas/CatalogItemProvider'
        customerProviderId:
          maxLength: 100
          type: string
          description: The ID of the customer in the provider
        apiRequest:
          maxLength: 2000
          type: string
          description: Request sent to API provider to send the consent
        consentElements:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CustomerConsentElement'
        originalCuc:
          maxLength: 100
          type: string
          description: Original CUC (for Customer Merges)
      additionalProperties: false
    CustomerConsentElement:
      required:
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CustomerConsentElement"
          items:
            type: string
            enum:
             - CustomerConsentElement
        code:
          maxLength: 100
          type: string
        description:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    CustomerMerge:
      required:
       - cuc
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CustomerMerge"
          items:
            type: string
            enum:
             - CustomerMerge
        cuc:
          maxLength: 100
          minLength: 1
          type: string
          description: Customer identifier
        mergedIntoCuc:
          maxLength: 100
          type: string
        mergeDate:
          type: string
          format: date-time
        flatrateCustomers:
          uniqueItems: true
          type: array
          items:
            type: array
            description: Flatrate customers
            items:
              type: string
        subscriptionCustomers:
          uniqueItems: true
          type: array
          items:
            type: array
            description: Subscription customers
            items:
              type: string
        orders:
          uniqueItems: true
          type: array
          items:
            type: array
            description: Orders
            items:
              type: string
      additionalProperties: false
    TeachingGrade:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: TeachingGrade"
          items:
            type: string
            enum:
             - TeachingGrade
        code:
          maxLength: 10
          minLength: 1
          type: string
          description: Código del curso
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Nombre del curso
        type:
          maxLength: 100
          type: string
          description: Tipo de estudios
        country:
          $ref: '#/components/schemas/CommonsAdministrativeArea'
      additionalProperties: false
    TeachingCenter:
      required:
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: TeachingCenter"
          items:
            type: string
            enum:
             - TeachingCenter
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Código del centro
        governmentCode:
          maxLength: 100
          type: string
        name:
          maxLength: 1000
          type: string
          description: Nombre del centro
        image:
          type: string
          description: Escudo / Logotipo
        type:
          maxLength: 100
          minLength: 1
          type: string
          description: Tipo de centro
        group:
          maxLength: 100
          type: string
          description: Grupo de centro
        lead:
          maxLength: 100
          type: string
          description: Persona de contacto
        phone:
          maxLength: 100
          type: string
          description: Teléfono
        phone2:
          maxLength: 100
          type: string
          description: Otro teléfono
        email:
          maxLength: 100
          type: string
          description: Dirección de correo electrónico
        fax:
          maxLength: 100
          type: string
          description: FAX
        comments:
          maxLength: 500
          type: string
          description: Observaciones
        postalCode:
          maxLength: 100
          type: string
          description: Código postal
        location:
          $ref: '#/components/schemas/CommonsAdministrativeArea'
        address:
          maxLength: 100
          type: string
          description: Dirección
        formattedAddress:
          maxLength: 100
          type: string
          description: Dirección formateada
        latitude:
          multipleOf: 1.0E-8
          maximum: 90
          minimum: -90
          type: number
          description: Latitud
        longitude:
          multipleOf: 1.0E-8
          maximum: 180
          minimum: -180
          type: number
          description: Longitud
        courses:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
            description: Cursos
      additionalProperties: false
    Material:
      required:
       - item
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: Material"
          items:
            type: string
            enum:
             - Material
        item:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
          description: Referencia de venta
        quantity:
          multipleOf: 1
          maximum: 1000000
          minimum: 1
          type: number
          description: Cantidad
        size:
          maxLength: 100
          type: string
          description: Talla
      additionalProperties: false
    Course:
      required:
       - grade
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: Course"
          items:
            type: string
            enum:
             - Course
        grade:
          $ref: '#/components/schemas/TeachingGrade'
        materials:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
            description: Libros y material escolar
        numStudents:
          multipleOf: 1
          maximum: 1000000
          minimum: 1
          type: number
          description: Número de alumnos
      additionalProperties: false
    BatchJobInstance:
      required:
       - jobName
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: BatchJobInstance"
          items:
            type: string
            enum:
             - BatchJobInstance
        jobName:
          maxLength: 100
          minLength: 1
          type: string
        jobKey:
          maxLength: 2500
          type: string
      additionalProperties: false
    BatchJobExecution:
      required:
       - createTime
       - jobExecutionId
       - jobInstance
       - startTime
       - status
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: BatchJobExecution"
          items:
            type: string
            enum:
             - BatchJobExecution
        jobInstance:
          $ref: '#/components/schemas/BatchJobInstance'
        jobExecutionId:
          maxLength: 100
          minLength: 1
          type: string
        jobParameters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BatchJobParameter'
        stepExecutions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BatchStepExecution'
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        createTime:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/BatchStatus'
        exitStatus:
          $ref: '#/components/schemas/BatchExitStatus'
        exitStatusMessage:
          maxLength: 2500
          type: string
        jobConfigurationName:
          maxLength: 2500
          type: string
        shortContext:
          maxLength: 2500
          type: string
        serializedContext:
          maxLength: 2500
          type: string
          description: URL that reoslves BLOB with serialized data
      additionalProperties: false
    BatchJobParameter:
      required:
       - identifying
       - name
       - parameterType
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: BatchJobParameter"
          items:
            type: string
            enum:
             - BatchJobParameter
        name:
          maxLength: 100
          minLength: 1
          type: string
        parameterType:
          $ref: '#/components/schemas/BatchJobParameterType'
        parameter:
          maxLength: 250
          type: string
        identifying:
          type: boolean
      additionalProperties: false
    BatchJobParameterType:
      required:
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: BatchJobParameterType"
          items:
            type: string
            enum:
             - BatchJobParameterType
        code:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    BatchStepExecution:
      required:
       - commitCount
       - filterCount
       - processSkipCount
       - readCount
       - readSkipCount
       - rollbackCount
       - startTime
       - status
       - stepName
       - writeCount
       - writeSkipCount
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: BatchStepExecution"
          items:
            type: string
            enum:
             - BatchStepExecution
        stepName:
          maxLength: 100
          minLength: 1
          type: string
        status:
          $ref: '#/components/schemas/BatchStatus'
        readCount:
          type: number
        readSkipCount:
          type: number
        filterCount:
          type: number
        processSkipCount:
          type: number
        writeCount:
          type: number
        commitCount:
          type: number
        rollbackCount:
          type: number
        writeSkipCount:
          type: number
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        shortContext:
          maxLength: 2500
          type: string
        serializedContext:
          maxLength: 2500
          type: string
          description: URL that reoslves BLOB with serialized data
        exitStatus:
          $ref: '#/components/schemas/BatchExitStatus'
        exitStatusMessage:
          maxLength: 2500
          type: string
      additionalProperties: false
    BatchStatus:
      required:
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: BatchStatus"
          items:
            type: string
            enum:
             - BatchStatus
        code:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    BatchExitStatus:
      required:
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: BatchExitStatus"
          items:
            type: string
            enum:
             - BatchExitStatus
        code:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    CommonsLanguage:
      required:
       - codeISO6391
       - codeISO6392t
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsLanguage"
          items:
            type: string
            enum:
             - CommonsLanguage
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Country Name (ES)
        codeISO6391:
          maxLength: 2
          minLength: 2
          type: string
          description: 'Two letter ISO 639-1 Code '
        codeISO6392t:
          maxLength: 3
          minLength: 3
          type: string
          description: "Three-letter codes, for the same languages as 639-1"
      additionalProperties: false
    CommonsTimeUnit:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsTimeUnit"
          items:
            type: string
            enum:
             - CommonsTimeUnit
        code:
          maxLength: 2
          minLength: 1
          type: string
          description: Name
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Name
      additionalProperties: false
    CommonsAdministrativeArea:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsAdministrativeArea, Continent, CountrySubdivision, Town, WorldWide, TownSubdivision, Country "
          items:
            type: string
            enum:
             - CommonsAdministrativeArea
             - Continent
             - CountrySubdivision
             - Town
             - WorldWide
             - TownSubdivision
             - Country
        bankHolidayCalendars:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsCalendar'
        postalCode:
          maxLength: 100
          type: string
        codeISO31662:
          maxLength: 100
          type: string
        codeISO31661Numeric:
          maxLength: 100
          type: string
          description: ISO Code (Numeric)
        codeISO31661Alfa3:
          maxLength: 100
          type: string
          description: ISO Code (Alfa-3)
        codeISO31661:
          maxLength: 100
          type: string
          description: ISO Code (Alfa-2)
        parent:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
          description: Location parent
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Name
      additionalProperties: false
    CommonsAdministrativeAreaGroup:
      required:
       - administrativeAreas
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsAdministrativeAreaGroup"
          items:
            type: string
            enum:
             - CommonsAdministrativeAreaGroup
        administrativeAreas:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsAdministrativeArea'
        name:
          maxLength: 100
          minLength: 1
          type: string
        code:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    CommonsCurrency:
      required:
       - code
       - minorUnit
       - name
       - numericCode
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCurrency"
          items:
            type: string
            enum:
             - CommonsCurrency
        minorUnit:
          minimum: 0
          type: number
        numericCode:
          minimum: 0
          type: number
        code:
          maxLength: 3
          minLength: 3
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    CommonsCalendar:
      required:
       - name
       - year
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsCalendar"
          items:
            type: string
            enum:
             - CommonsCalendar
        parent:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
          description: Parent Calendar
        days:
          uniqueItems: true
          type: array
          items:
            type: array
            description: Days
            items:
              type: string
              format: date
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Name
        year:
          type: number
          description: Year
      additionalProperties: false
    CommonsDayOfWeek:
      required:
       - dayOfWeek
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsDayOfWeek"
          items:
            type: string
            enum:
             - CommonsDayOfWeek
        dayOfWeek:
          type: number
          description: "Follows the ISO-8601 standard, from 1 (Monday) to 7 (Sunday)"
        name:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    CommonsSystem:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsSystem"
          items:
            type: string
            enum:
             - CommonsSystem
        description:
          maxLength: 100
          minLength: 1
          type: string
        code:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    CommonsIntegrationMap:
      required:
       - key
       - system
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsIntegrationMap, AdministrativeArea, AdministrativeAreaGroup "
          items:
            type: string
            enum:
             - CommonsIntegrationMap
             - AdministrativeArea
             - AdministrativeAreaGroup
        key:
          maxLength: 100
          minLength: 1
          type: string
        system:
          $ref: '#/components/schemas/CommonsSystem'
        administrativeArea:
          $ref: '#/components/schemas/CommonsAdministrativeArea'
        administrativeAreaGroup:
          $ref: '#/components/schemas/CommonsAdministrativeAreaGroup'
      additionalProperties: false
    CommonsUnit:
      required:
       - commonCode
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsUnit"
          items:
            type: string
            enum:
             - CommonsUnit
        commonCode:
          maxLength: 100
          minLength: 1
          type: string
          description: UN/CEFACT Common Code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Name
        symbol:
          maxLength: 100
          type: string
          description: Symbol
      additionalProperties: false
    CommonsDuration:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsDuration"
          items:
            type: string
            enum:
             - CommonsDuration
        code:
          maxLength: 100
          minLength: 1
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    BillingSacCode:
      required:
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: BillingSacCode"
          items:
            type: string
            enum:
             - BillingSacCode
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Código SAC del tipo de identificación
        paymentMethods:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsCommercePaymentMethod'
      additionalProperties: false
    BillingConcept:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: BillingConcept, BillingConceptIntegrationInfo "
          items:
            type: string
            enum:
             - BillingConcept
             - BillingConceptIntegrationInfo
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Code
        description:
          maxLength: 100
          minLength: 1
          type: string
          description: Description
        triggerAmount:
          multipleOf: 0.01
          maximum: 9999999
          minimum: 0
          type: number
          description: Amount from wich the Billing Concept apply
        rows:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BillingConceptRow'
        integrationCreated:
          type: string
          format: date-time
        integrationLastModified:
          type: string
          format: date-time
      additionalProperties: false
    BillingConceptRow:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: BillingConceptRow, BillingConceptRowIntegrInfo, UnecoInfo "
          items:
            type: string
            enum:
             - BillingConceptRow
             - BillingConceptRowIntegrInfo
             - UnecoInfo
        triggerAmount:
          multipleOf: 0.01
          maximum: 9999999
          minimum: 0
          type: number
          description: Amount from wich the Billing Concept apply
        salesAdminDeparment:
          $ref: '#/components/schemas/CommonsGECIDepartment'
        salesCompany:
          $ref: '#/components/schemas/CommonsGECICompany'
        procurementDepartment:
          $ref: '#/components/schemas/CommonsGECIDepartment'
        integrationCreated:
          type: string
          format: date-time
        integrationLastModified:
          type: string
          format: date-time
        code:
          maxLength: 4
          minLength: 4
          type: string
          description: Code
        description:
          maxLength: 40
          minLength: 1
          type: string
          description: Description
      additionalProperties: false
    BillingConceptType:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: BillingConceptType"
          items:
            type: string
            enum:
             - BillingConceptType
        code:
          maxLength: 2
          minLength: 1
          type: string
          description: Code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Name
      additionalProperties: false
    CommonsGECICompany:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsGECICompany"
          items:
            type: string
            enum:
             - CommonsGECICompany
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Company name
        procurementCodes:
          uniqueItems: true
          type: array
          items:
            type: array
            description: "Company code in procurement scope. should be of cardinality ONE, but is MANY due to ECI having multi"
            items:
              type: string
        salesCode:
          maxLength: 3
          minLength: 3
          type: string
          description: Company code in Sales scope
        salesAdminCode:
          maxLength: 100
          type: string
          description: Company code in Sales Administration scope
        departments:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECIDepartment'
        businessLines:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECIBusinessLine'
        procurementCodes18:
          uniqueItems: true
          type: array
          items:
            type: array
            description: "Company code in procurement scope. should be of cardinality ONE, but is MANY due to ECI having multi"
            items:
              type: string
        divisions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECIDivision'
      additionalProperties: false
    CommonsGECIDepartment:
      required:
       - code
       - name
       - shortCode
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsGECIDepartment, CommonsGECIProcDepartment, CommonsGECISalesDepartment, CommonsGECISalesAdmDepartment "
          items:
            type: string
            enum:
             - CommonsGECIDepartment
             - CommonsGECIProcDepartment
             - CommonsGECISalesDepartment
             - CommonsGECISalesAdmDepartment
        code:
          maxLength: 7
          minLength: 5
          type: string
          description: Department code
        shortCode:
          maxLength: 4
          minLength: 3
          type: string
        subdivision:
          $ref: '#/components/schemas/CommonsGECISubdivision'
        code18:
          maxLength: 7
          minLength: 7
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Department name
        alternateName:
          maxLength: 100
          type: string
        brand:
          $ref: '#/components/schemas/CatalogBrand'
        families:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECIFamily'
        familyGroups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECIFamilyGroup'
        unecoId:
          maxLength: 100
          type: string
          description: UNECO identifier
      additionalProperties: false
    CommonsGECIFamily:
      required:
       - code
       - code18
       - name
       - shortCode
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsGECIFamily"
          items:
            type: string
            enum:
             - CommonsGECIFamily
        code:
          maxLength: 11
          minLength: 8
          type: string
          description: Department code
        familyGroup:
          $ref: '#/components/schemas/CommonsGECIFamilyGroup'
        shortCode:
          maxLength: 3
          minLength: 3
          type: string
        code18:
          maxLength: 100
          minLength: 1
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Department name
        alternateName:
          maxLength: 100
          type: string
      additionalProperties: false
    CommonsGECIBusinessLine:
      required:
       - code
       - languages
       - name
       - shortCode
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsGECIBusinessLine"
          items:
            type: string
            enum:
             - CommonsGECIBusinessLine
        code:
          maxLength: 7
          minLength: 7
          type: string
          description: Department code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Department name
        languages:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsLanguage'
        shortCode:
          maxLength: 4
          minLength: 4
          type: string
      additionalProperties: false
    CommonsGECIChannel:
      required:
       - code
       - languages
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsGECIChannel"
          items:
            type: string
            enum:
             - CommonsGECIChannel
        code:
          maxLength: 3
          minLength: 3
          type: string
          description: Department code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Department name
        subchannels:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECISubchannel'
        languages:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsLanguage'
      additionalProperties: false
    CommonsGECISubchannel:
      required:
       - code
       - languages
       - name
       - shortCode
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsGECISubchannel"
          items:
            type: string
            enum:
             - CommonsGECISubchannel
        code:
          maxLength: 7
          minLength: 7
          type: string
          description: Department code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Department name
        languages:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsLanguage'
        shortCode:
          maxLength: 4
          minLength: 4
          type: string
      additionalProperties: false
    CommonsGECISystem:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsGECISystem, CommonsGECISystemOrderMgmt "
          items:
            type: string
            enum:
             - CommonsGECISystem
             - CommonsGECISystemOrderMgmt
        code:
          maxLength: 100
          minLength: 1
          type: string
        description:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    CommonsGECISubchannelType:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsGECISubchannelType"
          items:
            type: string
            enum:
             - CommonsGECISubchannelType
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Code
        name:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    CommonsGECIDivision:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsGECIDivision"
          items:
            type: string
            enum:
             - CommonsGECIDivision
        code:
          maxLength: 100
          minLength: 1
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
        alternateName:
          maxLength: 100
          type: string
        subdivisions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECISubdivision'
      additionalProperties: false
    CommonsGECISubdivision:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsGECISubdivision"
          items:
            type: string
            enum:
             - CommonsGECISubdivision
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Subdivison code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Name
        alternateName:
          maxLength: 100
          type: string
      additionalProperties: false
    CommonsGECIFamilyGroup:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: CommonsGECIFamilyGroup"
          items:
            type: string
            enum:
             - CommonsGECIFamilyGroup
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Name
        alternateName:
          maxLength: 100
          type: string
        brand:
          $ref: '#/components/schemas/CatalogBrand'
      additionalProperties: false
    FlatRateCustomer:
      required:
       - code
       - customer
       - flatRateSeller
       - status
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateCustomer"
          items:
            type: string
            enum:
             - FlatRateCustomer
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Unique identifier for customer's flat rate
        customer:
          $ref: '#/components/schemas/Customer'
        status:
          $ref: '#/components/schemas/FlatRateCustomerStatus'
        statusReason:
          $ref: '#/components/schemas/FlatRateCustomerStatusReason'
        flatRateSeller:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
          description: The seller of the flat rate purchased by the customer
        company:
          $ref: '#/components/schemas/CommonsGECICompany'
        externalOrderId:
          maxLength: 100
          type: string
          description: Identificador externo de la orden
        shippingGroupId:
          maxLength: 100
          type: string
        purchasementReq:
          type: boolean
        renewalRequest:
          type: boolean
        creationDate:
          type: string
          format: date-time
        tempDate:
          type: string
          format: date-time
        chargeDate:
          type: string
          format: date-time
        fulfillmentDate:
          type: string
          format: date-time
        trialDate:
          type: string
          format: date-time
        endDate:
          type: string
          description: Fecha de fin
          format: date-time
        deleteDate:
          type: string
          description: Fecha de borrado lógico
          format: date-time
        usages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateUsage'
        extensions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateExtension'
        renewals:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
        notifications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateNotification'
        actions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateCustomerAction'
        coupon:
          maxLength: 1000
          type: string
      additionalProperties: false
    FlatRateCustomerStatus:
      required:
       - active
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateCustomerStatus"
          items:
            type: string
            enum:
             - FlatRateCustomerStatus
        code:
          maxLength: 100
          minLength: 1
          type: string
        description:
          maxLength: 100
          type: string
        active:
          type: boolean
          description: Flag that indicates if the the status represents that the flat rate for the customer is active or no
      additionalProperties: false
    FlatRateCustomerStatusReason:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateCustomerStatusReason"
          items:
            type: string
            enum:
             - FlatRateCustomerStatusReason
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Code
        description:
          maxLength: 100
          minLength: 1
          type: string
          description: Description
      additionalProperties: false
    FlatRateExtension:
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateExtension"
          items:
            type: string
            enum:
             - FlatRateExtension
        applicationDate:
          type: string
          description: The time when the extesion took place
          format: date-time
      additionalProperties: false
    FlatRateJob:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateJob"
          items:
            type: string
            enum:
             - FlatRateJob
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Code
        description:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    FlatRateJobExecution:
      required:
       - job
       - startDate
       - status
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateJobExecution"
          items:
            type: string
            enum:
             - FlatRateJobExecution
        job:
          $ref: '#/components/schemas/FlatRateJob'
        status:
          maxLength: 100
          minLength: 1
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        items:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateJobExecutionItem'
        proccesedRecordCount:
          minimum: 0
          type: number
      additionalProperties: false
    FlatRateJobExecutionItem:
      required:
       - date
       - status
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateJobExecutionItem, FlatRateJobExecutionItemRenew "
          items:
            type: string
            enum:
             - FlatRateJobExecutionItem
             - FlatRateJobExecutionItemRenew
        cuc:
          maxLength: 100
          type: string
        description:
          maxLength: 254
          type: string
          description: Info about the item proccesed
        status:
          maxLength: 100
          minLength: 1
          type: string
        date:
          type: string
          format: date-time
        orderOrigin:
          maxLength: 100
          type: string
          description: Origin order for renewal
        orderRenwal:
          maxLength: 100
          type: string
      additionalProperties: false
    FlatRateNotification:
      required:
       - deliveryTimestamp
       - group
       - scope
       - type
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateNotification"
          items:
            type: string
            enum:
             - FlatRateNotification
        scope:
          maxLength: 100
          minLength: 1
          type: string
        group:
          maxLength: 100
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/CommonsCommerceNotificationType'
        readStatus:
          $ref: '#/components/schemas/CommonsCommerceNotificationStatus'
        deliveryTimestamp:
          type: string
          format: date-time
        deliveryStatus:
          $ref: '#/components/schemas/CommonsCommerceNotificationStatus'
      additionalProperties: false
    FlatRateRenewal:
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRenewal"
          items:
            type: string
            enum:
             - FlatRateRenewal
        status:
          $ref: '#/components/schemas/FlatRateRenewalStatus'
        deadline:
          type: string
          description: Deadline for flat rate renovación
          format: date-time
        upgradeSellerItem:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
          description: Flat rate seller item to which the customer will upgrade in case o renewal
        renewedTo:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
          description: FlatRateCustomer instance created as the result of the renewall fulfilment
        reminders:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateRenewalReminder'
        lastNotifyChargeDate:
          type: string
          format: date-time
        firstNotifyChargeDate:
          type: string
          format: date-time
      additionalProperties: false
    FlatRateRenewalReminder:
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRenewalReminder"
          items:
            type: string
            enum:
             - FlatRateRenewalReminder
        type:
          $ref: '#/components/schemas/FlatRateRenewalReminderType'
      additionalProperties: false
    FlatRateRenewalReminderType:
      required:
       - deadlineAmmount
       - deadlineTimeUnit
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRenewalReminderType"
          items:
            type: string
            enum:
             - FlatRateRenewalReminderType
        name:
          maxLength: 100
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/FlatRateRenewalReminderSuperType'
        deadlineAmmount:
          multipleOf: 1
          minimum: 1
          type: number
          description: TIme unit for the deadline definition
        deadlineTimeUnit:
          $ref: '#/components/schemas/CommonsTimeUnit'
        notificationTemplate:
          $ref: '#/components/schemas/CommonsCommerceNotificationTemplate'
      additionalProperties: false
    FlatRateRenewalReminderSuperType:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRenewalReminderSuperType"
          items:
            type: string
            enum:
             - FlatRateRenewalReminderSuperType
        name:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    FlatRateRenewalStatus:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRenewalStatus"
          items:
            type: string
            enum:
             - FlatRateRenewalStatus
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Code
        description:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    FlatRateRestriction:
      required:
       - mode
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRestriction, FlatRateRestrictionOrder, FlatRateRestrictionGECI, FlatRateRestrictionDelivery "
          items:
            type: string
            enum:
             - FlatRateRestriction
             - FlatRateRestrictionOrder
             - FlatRateRestrictionGECI
             - FlatRateRestrictionDelivery
        name:
          maxLength: 100
          minLength: 1
          type: string
        mode:
          $ref: '#/components/schemas/FlatRateRestrictionMode'
        restrictionLocation:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsAdministrativeArea'
        restrictionArea:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsAdministrativeAreaGroup'
        restrictionItemType:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsCommerceItemType'
        restrictionPaymentMethod:
          $ref: '#/components/schemas/CommonsCommercePaymentMethod'
        restrictionMaxLines:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateRestrictionMaxLines'
        restrictionMinimumAmount:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateRestrictionMinumumAmount'
        restrictionShippingType:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsCommerceShippingType'
        restrictionCompany:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECICompany'
        restrictionDepartment:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateRestrictionDepartment'
        restrictionFamily:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateRestrictionFamily'
        restrictionChannel:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECIChannel'
        restrictionSubchannel:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECISubchannel'
        restrictionBusinessLine:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECIBusinessLine'
        restrictionSellerType:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsCommerceSellerType'
        restrictionViolationMessage:
          $ref: '#/components/schemas/I18nMessage'
      additionalProperties: false
    FlatRateRestrictionSet:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRestrictionSet"
          items:
            type: string
            enum:
             - FlatRateRestrictionSet
        name:
          maxLength: 100
          minLength: 1
          type: string
        restrictions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateRestrictionSetItem'
      additionalProperties: false
    FlatRateRestrictionMode:
      required:
       - code
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRestrictionMode"
          items:
            type: string
            enum:
             - FlatRateRestrictionMode
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Code
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Name
      additionalProperties: false
    FlatRateUsage:
      required:
       - bonifiedAmount
       - order
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateUsage"
          items:
            type: string
            enum:
             - FlatRateUsage
        order:
          $ref: '#/components/schemas/Order'
        bonifiedAmount:
          multipleOf: 0.01
          type: number
          description: The ammount bonified by the falt rate on the order's total amount
        details:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateUsageDetail'
      additionalProperties: false
    FlatRateUsageDetail:
      required:
       - bonifiedAmount
       - saleTransaction
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateUsageDetail"
          items:
            type: string
            enum:
             - FlatRateUsageDetail
        saleTransaction:
          $ref: '#/components/schemas/OrderSaleTransaction'
        bonifiedAmount:
          multipleOf: 0.01
          type: number
          description: The ammount bonified by the flat rate on the sale transaction's total amount
      additionalProperties: false
    FlatRateRestrictionScope:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRestrictionScope"
          items:
            type: string
            enum:
             - FlatRateRestrictionScope
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Unique code for flat rate restriction scopes
        description:
          maxLength: 100
          minLength: 1
          type: string
          description: Description for the flat rate restriction scope
      additionalProperties: false
    FlatRateRestrictionMinumumAmount:
      required:
       - scope
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRestrictionMinumumAmount, FlatRateRestrictionAmountShp, FlatRateRestrictionAmountDpt "
          items:
            type: string
            enum:
             - FlatRateRestrictionMinumumAmount
             - FlatRateRestrictionAmountShp
             - FlatRateRestrictionAmountDpt
        scope:
          $ref: '#/components/schemas/FlatRateRestrictionScope'
        shippingType:
          $ref: '#/components/schemas/CommonsCommerceShippingType'
        departments:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECIDepartment'
        restrictionValue:
          multipleOf: 0.01
          maximum: 9999
          minimum: 0
          type: number
        discountToApply:
          multipleOf: 0.01
          maximum: 100
          minimum: 0
          type: number
          description: The percentage of discount to apply in case the the minimum amount is reaached
      additionalProperties: false
    FlatRateRestrictionMaxLines:
      required:
       - restrictionValue
       - scope
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRestrictionMaxLines, FlatRateRestrictionLinesShp "
          items:
            type: string
            enum:
             - FlatRateRestrictionMaxLines
             - FlatRateRestrictionLinesShp
        scope:
          $ref: '#/components/schemas/FlatRateRestrictionScope'
        shippingType:
          $ref: '#/components/schemas/CommonsCommerceShippingType'
        restrictionValue:
          multipleOf: 1
          maximum: 9999
          minimum: 0
          type: number
      additionalProperties: false
    FlatRateRestrictionDepartment:
      required:
       - department
       - scope
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRestrictionDepartment, FlatRateRestrictionDepShp "
          items:
            type: string
            enum:
             - FlatRateRestrictionDepartment
             - FlatRateRestrictionDepShp
        scope:
          $ref: '#/components/schemas/FlatRateRestrictionScope'
        shippingType:
          $ref: '#/components/schemas/CommonsCommerceShippingType'
        department:
          $ref: '#/components/schemas/CommonsGECIDepartment'
        maxUnits:
          multipleOf: 1
          maximum: 9999
          minimum: 0
          type: number
      additionalProperties: false
    FlatRateRestrictionFamily:
      required:
       - family
       - scope
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRestrictionFamily, FlatRateRestrictionFamilyShp "
          items:
            type: string
            enum:
             - FlatRateRestrictionFamily
             - FlatRateRestrictionFamilyShp
        scope:
          $ref: '#/components/schemas/FlatRateRestrictionScope'
        shippingType:
          $ref: '#/components/schemas/CommonsCommerceShippingType'
        family:
          $ref: '#/components/schemas/CommonsGECIFamily'
        maxUnits:
          multipleOf: 1
          maximum: 9999
          minimum: 0
          type: number
      additionalProperties: false
    FlatRateSellScope:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateSellScope"
          items:
            type: string
            enum:
             - FlatRateSellScope
        code:
          maxLength: 100
          minLength: 1
          type: string
        description:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    FlatRateActionType:
      required:
       - active
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateActionType"
          items:
            type: string
            enum:
             - FlatRateActionType
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Action code
        description:
          maxLength: 100
          minLength: 1
          type: string
          description: Description
        active:
          type: boolean
          description: Flag that indicates whether this action is enabled
      additionalProperties: false
    FlatRateCustomerAction:
      required:
       - actionType
       - dateCreated
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateCustomerAction"
          items:
            type: string
            enum:
             - FlatRateCustomerAction
        actionType:
          $ref: '#/components/schemas/FlatRateActionType'
        dateCreated:
          type: string
          description: Date created
          format: date-time
        startDate:
          type: string
          format: date-time
        actionStatus:
          $ref: '#/components/schemas/FlatRateActionStatusType'
        endDate:
          type: string
          format: date-time
      additionalProperties: false
    FlatRateActionStatusType:
      required:
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateActionStatusType"
          items:
            type: string
            enum:
             - FlatRateActionStatusType
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Code
        description:
          maxLength: 100
          type: string
          description: Description
      additionalProperties: false
    FlatRateRestrictionSetFamily:
      required:
       - family
       - scope
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRestrictionSetFamily, FlatRateRestrictSetFamilyShp "
          items:
            type: string
            enum:
             - FlatRateRestrictionSetFamily
             - FlatRateRestrictSetFamilyShp
        scope:
          $ref: '#/components/schemas/FlatRateRestrictionScope'
        shippingType:
          $ref: '#/components/schemas/CommonsCommerceShippingType'
        family:
          $ref: '#/components/schemas/CommonsGECIFamily'
        maxUnits:
          multipleOf: 1
          maximum: 999
          minimum: 0
          type: number
      additionalProperties: false
    FlatRateRestrictionSetDepartment:
      required:
       - department
       - scope
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRestrictionSetDepartment, FlatRateRestrictSetDepShp "
          items:
            type: string
            enum:
             - FlatRateRestrictionSetDepartment
             - FlatRateRestrictSetDepShp
        scope:
          $ref: '#/components/schemas/FlatRateRestrictionScope'
        shippingType:
          $ref: '#/components/schemas/CommonsCommerceShippingType'
        department:
          $ref: '#/components/schemas/CommonsGECIDepartment'
        maxUnits:
          multipleOf: 1
          maximum: 9999
          minimum: 0
          type: number
      additionalProperties: false
    FlatRateRestrictionSetMaxLines:
      required:
       - restrictionValue
       - scope
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRestrictionSetMaxLines, FlatRateRestrictSetLinesShp "
          items:
            type: string
            enum:
             - FlatRateRestrictionSetMaxLines
             - FlatRateRestrictSetLinesShp
        scope:
          $ref: '#/components/schemas/FlatRateRestrictionScope'
        shippingType:
          $ref: '#/components/schemas/CommonsCommerceShippingType'
        restrictionValue:
          multipleOf: 1
          maximum: 9999
          minimum: 0
          type: number
      additionalProperties: false
    FlatRateRestrictionSetMinAmount:
      required:
       - scope
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRestrictionSetMinAmount, FlatRateRestrictSetAmountShp, FlatRateRestrictSetAmountDpt "
          items:
            type: string
            enum:
             - FlatRateRestrictionSetMinAmount
             - FlatRateRestrictSetAmountShp
             - FlatRateRestrictSetAmountDpt
        scope:
          $ref: '#/components/schemas/FlatRateRestrictionScope'
        shippingType:
          $ref: '#/components/schemas/CommonsCommerceShippingType'
        departments:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECIDepartment'
        restrictionValue:
          multipleOf: 0.01
          maximum: 9999
          minimum: 0
          type: number
        discountToApply:
          multipleOf: 0.01
          maximum: 100
          minimum: 0
          type: number
          description: The percentage of discount to apply in case the the minimum amount is reached
      additionalProperties: false
    FlatRateRestrictionSetItem:
      required:
       - mode
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRestrictionSetItem, FlatRateRestrictSetOrder, FlatRateRestrictSetGECI, FlatRateRestrictSetDelivery "
          items:
            type: string
            enum:
             - FlatRateRestrictionSetItem
             - FlatRateRestrictSetOrder
             - FlatRateRestrictSetGECI
             - FlatRateRestrictSetDelivery
        name:
          maxLength: 100
          minLength: 1
          type: string
        mode:
          $ref: '#/components/schemas/FlatRateRestrictionMode'
        restrictionLocation:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsAdministrativeArea'
        restrictionArea:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsAdministrativeAreaGroup'
        restrictionItemType:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsCommerceItemType'
        restrictionPaymentMethod:
          $ref: '#/components/schemas/CommonsCommercePaymentMethod'
        restrictionMaxLines:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateRestrictionSetMaxLines'
        restrictionMinimumAmount:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateRestrictionSetMinAmount'
        restrictionShippingType:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsCommerceShippingType'
        restrictionCompany:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECICompany'
        restrictionDepartment:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateRestrictionSetDepartment'
        restrictionFamily:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FlatRateRestrictionSetFamily'
        restrictionChannel:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECIChannel'
        restrictionSubchannel:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECISubchannel'
        restrictionBusinessLine:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsGECIBusinessLine'
        restrictionSellerType:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsCommerceSellerType'
        restrictionViolationMessage:
          $ref: '#/components/schemas/I18nMessage'
      additionalProperties: false
    FlatRateRenewalErrorPaymentCode:
      required:
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: FlatRateRenewalErrorPaymentCode"
          items:
            type: string
            enum:
             - FlatRateRenewalErrorPaymentCode
        code:
          maxLength: 100
          minLength: 1
          type: string
        description:
          maxLength: 100
          type: string
      additionalProperties: false
    SubscriptionCustomer:
      required:
       - code
       - creationDate
       - customer
       - status
       - subscription
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SubscriptionCustomer, SubscriptionCustomerExternal, SubscriptionCustomerFixed, SubscriptionCustomerVar, SubscriptionCustomerScheduled, SubscriptionCustomerProd "
          items:
            type: string
            enum:
             - SubscriptionCustomer
             - SubscriptionCustomerExternal
             - SubscriptionCustomerFixed
             - SubscriptionCustomerVar
             - SubscriptionCustomerScheduled
             - SubscriptionCustomerProd
        code:
          maxLength: 100
          minLength: 1
          type: string
        subscription:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
          description: The product associated
        customer:
          $ref: '#/components/schemas/Customer'
        digitalWalletIdentifier:
          maxLength: 100
          type: string
          description: Alternate Digital Wallet ID
        externalUserId:
          maxLength: 100
          type: string
          description: Customer ID in external provider systems
        renewalRequest:
          type: boolean
          description: Flag that to indicate that the subscription must be renewed automatically after it's end date
        extensionRequest:
          type: boolean
          description: Flag that to indicate that the subscription must be extended automatically
        status:
          $ref: '#/components/schemas/SubscriptionCustomerStatus'
        statusReason:
          $ref: '#/components/schemas/SubscriptionCustomerStatusReason'
        cancellationReason:
          $ref: '#/components/schemas/SubscriptionCustomerCancellationReason'
        used:
          type: boolean
          description: Has been used
        creationDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        deleteDate:
          type: string
          format: date-time
        nextOrderDate:
          type: string
          description: Date por next extension order
          format: date-time
        graceDeadline:
          type: string
          description: Deadline time for payment to be done before cancelation is applied
          format: date-time
        lastPayment:
          type: string
          format: date-time
        lastOrderDate:
          type: string
          description: Last order date
          format: date-time
        deleteNotificationSent:
          type: boolean
        extensions:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
            description: Subscriptions extensions
        repeatFrecuency:
          $ref: '#/components/schemas/CommonsDuration'
        byDay:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CommonsDayOfWeek'
        byMonth:
          uniqueItems: true
          type: array
          items:
            type: array
            description: https://schema.org/Schedule
            items:
              type: string
        byMonthDay:
          uniqueItems: true
          type: array
          items:
            type: array
            description: https://schema.org/Schedule
            items:
              type: string
        productDeliveries:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
        products:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
      additionalProperties: false
    SubscriptionCustomerStatus:
      required:
       - active
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SubscriptionCustomerStatus"
          items:
            type: string
            enum:
             - SubscriptionCustomerStatus
        code:
          maxLength: 100
          minLength: 1
          type: string
        description:
          maxLength: 100
          minLength: 1
          type: string
        active:
          type: boolean
          description: Flag that indicates if the the status represents that the subscript for the customer is active or no
      additionalProperties: false
    SubscriptionCustomerStatusReason:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SubscriptionCustomerStatusReason"
          items:
            type: string
            enum:
             - SubscriptionCustomerStatusReason
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Code
        description:
          maxLength: 100
          minLength: 1
          type: string
          description: Description
      additionalProperties: false
    SubscriptionCustomerPayment:
      required:
       - code
       - extensionDate
       - graceDeadline
       - paymentSubscription
       - status
       - statusReason
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SubscriptionCustomerPayment"
          items:
            type: string
            enum:
             - SubscriptionCustomerPayment
        code:
          maxLength: 100
          minLength: 1
          type: string
        paymentSubscription:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
        externalOrderId:
          maxLength: 100
          type: string
          description: Identificador externo del pedido
        shippingGroupId:
          maxLength: 100
          type: string
        status:
          $ref: '#/components/schemas/SubscriptionCustomerPaymentStatus'
        statusReason:
          $ref: '#/components/schemas/SubscriptionCustomerPaymentStatusReason'
        extensionDate:
          type: string
          format: date-time
        graceDeadline:
          type: string
          description: Limit date for extension payment
          format: date-time
        applicationDate:
          type: string
          description: The time when the extesion took place
          format: date-time
        paymentFailureNotification:
          type: boolean
        paymentFailureNotificationDate:
          type: string
          format: date-time
        paymentFailures:
          type: number
        order:
          $ref: '#/components/schemas/Order'
        orderTotalAmount:
          multipleOf: 0.01
          type: number
        productDelivery:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
      additionalProperties: false
    SubscriptionCustomerPaymentStatus:
      required:
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SubscriptionCustomerPaymentStatus"
          items:
            type: string
            enum:
             - SubscriptionCustomerPaymentStatus
        code:
          maxLength: 100
          minLength: 1
          type: string
        description:
          maxLength: 100
          type: string
      additionalProperties: false
    SubscriptionCustomerPaymentStatusReason:
      required:
       - code
       - description
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SubscriptionCustomerPaymentStatusReason"
          items:
            type: string
            enum:
             - SubscriptionCustomerPaymentStatusReason
        code:
          maxLength: 100
          minLength: 1
          type: string
          description: Code
        description:
          maxLength: 100
          minLength: 1
          type: string
      additionalProperties: false
    SubscriptionNotificationType:
      required:
       - name
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SubscriptionNotificationType"
          items:
            type: string
            enum:
             - SubscriptionNotificationType
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Name
        notificationTemplate:
          $ref: '#/components/schemas/CommonsCommerceNotificationTemplate'
        statusReasons:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionCustomerStatusReason'
      additionalProperties: false
    SubscriptionCustomerProduct:
      required:
       - item
       - quantity
       - quantityUnit
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SubscriptionCustomerProduct"
          items:
            type: string
            enum:
             - SubscriptionCustomerProduct
        item:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
        quantity:
          type: number
        quantityUnit:
          $ref: '#/components/schemas/CommonsUnit'
        type:
          $ref: '#/components/schemas/CatalogItemSubscriptionProductType'
      additionalProperties: false
    SubscriptionCustomerProductDelivery:
      required:
       - items
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SubscriptionCustomerProductDelivery"
          items:
            type: string
            enum:
             - SubscriptionCustomerProductDelivery
        expectedArrivalFrom:
          type: string
          description: The earliest date the package may arrive
          format: date-time
        expectedArrivalUntil:
          type: string
          description: The latest date the package may arrive
          format: date-time
        estimatedDeliveryDate:
          type: string
          description: The estimated delivery date for the parcel
          format: date-time
        deliveryDate:
          type: string
          format: date-time
        suitableForPayment:
          type: boolean
        items:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              _id:
                type: number
                description: Entity Unique ID
            additionalProperties: true
      additionalProperties: false
    SubscriptionCustomerProductDeliveryItem:
      required:
       - item
       - quantity
       - quantityUnit
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SubscriptionCustomerProductDeliveryItem"
          items:
            type: string
            enum:
             - SubscriptionCustomerProductDeliveryItem
        item:
          type: object
          properties:
            _id:
              type: number
              description: Entity Unique ID
          additionalProperties: true
        quantity:
          multipleOf: 0.01
          type: number
        quantityUnit:
          $ref: '#/components/schemas/CommonsUnit'
        type:
          $ref: '#/components/schemas/CatalogItemSubscriptionProductType'
      additionalProperties: false
    SubscriptionCustomerCancellationReason:
      required:
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: SubscriptionCustomerCancellationReason"
          items:
            type: string
            enum:
             - SubscriptionCustomerCancellationReason
        code:
          maxLength: 100
          minLength: 1
          type: string
        description:
          type: object
          properties:
            pt_PT:
              type: string
            en_GB:
              type: string
            de_DE:
              type: string
            ca_ES:
              type: string
            fr_FR:
              type: string
            es_ES:
              type: string
      additionalProperties: false
    I18nScope:
      required:
       - code
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: I18nScope"
          items:
            type: string
            enum:
             - I18nScope
        code:
          maxLength: 100
          minLength: 1
          type: string
        description:
          maxLength: 100
          type: string
      additionalProperties: false
    I18nMessage:
      required:
       - code
       - message
       - messages
       - parameterCount
       - scope
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: I18nMessage"
          items:
            type: string
            enum:
             - I18nMessage
        code:
          maxLength: 100
          minLength: 1
          type: string
        scope:
          $ref: '#/components/schemas/I18nScope'
        parameterCount:
          type: number
        message:
          required:
           - es_ES
          type: object
          properties:
            pt_PT:
              type: string
            en_GB:
              type: string
            de_DE:
              type: string
            ca_ES:
              type: string
            fr_FR:
              type: string
            es_ES:
              type: string
        messages:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/I18nMessageLanguage'
      additionalProperties: false
    I18nMessageLanguage:
      required:
       - language
       - message
      type: object
      properties:
        _id:
          type: number
          description: Entity Unique ID
        _version:
          type: number
          description: Entity version. Used to dirty-check
        _lastModified:
          type: string
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: "Entity types (group attributes). Available values are: I18nMessageLanguage"
          items:
            type: string
            enum:
             - I18nMessageLanguage
        language:
          $ref: '#/components/schemas/CommonsLanguage'
        message:
          maxLength: 1000
          minLength: 1
          type: string
      additionalProperties: false
  parameters:
    idParam:
      name: id
      in: query
      description: "Entity ID. Param accepted values are 'eq.[id]' or 'in.[id1,id1,...]'"
      required: false
      style: form
      explode: true
      schema:
        pattern: "^(eq\\.[0-9]*|in.[0-9]*(,[0-9]*)*)$"
        type: string
    searchParam:
      name: search
      in: query
      description: Open search over all atributtes tagged  for open search
      required: false
      style: form
      explode: true
      schema:
        type: string
    filterParam:
      name: filter
      in: query
      description: Filter expression for the results
      required: false
      style: form
      explode: true
      schema:
        type: string
    orderParam:
      name: order
      in: query
      description: "Order atribute and direction. Acepted values ares ([param name].[asc|desc])"
      required: false
      style: form
      explode: true
      schema:
        pattern: "^[^\\.]*\\.(asc|desc)$"
        type: string
    offsetParam:
      name: offset
      in: query
      description: Number of entries to skip from the result
      required: false
      style: form
      explode: true
      schema:
        type: integer
    limitParam:
      name: limit
      in: query
      description: Number of entries to return
      required: false
      style: form
      explode: true
      schema:
        type: integer
    initializeParam:
      name: intialize
      in: query
      description: attributes related to dependant entities to be initiallize for coplete. Coma-separated list of paths in entity (att1.subatt1.subusbatt1....)
      required: false
      style: form
      explode: true
      schema:
        type: string
    auditParam:
      name: audit
      in: query
      description: Indicates whether to audit the current operation.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    auditAppUserParam:
      name: auditAppUser
      in: query
      description: User who audit operation belongs to.
      required: false
      style: form
      explode: true
      schema:
        type: string
    totalCountParam:
      name: totalCount
      in: query
      description: Indicates whether to return the total count of record that matches the get
      required: false
      style: form
      explode: true
      schema:
        type: boolean
  securitySchemes:
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://test.com
          scopes: {}
x-throttling-tier: Unlimited
x-wso2-cors:
  corsConfigurationEnabled: false
  accessControlAllowOrigins:
   - '*'
  accessControlAllowCredentials: false
  accessControlAllowHeaders:
   - authorization
   - Access-Control-Allow-Origin
   - Content-Type
   - SOAPAction
  accessControlAllowMethods:
   - GET
   - PUT
   - POST
   - DELETE
   - PATCH
   - OPTIONS
x-wso2-production-endpoints:
  urls:
   - https://backoffice-geci-dc.paas.eci.geci/
  type: http
x-wso2-sandbox-endpoints:
  urls:
   - https://backoffice-geci-dc.paas.eci.geci/
  type: http
x-wso2-basePath: /dc/backoffice-geci/1.6
x-wso2-transports:
 - http
 - https
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300
