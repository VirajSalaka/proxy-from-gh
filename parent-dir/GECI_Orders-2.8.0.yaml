openapi: 3.0.1
info:
  title: Orders2 (El Corte Inglés)
  description: Orders API
  contact:
    name: El Corte Inglés
    email: paco@hernandezgomez.com
  version: 2.8.0
servers:
 -
  url: /geciorders
security:
 -
  ivuser: []
 -
  xowner: []
 -
  xclient: []
paths:
  /ordersPayments:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersPayments
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersPaymentsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersPayments
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersPayments'
        required: true
      responses:
        "201":
          description: OrdersPayments creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroups/saleTransactionId/{saleTransactionId}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroups identified by the alternative identifier the attribute 'saleTransactionId'
      parameters:
       -
        name: saleTransactionId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersShippingGroups identified by the alternative identifier the attribute 'saleTransactionId'
      parameters:
       -
        name: saleTransactionId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersShippingGroups identified by the alternative identifier the attribute 'saleTransactionId'
      parameters:
       -
        name: saleTransactionId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /selfServiceMaxDevolutionPeriodCriteria/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo SelfServiceMaxDevolutionPeriodCriteria
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteriaGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo SelfServiceMaxDevolutionPeriodCriteria especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteria'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo SelfServiceMaxDevolutionPeriodCriteria especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo SelfServiceMaxDevolutionPeriodCriteria especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLines/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLines
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersLines especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLines'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersLines
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLines'
        required: true
      responses:
        "201":
          description: OrdersLines creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersLines especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersLines especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLinesDiscounts:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLinesDiscounts
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesDiscountsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersLinesDiscounts
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLinesDiscounts'
        required: true
      responses:
        "201":
          description: OrdersLinesDiscounts creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroups/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroups'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroups'
        required: true
      responses:
        "201":
          description: OrdersShippingGroups creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersSubShippingGroups/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersSubShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersSubShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersSubShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersSubShippingGroups'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersSubShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersSubShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentresSts/companyId/{companyId}/centreId/{centreId}:
    get:
      description: Devuelve el conjunto de recursos del tipo ShoppingCentresSts identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresStsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ShoppingCentresSts identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentresSts'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ShoppingCentresSts identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentresSts'
        required: true
      responses:
        "201":
          description: ShoppingCentresSts creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ShoppingCentresSts identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ShoppingCentresSts identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLines/shippingGroupLineId/{shippingGroupLineId}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLines identified by the alternative identifier the attribute 'shippingGroupLineId'
      parameters:
       -
        name: shippingGroupLineId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersLines identified by the alternative identifier the attribute 'shippingGroupLineId'
      parameters:
       -
        name: shippingGroupLineId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLines'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersLines identified by the alternative identifier the attribute 'shippingGroupLineId'
      parameters:
       -
        name: shippingGroupLineId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLines'
        required: true
      responses:
        "201":
          description: OrdersLines creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersLines identified by the alternative identifier the attribute 'shippingGroupLineId'
      parameters:
       -
        name: shippingGroupLineId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersLines identified by the alternative identifier the attribute 'shippingGroupLineId'
      parameters:
       -
        name: shippingGroupLineId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /customers/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo Customers
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Customers especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Customers'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Customers especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Customers especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /customers/gperId/{gperId}:
    get:
      description: Devuelve el conjunto de recursos del tipo Customers identified by the alternative identifier the attribute 'gperId'
      parameters:
       -
        name: gperId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Customers identified by the alternative identifier the attribute 'gperId'
      parameters:
       -
        name: gperId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentresSts/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo ShoppingCentresSts
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresStsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ShoppingCentresSts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentresSts'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ShoppingCentresSts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ShoppingCentresSts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /customers/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo Customers
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Customers especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Customers'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Customers
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Customers'
        required: true
      responses:
        "201":
          description: Customers creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Customers especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Customers especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /countries/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo Countries
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Countries especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Countries'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Countries
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Countries'
        required: true
      responses:
        "201":
          description: Countries creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Countries especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Countries especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /clickAndCarCentres/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo ClickAndCarCentres
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickAndCarCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ClickAndCarCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ClickAndCarCentres'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ClickAndCarCentres
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ClickAndCarCentres'
        required: true
      responses:
        "201":
          description: ClickAndCarCentres creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ClickAndCarCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ClickAndCarCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLinesDiscounts/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLinesDiscounts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesDiscountsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersLinesDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLinesDiscounts'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersLinesDiscounts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLinesDiscounts'
        required: true
      responses:
        "201":
          description: OrdersLinesDiscounts creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersLinesDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersLinesDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersDiscounts/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersDiscounts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersDiscountsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersDiscounts'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersDiscounts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersDiscounts'
        required: true
      responses:
        "201":
          description: OrdersDiscounts creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /selfServiceMaxDevolutionPeriod/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo SelfServiceMaxDevolutionPeriod
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo SelfServiceMaxDevolutionPeriod especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriod'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo SelfServiceMaxDevolutionPeriod
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriod'
        required: true
      responses:
        "201":
          description: SelfServiceMaxDevolutionPeriod creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo SelfServiceMaxDevolutionPeriod especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo SelfServiceMaxDevolutionPeriod especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersPayments/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersPayments
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersPaymentsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersPayments especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersPayments'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersPayments especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersPayments especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/{id}/ordersLines:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /provinces:
    get:
      description: Devuelve el conjunto de recursos del tipo Provinces
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvincesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Provinces
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Provinces'
        required: true
      responses:
        "201":
          description: Provinces creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersDiscounts/order/{order}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersDiscounts identified by the alternative identifier the attribute 'order'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersDiscountsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersDiscounts identified by the alternative identifier the attribute 'order'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/customer/{customer}:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders identified by the alternative identifier the attribute 'customer'
      parameters:
       -
        name: customer
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Orders identified by the alternative identifier the attribute 'customer'
      parameters:
       -
        name: customer
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /provinces/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo Provinces
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvincesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Provinces especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Provinces'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Provinces
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Provinces'
        required: true
      responses:
        "201":
          description: Provinces creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Provinces especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Provinces especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLines/orderLineId/{orderLineId}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLines identified by the alternative identifier the attribute 'orderLineId'
      parameters:
       -
        name: orderLineId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersLines identified by the alternative identifier the attribute 'orderLineId'
      parameters:
       -
        name: orderLineId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLines'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersLines identified by the alternative identifier the attribute 'orderLineId'
      parameters:
       -
        name: orderLineId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLines'
        required: true
      responses:
        "201":
          description: OrdersLines creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersLines identified by the alternative identifier the attribute 'orderLineId'
      parameters:
       -
        name: orderLineId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersLines identified by the alternative identifier the attribute 'orderLineId'
      parameters:
       -
        name: orderLineId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersDiscounts/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersDiscounts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersDiscountsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersDiscounts'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersDiscounts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersDiscounts'
        required: true
      responses:
        "201":
          description: OrdersDiscounts creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersInvoices/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersInvoices
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersInvoicesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersInvoices especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersInvoices'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersInvoices
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersInvoices'
        required: true
      responses:
        "201":
          description: OrdersInvoices creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersInvoices especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersInvoices especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/{id}/ordersPayments:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentresSts/name/{name}:
    get:
      description: Devuelve el conjunto de recursos del tipo ShoppingCentresSts identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresStsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ShoppingCentresSts identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentresSts'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ShoppingCentresSts identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentresSts'
        required: true
      responses:
        "201":
          description: ShoppingCentresSts creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ShoppingCentresSts identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ShoppingCentresSts identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersDiscounts/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersDiscounts
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersDiscountsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersDiscounts'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroupsReleases/orderShippingGroup/{orderShippingGroup}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroupsReleases identified by the alternative identifier the attribute 'orderShippingGroup'
      parameters:
       -
        name: orderShippingGroup
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsReleasesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersShippingGroupsReleases identified by the alternative identifier the attribute 'orderShippingGroup'
      parameters:
       -
        name: orderShippingGroup
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /deliveryPoints/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo DeliveryPoints
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPointsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo DeliveryPoints especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryPoints'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo DeliveryPoints especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo DeliveryPoints especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroupsReleases/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroupsReleases
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsReleasesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersShippingGroupsReleases especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroupsReleases'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersShippingGroupsReleases
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroupsReleases'
        required: true
      responses:
        "201":
          description: OrdersShippingGroupsReleases creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersShippingGroupsReleases especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersShippingGroupsReleases especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/orderDateTime/{orderDateTime}:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders identified by the alternative identifier the attribute 'orderDateTime'
      parameters:
       -
        name: orderDateTime
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Orders identified by the alternative identifier the attribute 'orderDateTime'
      parameters:
       -
        name: orderDateTime
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/{id}/ordersDiscounts:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /provinces/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo Provinces
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvincesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Provinces especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Provinces'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Provinces especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Provinces especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /customers/dvdId/{dvdId}:
    get:
      description: Devuelve el conjunto de recursos del tipo Customers identified by the alternative identifier the attribute 'dvdId'
      parameters:
       -
        name: dvdId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Customers identified by the alternative identifier the attribute 'dvdId'
      parameters:
       -
        name: dvdId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /provinces/country/{country}:
    get:
      description: Devuelve el conjunto de recursos del tipo Provinces identified by the alternative identifier the attribute 'country'
      parameters:
       -
        name: country
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvincesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Provinces identified by the alternative identifier the attribute 'country'
      parameters:
       -
        name: country
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLines/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLines
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersLines especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLines'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersLines
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLines'
        required: true
      responses:
        "201":
          description: OrdersLines creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersLines especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersLines especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /selfServiceMaxDevolutionPeriod/description/{description}/maxDaysAllowed/{maxDaysAllowed}:
    get:
      description: Devuelve el conjunto de recursos del tipo SelfServiceMaxDevolutionPeriod identified by the alternative identifier the attributes 'description' and 'maxDaysAllowed'
      parameters:
       -
        name: description
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: maxDaysAllowed
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo SelfServiceMaxDevolutionPeriod identified by the alternative identifier the attributes 'description' and 'maxDaysAllowed'
      parameters:
       -
        name: description
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: maxDaysAllowed
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriod'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo SelfServiceMaxDevolutionPeriod identified by the alternative identifier the attributes 'description' and 'maxDaysAllowed'
      parameters:
       -
        name: description
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: maxDaysAllowed
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriod'
        required: true
      responses:
        "201":
          description: SelfServiceMaxDevolutionPeriod creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo SelfServiceMaxDevolutionPeriod identified by the alternative identifier the attributes 'description' and 'maxDaysAllowed'
      parameters:
       -
        name: description
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: maxDaysAllowed
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo SelfServiceMaxDevolutionPeriod identified by the alternative identifier the attributes 'description' and 'maxDaysAllowed'
      parameters:
       -
        name: description
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: maxDaysAllowed
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /deliveryCompanies/code/{code}:
    get:
      description: Devuelve el conjunto de recursos del tipo DeliveryCompanies identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryCompaniesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo DeliveryCompanies identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryCompanies'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo DeliveryCompanies identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryCompanies'
        required: true
      responses:
        "201":
          description: DeliveryCompanies creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo DeliveryCompanies identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo DeliveryCompanies identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersParcelCollections/transactionId/{transactionId}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersParcelCollections identified by the alternative identifier the attribute 'transactionId'
      parameters:
       -
        name: transactionId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersParcelCollectionsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersParcelCollections identified by the alternative identifier the attribute 'transactionId'
      parameters:
       -
        name: transactionId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersParcelCollections'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersParcelCollections identified by the alternative identifier the attribute 'transactionId'
      parameters:
       -
        name: transactionId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersParcelCollections'
        required: true
      responses:
        "201":
          description: OrdersParcelCollections creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersParcelCollections identified by the alternative identifier the attribute 'transactionId'
      parameters:
       -
        name: transactionId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersParcelCollections identified by the alternative identifier the attribute 'transactionId'
      parameters:
       -
        name: transactionId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLines/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLines
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersLines especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLines'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersLines
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLines'
        required: true
      responses:
        "201":
          description: OrdersLines creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersLines especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersLines especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /selfServiceMaxDevolutionPeriod:
    get:
      description: Devuelve el conjunto de recursos del tipo SelfServiceMaxDevolutionPeriod
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo SelfServiceMaxDevolutionPeriod
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriod'
        required: true
      responses:
        "201":
          description: SelfServiceMaxDevolutionPeriod creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersSubShippingGroups/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersSubShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersSubShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersSubShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersSubShippingGroups'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersSubShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersSubShippingGroups'
        required: true
      responses:
        "201":
          description: OrdersSubShippingGroups creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersSubShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersSubShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLinesDiscounts/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLinesDiscounts
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesDiscountsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersLinesDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLinesDiscounts'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersLinesDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersLinesDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersParcelCollections/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersParcelCollections
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersParcelCollectionsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersParcelCollections especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersParcelCollections'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersParcelCollections
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersParcelCollections'
        required: true
      responses:
        "201":
          description: OrdersParcelCollections creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersParcelCollections especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersParcelCollections especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /selfServiceMaxDevolutionPeriodCriteria/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo SelfServiceMaxDevolutionPeriodCriteria
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteriaGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo SelfServiceMaxDevolutionPeriodCriteria especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteria'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo SelfServiceMaxDevolutionPeriodCriteria
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteria'
        required: true
      responses:
        "201":
          description: SelfServiceMaxDevolutionPeriodCriteria creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo SelfServiceMaxDevolutionPeriodCriteria especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo SelfServiceMaxDevolutionPeriodCriteria especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroups/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroups'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroups'
        required: true
      responses:
        "201":
          description: OrdersShippingGroups creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /deliveryCompanies/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo DeliveryCompanies
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryCompaniesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo DeliveryCompanies especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryCompanies'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo DeliveryCompanies
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryCompanies'
        required: true
      responses:
        "201":
          description: DeliveryCompanies creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo DeliveryCompanies especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo DeliveryCompanies especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/externalId/{externalId}/origin/{origin}:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders identified by the alternative identifier the attributes 'externalId' and 'origin'
      parameters:
       -
        name: externalId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: origin
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Orders identified by the alternative identifier the attributes 'externalId' and 'origin'
      parameters:
       -
        name: externalId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: origin
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Orders'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Orders identified by the alternative identifier the attributes 'externalId' and 'origin'
      parameters:
       -
        name: externalId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: origin
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Orders'
        required: true
      responses:
        "201":
          description: Orders creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Orders identified by the alternative identifier the attributes 'externalId' and 'origin'
      parameters:
       -
        name: externalId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: origin
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Orders identified by the alternative identifier the attributes 'externalId' and 'origin'
      parameters:
       -
        name: externalId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: origin
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLinesDiscounts/orderLine/{orderLine}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLinesDiscounts identified by the alternative identifier the attribute 'orderLine'
      parameters:
       -
        name: orderLine
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesDiscountsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersLinesDiscounts identified by the alternative identifier the attribute 'orderLine'
      parameters:
       -
        name: orderLine
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroups/{id}/ordersShippingGroupsReleases:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /clickAndCarCentres/companyId/{companyId}/centreId/{centreId}:
    get:
      description: Devuelve el conjunto de recursos del tipo ClickAndCarCentres identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickAndCarCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ClickAndCarCentres identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ClickAndCarCentres'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ClickAndCarCentres identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ClickAndCarCentres'
        required: true
      responses:
        "201":
          description: ClickAndCarCentres creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ClickAndCarCentres identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ClickAndCarCentres identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersSubShippingGroups:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersSubShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersSubShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersSubShippingGroups
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersSubShippingGroups'
        required: true
      responses:
        "201":
          description: OrdersSubShippingGroups creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroups/order/{order}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroups identified by the alternative identifier the attribute 'order'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersShippingGroups identified by the alternative identifier the attribute 'order'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentres/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo ShoppingCentres
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ShoppingCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentres'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ShoppingCentres
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentres'
        required: true
      responses:
        "201":
          description: ShoppingCentres creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ShoppingCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ShoppingCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroupsReleases/orderShippingGroup/{orderShippingGroup}/releaseId/{releaseId}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroupsReleases identified by the alternative identifier the attributes 'orderShippingGroup' and 'releaseId'
      parameters:
       -
        name: orderShippingGroup
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: releaseId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsReleasesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersShippingGroupsReleases identified by the alternative identifier the attributes 'orderShippingGroup' and 'releaseId'
      parameters:
       -
        name: orderShippingGroup
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: releaseId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroupsReleases'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersShippingGroupsReleases identified by the alternative identifier the attributes 'orderShippingGroup' and 'releaseId'
      parameters:
       -
        name: orderShippingGroup
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: releaseId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroupsReleases'
        required: true
      responses:
        "201":
          description: OrdersShippingGroupsReleases creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersShippingGroupsReleases identified by the alternative identifier the attributes 'orderShippingGroup' and 'releaseId'
      parameters:
       -
        name: orderShippingGroup
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: releaseId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersShippingGroupsReleases identified by the alternative identifier the attributes 'orderShippingGroup' and 'releaseId'
      parameters:
       -
        name: orderShippingGroup
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: releaseId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /countries/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo Countries
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Countries especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Countries'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Countries
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Countries'
        required: true
      responses:
        "201":
          description: Countries creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Countries especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Countries especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersSubShippingGroups/type/{type}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersSubShippingGroups identified by the alternative identifier the attribute 'type'
      parameters:
       -
        name: type
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersSubShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersSubShippingGroups identified by the alternative identifier the attribute 'type'
      parameters:
       -
        name: type
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersParcelCollections/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersParcelCollections
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersParcelCollectionsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersParcelCollections especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersParcelCollections'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersParcelCollections especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersParcelCollections especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersPayments/order/{order}/transactionId/{transactionId}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersPayments identified by the alternative identifier the attributes 'order' and 'transactionId'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: transactionId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersPaymentsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersPayments identified by the alternative identifier the attributes 'order' and 'transactionId'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: transactionId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersPayments'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersPayments identified by the alternative identifier the attributes 'order' and 'transactionId'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: transactionId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersPayments'
        required: true
      responses:
        "201":
          description: OrdersPayments creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersPayments identified by the alternative identifier the attributes 'order' and 'transactionId'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: transactionId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersPayments identified by the alternative identifier the attributes 'order' and 'transactionId'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: transactionId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersPayments/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersPayments
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersPaymentsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersPayments especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersPayments'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersPayments
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersPayments'
        required: true
      responses:
        "201":
          description: OrdersPayments creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersPayments especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersPayments especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /deliveryPoints/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo DeliveryPoints
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPointsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo DeliveryPoints especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryPoints'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo DeliveryPoints
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryPoints'
        required: true
      responses:
        "201":
          description: DeliveryPoints creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo DeliveryPoints especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo DeliveryPoints especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /provinces/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo Provinces
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvincesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Provinces especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Provinces'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Provinces
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Provinces'
        required: true
      responses:
        "201":
          description: Provinces creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Provinces especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Provinces especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Orders especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Orders'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Orders especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Orders especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersSubShippingGroups/order/{order}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersSubShippingGroups identified by the alternative identifier the attribute 'order'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersSubShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersSubShippingGroups identified by the alternative identifier the attribute 'order'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /customers/loginId/{loginId}:
    get:
      description: Devuelve el conjunto de recursos del tipo Customers identified by the alternative identifier the attribute 'loginId'
      parameters:
       -
        name: loginId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Customers identified by the alternative identifier the attribute 'loginId'
      parameters:
       -
        name: loginId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Customers'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Customers identified by the alternative identifier the attribute 'loginId'
      parameters:
       -
        name: loginId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Customers'
        required: true
      responses:
        "201":
          description: Customers creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Customers identified by the alternative identifier the attribute 'loginId'
      parameters:
       -
        name: loginId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Customers identified by the alternative identifier the attribute 'loginId'
      parameters:
       -
        name: loginId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersPayments/order/{order}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersPayments identified by the alternative identifier the attribute 'order'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersPaymentsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersPayments identified by the alternative identifier the attribute 'order'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentres:
    get:
      description: Devuelve el conjunto de recursos del tipo ShoppingCentres
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ShoppingCentres
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentres'
        required: true
      responses:
        "201":
          description: ShoppingCentres creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /provinces/name/{name}:
    get:
      description: Devuelve el conjunto de recursos del tipo Provinces identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvincesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Provinces identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/{id}/ordersInvoices:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Orders especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Orders'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Orders'
        required: true
      responses:
        "201":
          description: Orders creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Orders especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Orders especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Orders especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Orders'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Orders'
        required: true
      responses:
        "201":
          description: Orders creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Orders especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Orders especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersInvoices:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersInvoices
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersInvoicesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersInvoices
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersInvoices'
        required: true
      responses:
        "201":
          description: OrdersInvoices creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /selfServiceMaxDevolutionPeriod/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo SelfServiceMaxDevolutionPeriod
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo SelfServiceMaxDevolutionPeriod especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriod'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo SelfServiceMaxDevolutionPeriod especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo SelfServiceMaxDevolutionPeriod especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /clickAndCarCentres/name/{name}:
    get:
      description: Devuelve el conjunto de recursos del tipo ClickAndCarCentres identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickAndCarCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ClickAndCarCentres identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ClickAndCarCentres'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ClickAndCarCentres identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ClickAndCarCentres'
        required: true
      responses:
        "201":
          description: ClickAndCarCentres creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ClickAndCarCentres identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ClickAndCarCentres identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /deliveryPoints/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo DeliveryPoints
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPointsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo DeliveryPoints especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryPoints'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo DeliveryPoints
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryPoints'
        required: true
      responses:
        "201":
          description: DeliveryPoints creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo DeliveryPoints especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo DeliveryPoints especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroups/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroups'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroups/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroups'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroups'
        required: true
      responses:
        "201":
          description: OrdersShippingGroups creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentres/name/{name}:
    get:
      description: Devuelve el conjunto de recursos del tipo ShoppingCentres identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ShoppingCentres identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersInvoices/order/{order}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersInvoices identified by the alternative identifier the attribute 'order'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersInvoicesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersInvoices identified by the alternative identifier the attribute 'order'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /clickAndCarCentres:
    get:
      description: Devuelve el conjunto de recursos del tipo ClickAndCarCentres
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickAndCarCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ClickAndCarCentres
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ClickAndCarCentres'
        required: true
      responses:
        "201":
          description: ClickAndCarCentres creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /clickAndCarCentres/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo ClickAndCarCentres
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickAndCarCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ClickAndCarCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ClickAndCarCentres'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ClickAndCarCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ClickAndCarCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentresSts/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo ShoppingCentresSts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresStsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ShoppingCentresSts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentresSts'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ShoppingCentresSts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentresSts'
        required: true
      responses:
        "201":
          description: ShoppingCentresSts creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ShoppingCentresSts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ShoppingCentresSts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /countries:
    get:
      description: Devuelve el conjunto de recursos del tipo Countries
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Countries
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Countries'
        required: true
      responses:
        "201":
          description: Countries creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /countries/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo Countries
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Countries especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Countries'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Countries especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Countries especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /deliveryCompanies:
    get:
      description: Devuelve el conjunto de recursos del tipo DeliveryCompanies
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryCompaniesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo DeliveryCompanies
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryCompanies'
        required: true
      responses:
        "201":
          description: DeliveryCompanies creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersSubShippingGroups/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersSubShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersSubShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersSubShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersSubShippingGroups'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersSubShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersSubShippingGroups'
        required: true
      responses:
        "201":
          description: OrdersSubShippingGroups creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersSubShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersSubShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLinesDiscounts/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLinesDiscounts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesDiscountsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersLinesDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLinesDiscounts'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersLinesDiscounts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLinesDiscounts'
        required: true
      responses:
        "201":
          description: OrdersLinesDiscounts creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersLinesDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersLinesDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /customers:
    get:
      description: Devuelve el conjunto de recursos del tipo Customers
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Customers
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Customers'
        required: true
      responses:
        "201":
          description: Customers creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentres/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo ShoppingCentres
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ShoppingCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentres'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ShoppingCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ShoppingCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /principals/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo Principals
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrincipalsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersInvoices/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersInvoices
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersInvoicesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersInvoices especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersInvoices'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersInvoices
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersInvoices'
        required: true
      responses:
        "201":
          description: OrdersInvoices creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersInvoices especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersInvoices especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentres/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo ShoppingCentres
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ShoppingCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentres'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ShoppingCentres
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentres'
        required: true
      responses:
        "201":
          description: ShoppingCentres creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ShoppingCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ShoppingCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /clickAndCarCentres/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo ClickAndCarCentres
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickAndCarCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ClickAndCarCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ClickAndCarCentres'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ClickAndCarCentres
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ClickAndCarCentres'
        required: true
      responses:
        "201":
          description: ClickAndCarCentres creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ClickAndCarCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ClickAndCarCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Orders especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Orders'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Orders'
        required: true
      responses:
        "201":
          description: Orders creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Orders especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Orders especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/{id}/ordersShippingGroups:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /selfServiceMaxDevolutionPeriodCriteria/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo SelfServiceMaxDevolutionPeriodCriteria
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteriaGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo SelfServiceMaxDevolutionPeriodCriteria especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteria'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo SelfServiceMaxDevolutionPeriodCriteria
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteria'
        required: true
      responses:
        "201":
          description: SelfServiceMaxDevolutionPeriodCriteria creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo SelfServiceMaxDevolutionPeriodCriteria especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo SelfServiceMaxDevolutionPeriodCriteria especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLinesDiscounts/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLinesDiscounts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesDiscountsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersLinesDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLinesDiscounts'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersLinesDiscounts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLinesDiscounts'
        required: true
      responses:
        "201":
          description: OrdersLinesDiscounts creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersLinesDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersLinesDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /principals/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo Principals
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrincipalsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /principals/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo Principals
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrincipalsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersPayments/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersPayments
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersPaymentsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersPayments especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersPayments'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersPayments
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersPayments'
        required: true
      responses:
        "201":
          description: OrdersPayments creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersPayments especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersPayments especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentresSts/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo ShoppingCentresSts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresStsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ShoppingCentresSts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentresSts'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ShoppingCentresSts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentresSts'
        required: true
      responses:
        "201":
          description: ShoppingCentresSts creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ShoppingCentresSts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ShoppingCentresSts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /customers/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo Customers
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Customers especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Customers'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Customers
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Customers'
        required: true
      responses:
        "201":
          description: Customers creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Customers especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Customers especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/{id}/ordersSubShippingGroups:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroupsReleases/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroupsReleases
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsReleasesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersShippingGroupsReleases especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroupsReleases'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersShippingGroupsReleases
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroupsReleases'
        required: true
      responses:
        "201":
          description: OrdersShippingGroupsReleases creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersShippingGroupsReleases especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersShippingGroupsReleases especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersInvoices/order/{order}/invoiceNumber/{invoiceNumber}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersInvoices identified by the alternative identifier the attributes 'order' and 'invoiceNumber'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: invoiceNumber
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersInvoicesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersInvoices identified by the alternative identifier the attributes 'order' and 'invoiceNumber'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: invoiceNumber
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersInvoices'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersInvoices identified by the alternative identifier the attributes 'order' and 'invoiceNumber'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: invoiceNumber
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersInvoices'
        required: true
      responses:
        "201":
          description: OrdersInvoices creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersInvoices identified by the alternative identifier the attributes 'order' and 'invoiceNumber'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: invoiceNumber
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersInvoices identified by the alternative identifier the attributes 'order' and 'invoiceNumber'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: invoiceNumber
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /selfServiceMaxDevolutionPeriod/{id}/selfServiceMaxDevolutionPeriodCriteria:
    get:
      description: Devuelve el conjunto de recursos del tipo SelfServiceMaxDevolutionPeriod
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLines/order/{order}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLines identified by the alternative identifier the attribute 'order'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersLines identified by the alternative identifier the attribute 'order'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroupsReleases/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroupsReleases
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsReleasesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersShippingGroupsReleases especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroupsReleases'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersShippingGroupsReleases especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersShippingGroupsReleases especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /selfServiceMaxDevolutionPeriodCriteria/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo SelfServiceMaxDevolutionPeriodCriteria
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteriaGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo SelfServiceMaxDevolutionPeriodCriteria especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteria'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo SelfServiceMaxDevolutionPeriodCriteria
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteria'
        required: true
      responses:
        "201":
          description: SelfServiceMaxDevolutionPeriodCriteria creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo SelfServiceMaxDevolutionPeriodCriteria especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo SelfServiceMaxDevolutionPeriodCriteria especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /countries/code/{code}:
    get:
      description: Devuelve el conjunto de recursos del tipo Countries identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Countries identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Countries'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Countries identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Countries'
        required: true
      responses:
        "201":
          description: Countries creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Countries identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Countries identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersDiscounts/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersDiscounts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersDiscountsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersDiscounts'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersDiscounts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersDiscounts'
        required: true
      responses:
        "201":
          description: OrdersDiscounts creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersDiscounts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersInvoices/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersInvoices
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersInvoicesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersInvoices especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersInvoices'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersInvoices especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersInvoices especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /deliveryCompanies/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo DeliveryCompanies
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryCompaniesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo DeliveryCompanies especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryCompanies'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo DeliveryCompanies
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryCompanies'
        required: true
      responses:
        "201":
          description: DeliveryCompanies creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo DeliveryCompanies especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo DeliveryCompanies especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /selfServiceMaxDevolutionPeriodCriteria/selfServiceMaxDevolutionPeriod/{selfServiceMaxDevolutionPeriod}:
    get:
      description: Devuelve el conjunto de recursos del tipo SelfServiceMaxDevolutionPeriodCriteria identified by the alternative identifier the attribute 'selfServiceMaxDevolutionPeriod'
      parameters:
       -
        name: selfServiceMaxDevolutionPeriod
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteriaGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo SelfServiceMaxDevolutionPeriodCriteria identified by the alternative identifier the attribute 'selfServiceMaxDevolutionPeriod'
      parameters:
       -
        name: selfServiceMaxDevolutionPeriod
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /principals:
    get:
      description: Devuelve el conjunto de recursos del tipo Principals
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrincipalsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /customers/email/{email}:
    get:
      description: Devuelve el conjunto de recursos del tipo Customers identified by the alternative identifier the attribute 'email'
      parameters:
       -
        name: email
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Customers identified by the alternative identifier the attribute 'email'
      parameters:
       -
        name: email
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLines/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLines
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersLines especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLines'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersLines especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersLines especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroupsReleases/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroupsReleases
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsReleasesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersShippingGroupsReleases especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroupsReleases'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersShippingGroupsReleases
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroupsReleases'
        required: true
      responses:
        "201":
          description: OrdersShippingGroupsReleases creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersShippingGroupsReleases especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersShippingGroupsReleases especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLines:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLines
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersLines
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersLines'
        required: true
      responses:
        "201":
          description: OrdersLines creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersInvoices/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersInvoices
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersInvoicesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersInvoices especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersInvoices'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersInvoices
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersInvoices'
        required: true
      responses:
        "201":
          description: OrdersInvoices creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersInvoices especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersInvoices especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersSubShippingGroups/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersSubShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersSubShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersSubShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersSubShippingGroups'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersSubShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersSubShippingGroups'
        required: true
      responses:
        "201":
          description: OrdersSubShippingGroups creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersSubShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersSubShippingGroups especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentresSts/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo ShoppingCentresSts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresStsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ShoppingCentresSts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentresSts'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ShoppingCentresSts
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentresSts'
        required: true
      responses:
        "201":
          description: ShoppingCentresSts creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ShoppingCentresSts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ShoppingCentresSts especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentres/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo ShoppingCentres
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ShoppingCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentres'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ShoppingCentres
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentres'
        required: true
      responses:
        "201":
          description: ShoppingCentres creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ShoppingCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ShoppingCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /principals/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo Principals
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrincipalsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentres/companyId/{companyId}/centreId/{centreId}:
    get:
      description: Devuelve el conjunto de recursos del tipo ShoppingCentres identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ShoppingCentres identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentres'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ShoppingCentres identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentres'
        required: true
      responses:
        "201":
          description: ShoppingCentres creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ShoppingCentres identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ShoppingCentres identified by the alternative identifier the attributes 'companyId' and 'centreId'
      parameters:
       -
        name: companyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: centreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/{id}/ordersParcelCollections:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /countries/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo Countries
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Countries especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Countries'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Countries
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Countries'
        required: true
      responses:
        "201":
          description: Countries creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Countries especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Countries especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /selfServiceMaxDevolutionPeriod/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo SelfServiceMaxDevolutionPeriod
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo SelfServiceMaxDevolutionPeriod especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriod'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo SelfServiceMaxDevolutionPeriod
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriod'
        required: true
      responses:
        "201":
          description: SelfServiceMaxDevolutionPeriod creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo SelfServiceMaxDevolutionPeriod especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo SelfServiceMaxDevolutionPeriod especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /deliveryCompanies/{id}:
    get:
      description: Devuelve el conjunto de recursos del tipo DeliveryCompanies
      parameters:
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryCompaniesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo DeliveryCompanies especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryCompanies'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo DeliveryCompanies especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo DeliveryCompanies especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /deliveryCompanies/name/{name}:
    get:
      description: Devuelve el conjunto de recursos del tipo DeliveryCompanies identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryCompaniesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo DeliveryCompanies identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentresSts:
    get:
      description: Devuelve el conjunto de recursos del tipo ShoppingCentresSts
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresStsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ShoppingCentresSts
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ShoppingCentresSts'
        required: true
      responses:
        "201":
          description: ShoppingCentresSts creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /countries/name/{name}:
    get:
      description: Devuelve el conjunto de recursos del tipo Countries identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Countries identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Countries'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Countries identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Countries'
        required: true
      responses:
        "201":
          description: Countries creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Countries identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Countries identified by the alternative identifier the attribute 'name'
      parameters:
       -
        name: name
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentresSts/sellCentreId/{sellCentreId}/sellCompanyId/{sellCompanyId}/stockCompanyId/{stockCompanyId}:
    get:
      description: "Devuelve el conjunto de recursos del tipo ShoppingCentresSts identified by the alternative identifier the attributes 'sellCentreId', 'sellCompanyId' and 'stockCompanyId'"
      parameters:
       -
        name: sellCentreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: sellCompanyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: stockCompanyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresStsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: "Elimina el recurso del tipo ShoppingCentresSts identified by the alternative identifier the attributes 'sellCentreId', 'sellCompanyId' and 'stockCompanyId'"
      parameters:
       -
        name: sellCentreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: sellCompanyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: stockCompanyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /provinces/code/{code}:
    get:
      description: Devuelve el conjunto de recursos del tipo Provinces identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvincesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Provinces identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Provinces'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Provinces identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Provinces'
        required: true
      responses:
        "201":
          description: Provinces creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Provinces identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Provinces identified by the alternative identifier the attribute 'code'
      parameters:
       -
        name: code
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /deliveryPoints/deliveryPointId/{deliveryPointId}:
    get:
      description: Devuelve el conjunto de recursos del tipo DeliveryPoints identified by the alternative identifier the attribute 'deliveryPointId'
      parameters:
       -
        name: deliveryPointId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPointsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo DeliveryPoints identified by the alternative identifier the attribute 'deliveryPointId'
      parameters:
       -
        name: deliveryPointId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryPoints'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo DeliveryPoints identified by the alternative identifier the attribute 'deliveryPointId'
      parameters:
       -
        name: deliveryPointId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryPoints'
        required: true
      responses:
        "201":
          description: DeliveryPoints creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo DeliveryPoints identified by the alternative identifier the attribute 'deliveryPointId'
      parameters:
       -
        name: deliveryPointId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo DeliveryPoints identified by the alternative identifier the attribute 'deliveryPointId'
      parameters:
       -
        name: deliveryPointId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /customers/fullName/{fullName}:
    get:
      description: Devuelve el conjunto de recursos del tipo Customers identified by the alternative identifier the attribute 'fullName'
      parameters:
       -
        name: fullName
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Customers identified by the alternative identifier the attribute 'fullName'
      parameters:
       -
        name: fullName
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /customers/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo Customers
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Customers especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Customers'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Customers
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Customers'
        required: true
      responses:
        "201":
          description: Customers creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Customers especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Customers especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersDiscounts:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersDiscounts
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersDiscountsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersDiscounts
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersDiscounts'
        required: true
      responses:
        "201":
          description: OrdersDiscounts creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /selfServiceMaxDevolutionPeriod/{attribute1}/{value1}/{attribute2}/{value2}/{attribute3}/{value3}:
    get:
      description: Devuelve el conjunto de recursos del tipo SelfServiceMaxDevolutionPeriod
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo SelfServiceMaxDevolutionPeriod especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriod'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo SelfServiceMaxDevolutionPeriod
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriod'
        required: true
      responses:
        "201":
          description: SelfServiceMaxDevolutionPeriod creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo SelfServiceMaxDevolutionPeriod especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo SelfServiceMaxDevolutionPeriod especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/attribute3'
       -
        $ref: '#/components/parameters/value3'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersParcelCollections/order/{order}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersParcelCollections identified by the alternative identifier the attribute 'order'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersParcelCollectionsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersParcelCollections identified by the alternative identifier the attribute 'order'
      parameters:
       -
        name: order
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersParcelCollections:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersParcelCollections
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersParcelCollectionsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersParcelCollections
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersParcelCollections'
        required: true
      responses:
        "201":
          description: OrdersParcelCollections creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /clickAndCarCentres/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo ClickAndCarCentres
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickAndCarCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo ClickAndCarCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ClickAndCarCentres'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo ClickAndCarCentres
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/ClickAndCarCentres'
        required: true
      responses:
        "201":
          description: ClickAndCarCentres creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo ClickAndCarCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo ClickAndCarCentres especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersLines/{id}/ordersLinesDiscounts:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersLines
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/id'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersLinesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders/customer/{customer}/externalId/{externalId}:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders identified by the alternative identifier the attributes 'customer' and 'externalId'
      parameters:
       -
        name: customer
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: externalId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Orders identified by the alternative identifier the attributes 'customer' and 'externalId'
      parameters:
       -
        name: customer
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: externalId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /deliveryPoints/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo DeliveryPoints
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPointsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo DeliveryPoints especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryPoints'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo DeliveryPoints
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryPoints'
        required: true
      responses:
        "201":
          description: DeliveryPoints creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo DeliveryPoints especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo DeliveryPoints especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /orders:
    get:
      description: Devuelve el conjunto de recursos del tipo Orders
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Orders
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Orders'
        required: true
      responses:
        "201":
          description: Orders creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersParcelCollections/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersParcelCollections
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersParcelCollectionsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersParcelCollections especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersParcelCollections'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersParcelCollections
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersParcelCollections'
        required: true
      responses:
        "201":
          description: OrdersParcelCollections creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersParcelCollections especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersParcelCollections especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroupsReleases:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroupsReleases
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsReleasesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersShippingGroupsReleases
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroupsReleases'
        required: true
      responses:
        "201":
          description: OrdersShippingGroupsReleases creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersPayments/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersPayments
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersPaymentsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersPayments especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersPayments'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersPayments
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersPayments'
        required: true
      responses:
        "201":
          description: OrdersPayments creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersPayments especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersPayments especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersParcelCollections/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersParcelCollections
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersParcelCollectionsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo OrdersParcelCollections especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersParcelCollections'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersParcelCollections
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersParcelCollections'
        required: true
      responses:
        "201":
          description: OrdersParcelCollections creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo OrdersParcelCollections especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo OrdersParcelCollections especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /shoppingCentres/sellCentreId/{sellCentreId}/sellCompanyId/{sellCompanyId}/stockCompanyId/{stockCompanyId}:
    get:
      description: "Devuelve el conjunto de recursos del tipo ShoppingCentres identified by the alternative identifier the attributes 'sellCentreId', 'sellCompanyId' and 'stockCompanyId'"
      parameters:
       -
        name: sellCentreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: sellCompanyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: stockCompanyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCentresGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: "Elimina el recurso del tipo ShoppingCentres identified by the alternative identifier the attributes 'sellCentreId', 'sellCompanyId' and 'stockCompanyId'"
      parameters:
       -
        name: sellCentreId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: sellCompanyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
       -
        name: stockCompanyId
        in: path
        description: Load list fields values on results
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /provinces/{attribute1}/{value1}:
    get:
      description: Devuelve el conjunto de recursos del tipo Provinces
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvincesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo Provinces especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Provinces'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo Provinces
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Provinces'
        required: true
      responses:
        "201":
          description: Provinces creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo Provinces especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo Provinces especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /deliveryPoints:
    get:
      description: Devuelve el conjunto de recursos del tipo DeliveryPoints
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPointsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo DeliveryPoints
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryPoints'
        required: true
      responses:
        "201":
          description: DeliveryPoints creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /ordersShippingGroups:
    get:
      description: Devuelve el conjunto de recursos del tipo OrdersShippingGroups
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShippingGroupsGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo OrdersShippingGroups
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/OrdersShippingGroups'
        required: true
      responses:
        "201":
          description: OrdersShippingGroups creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /deliveryCompanies/{attribute1}/{value1}/{attribute2}/{value2}:
    get:
      description: Devuelve el conjunto de recursos del tipo DeliveryCompanies
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryCompaniesGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Modifica el recurso del tipo DeliveryCompanies especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryCompanies'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo DeliveryCompanies
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/DeliveryCompanies'
        required: true
      responses:
        "201":
          description: DeliveryCompanies creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Elimina el recurso del tipo DeliveryCompanies especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    patch:
      description: Ejecuta una serie de operaciones de modificación parcial sobre el recurso del tipo DeliveryCompanies especificado con el identificador único
      parameters:
       -
        $ref: '#/components/parameters/attribute1'
       -
        $ref: '#/components/parameters/value1'
       -
        $ref: '#/components/parameters/attribute2'
       -
        $ref: '#/components/parameters/value2'
      requestBody:
        content:
          application/json:
            schema:
              required:
               - operations
              type: object
              properties:
                operations:
                  $ref: '#/components/schemas/operations'
        required: true
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Ususally related to foreing key restriction violation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validations:
                    $ref: '#/components/schemas/validations'
                  errors:
                    $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "404":
          description: Request with id of unexisting record
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /selfServiceMaxDevolutionPeriodCriteria:
    get:
      description: Devuelve el conjunto de recursos del tipo SelfServiceMaxDevolutionPeriodCriteria
      parameters:
       -
        $ref: '#/components/parameters/searchParam'
       -
        $ref: '#/components/parameters/customSearchParam'
       -
        $ref: '#/components/parameters/countParam'
       -
        $ref: '#/components/parameters/skipParam'
       -
        $ref: '#/components/parameters/limitParam'
       -
        $ref: '#/components/parameters/termsParam'
       -
        $ref: '#/components/parameters/rangesParam'
       -
        $ref: '#/components/parameters/loadListsParam'
       -
        $ref: '#/components/parameters/initializeParam'
       -
        $ref: '#/components/parameters/onDemandActionsParam'
      responses:
        "200":
          description: Operation completed without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteriaGetResult'
        "400":
          description: The response contains errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "404":
          description: Resource not found or unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      description: Crea un nuevo recurso del tipo SelfServiceMaxDevolutionPeriodCriteria
      requestBody:
        content:
          application/json:
            schema:
              required:
               - document
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteria'
        required: true
      responses:
        "201":
          description: SelfServiceMaxDevolutionPeriodCriteria creation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postResult'
        "400":
          description: Bad request. Could be due to data validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  duplicated:
                    $ref: '#/components/schemas/duplicated'
                  errors:
                    $ref: '#/components/schemas/errors'
                  validations:
                    $ref: '#/components/schemas/validations'
        "401":
          description: Request has missing authentication header or token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "403":
          description: User has no permission in some the entities under query
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "405":
          description: Operation not supported for the entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "500":
          description: Unspecified error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/errors'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: 10KPerMin
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
components:
  schemas:
    duplicated:
      type: object
      properties:
        id:
          type: string
          description: Duplicated id
      description: Duplicated record
    postResult:
      type: object
      properties:
        id:
          type: string
          description: Id of the created record
        time:
          type: integer
          description: Time taken for record creation
        additions:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
      description: Creation result
    operations:
      minItems: 1
      uniqueItems: true
      type: array
      items:
        type: object
        properties:
          op:
            type: string
            description: "Operation to perform (one of, add, replace, remove)"
          path:
            type: string
            description: Path to the document attribute on wich perform operation
          value:
            type: string
            description: Value to apply on attribute
    errors:
      minItems: 1
      uniqueItems: true
      type: array
      description: Set of errors returned for the operation
      items:
        $ref: '#/components/schemas/error'
    error:
      type: object
      properties:
        code:
          type: string
          enum:
           - OPERATION_NOT_SUPPORTED
           - ENTITY_REQUIRED
           - ENTITY_NOT_SUPPPORTED
           - UNHANDLED_EXCEPTION
           - TIMEOUT_EXCEPTION
           - PERMISSION_DENIED
           - VALIDATION_ERRORS
           - INVALID_CAPTCHA_RESPONSE
           - ENTITY_DOES_NOT_EXIST
           - REFERENTIAL_INTEGRITY_ERROR
           - DUPLICATED_RECORD
           - DUPLICATED_RECORD_EXCEPTION
           - RESOURCE_NOT_FOUND
           - ID_REQUIRED
           - OPERATIONS_REQUIRED
           - ATTRIBUTE_NOT_DEFINED
           - UNAUTHORIZED
           - DOCUMENT_REQUIRED
        message:
          type: string
      description: Error definition
    validations:
      minItems: 1
      uniqueItems: true
      type: array
      description: Set of validation errors
      items:
        $ref: '#/components/schemas/validation'
    validation:
      type: object
      properties:
        level:
          type: string
          description: The level of the validation error
        schema:
          type: object
          properties:
            loadingURI:
              type: string
              description: Schema loading URI
            pointer:
              type: string
              description: Path to object
          description: The schema against validation
        instance:
          type: object
          properties:
            pointer:
              type: string
              description: Path to object
          description: The validated object
        domain:
          type: string
          description: Type of message
        keyword:
          type: string
          description: If required keyword
        message:
          type: string
          description: Validation message
        required:
          minItems: 1
          uniqueItems: true
          type: array
          description: Required attributes
          items:
            type: string
        missing:
          minItems: 1
          uniqueItems: true
          type: array
          description: Missing attributes
          items:
            type: string
      description: Validation error definition
    PrincipalsGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/Principals'
      description: Principals Get Response
    CustomersGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/Customers'
      description: Customers Get Response
    OrdersGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/Orders'
      description: Orders Get Response
    OrdersLinesGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/OrdersLines'
      description: OrdersLines Get Response
    OrdersPaymentsGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/OrdersPayments'
      description: OrdersPayments Get Response
    OrdersDiscountsGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/OrdersDiscounts'
      description: OrdersDiscounts Get Response
    OrdersLinesDiscountsGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/OrdersLinesDiscounts'
      description: OrdersLinesDiscounts Get Response
    OrdersShippingGroupsGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/OrdersShippingGroups'
      description: OrdersShippingGroups Get Response
    ShoppingCentresGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/ShoppingCentres'
      description: ShoppingCentres Get Response
    ShoppingCentresStsGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/ShoppingCentresSts'
      description: ShoppingCentresSts Get Response
    CountriesGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/Countries'
      description: Countries Get Response
    ProvincesGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/Provinces'
      description: Provinces Get Response
    DeliveryCompaniesGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/DeliveryCompanies'
      description: DeliveryCompanies Get Response
    OrdersShippingGroupsReleasesGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/OrdersShippingGroupsReleases'
      description: OrdersShippingGroupsReleases Get Response
    OrdersInvoicesGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/OrdersInvoices'
      description: OrdersInvoices Get Response
    SelfServiceMaxDevolutionPeriodGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriod'
      description: SelfServiceMaxDevolutionPeriod Get Response
    SelfServiceMaxDevolutionPeriodCriteriaGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/SelfServiceMaxDevolutionPeriodCriteria'
      description: SelfServiceMaxDevolutionPeriodCriteria Get Response
    ClickAndCarCentresGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/ClickAndCarCentres'
      description: ClickAndCarCentres Get Response
    OrdersParcelCollectionsGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/OrdersParcelCollections'
      description: OrdersParcelCollections Get Response
    OrdersSubShippingGroupsGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/OrdersSubShippingGroups'
      description: OrdersSubShippingGroups Get Response
    DeliveryPointsGetResult:
      type: object
      properties:
        time:
          type: number
          description: Query execution time
        filtered:
          type: boolean
          description: Results are filtered
        hasNext:
          type: boolean
          description: Has more results
        documents:
          type: array
          description: Query results
          items:
            $ref: '#/components/schemas/DeliveryPoints'
      description: DeliveryPoints Get Response
    Principals:
      title: Principals validation
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - Principals
        role:
          type: string
          description: Rol
          enum:
           - Anonymous
           - Customer
           - Administrator
           - Importer
           - Searcher
           - SearchNonTicketing
           - SearchTicketing
           - SuperCustomer
           - SearchSterlingDvd
           - SearchTicketingTravelAgency
           - SearchTicketingDepartmentStore
           - SearchTicketingCallcenter
           - SearchTicketingCorporate
      additionalProperties: false
      description: Principals que se pueden autenticar en el sistema.
    Customers:
      title: Customers validation
      required:
       - fullName
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - Customers
             - Principals
        role:
          type: string
          description: Rol
          enum:
           - Anonymous
           - Customer
           - Administrator
           - Importer
           - Searcher
           - SearchNonTicketing
           - SearchTicketing
           - SuperCustomer
           - SearchSterlingDvd
           - SearchTicketingTravelAgency
           - SearchTicketingDepartmentStore
           - SearchTicketingCallcenter
           - SearchTicketingCorporate
        email:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Dirección de correo electrónico
        fullName:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 200
          type: string
          description: Nombre completo
        documentNumber:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: DNI / NIE / Tarjeta de residencia
        loginId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador del cliente
        gperId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador del cliente en GPER
        dvdId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador del cliente en Backoffice de la DVD
        province:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Provincia a la que está asociado el cliente.
        addressLine1:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 1000
          type: string
          description: "Tipo de vía, nombre de vía, número"
        addressLine2:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Resto de la dirección (bloque, escaleras, piso, puerta, ...)"
        addressLine3:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Código postal, ciudad (provincia)"
        addressLine4:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: País
        addressPostalCode:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Dirección de facturación (código postal)
        addressCity:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Dirección de facturación (ciudad)
        addressState:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Dirección de facturación (provincia)
        phoneNumber:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Número de teléfono
        address:
          type: object
          properties:
            country:
              type: string
              description: País
            region:
              type: string
              description: Provincia
            regionCode:
              type: string
              description: Código de provincia
            locality:
              type: string
              description: Localidad
            postalCode:
              type: string
              description: Código postal
            wayType:
              type: string
              description: Tipo de dirección
            wayName:
              type: string
              description: Nombre de dirección
            wayNumber:
              type: string
              description: Número de dirección
            building:
              type: string
              description: Bloque
            stairs:
              type: string
              description: Escalera
            floor:
              type: string
              description: Piso
            door:
              type: string
              description: Puerta
            otherInformation:
              type: string
              description: Información adicional
          description: Dirección
        documentType:
          type: string
          description: Tipo de documento
          enum:
           - DNI
           - NIE
           - RESIDENTIAL_CARD
           - CIF
           - PASSPORT
           - BI
           - OTHERS
      additionalProperties: false
      description: Clientes de ECI
    Orders:
      title: Orders validation
      required:
       - customer
       - externalId
       - orderDateTime
       - origin
       - statusDateTime
       - totalAmount
       - totalShippingAmount
      type: object
      properties:
        ordersLinesList:
          type: array
          items:
            required:
             - amount
             - orderLineType
            type: object
            properties:
              ordersLinesDiscountsList:
                type: array
                items:
                  required:
                   - percent
                  type: object
                  properties:
                    _id:
                      type: string
                      description: "Entity Unique ID, this field must not be included on entity creation (POST)"
                    _lastModified:
                      type: string
                      description: "Last modification timestamp, this field must not be included on entity creation (POST)"
                      format: date-time
                    _types:
                      minItems: 1
                      uniqueItems: true
                      type: array
                      description: Entity type
                      items:
                        type: string
                        enum:
                         - OrdersLinesDiscounts
                    percent:
                      multipleOf: 0.01
                      maximum: 100
                      minimum: 0
                      maxLength: 100
                      type: number
                      description: Porcentaje de descuento
                    comments:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 10000
                      type: string
                      description: Comentarios del descuento
                    amount:
                      multipleOf: 0.01
                      maximum: 9999999
                      minimum: 0
                      maxLength: 100
                      type: number
                      description: Importe
                    discountCode:
                      type: string
                      description: Código de descuento
                      enum:
                       - COLLECTIVE
                       - PLAN
                       - VOUCHER
                       - GOP
                       - PROG_AVIOS
                       - PLAN_AFTER
                       - PROMOTIONAL
                    resultAmount:
                      multipleOf: 0.01
                      maximum: 999999
                      minimum: -999999
                      maxLength: 100
                      type: number
                      description: Importe resultante
                  additionalProperties: false
                  description: Descuentos de las líneas de detalle de los pedidos
              _id:
                type: string
                description: "Entity Unique ID, this field must not be included on entity creation (POST)"
              _lastModified:
                type: string
                description: "Last modification timestamp, this field must not be included on entity creation (POST)"
                format: date-time
              _types:
                minItems: 1
                uniqueItems: true
                type: array
                description: Entity type
                items:
                  type: string
                  enum:
                   - OrdersLines
              reference:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Referencia del producto que contiene la línea de pedido
              gtin:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Código estándar de producto
              ean:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 13
                type: string
                description: Código EAN 13. Se especifica en las líneas de pedidos SPCC.
              stlQuantity:
                multipleOf: 0.001
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: number
                description: Campo original de cantidad
              stlQuantityUnit:
                type: string
                description: Campo original de la unidad en la que se mide la cantidad
                enum:
                 - GRAMS
                 - TRAY
                 - UNITS
                 - LITRES
                 - KILOGRAMS
                 - PIECE
                 - METERS
              quantity:
                multipleOf: 0.001
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: number
                description: Cantidad
              quantityUnit:
                type: string
                description: Unidad en la que se mide la cantidad
                enum:
                 - GRAMS
                 - TRAY
                 - UNITS
                 - LITRES
                 - KILOGRAMS
                 - PIECE
                 - METERS
              seller:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Proveedor
              salePrice:
                multipleOf: 0.01
                maximum: 9999999
                minimum: 0
                maxLength: 100
                type: number
                description: Precio de venta unitario
              unitPrice:
                multipleOf: 0.01
                maximum: 9999999
                minimum: 0
                maxLength: 100
                type: number
                description: Precio final aplicado por unidad
              unitPriceUnit:
                type: string
                description: Unidad en la que se mide la cantidad
                enum:
                 - GRAMS
                 - TRAY
                 - UNITS
                 - LITRES
                 - KILOGRAMS
                 - PIECE
                 - METERS
              amount:
                multipleOf: 0.01
                maximum: 9999999
                minimum: 0
                maxLength: 100
                type: number
                description: Importe de la línea de pedido
              description:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 1000
                type: string
                description: Descripción del producto como mezcla de atributos suficientemente detallado
              imageUrl:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2000
                type: string
                description: Imagen del producto
              imageAspectRatio:
                multipleOf: 0.01
                maximum: 10
                minimum: 0
                maxLength: 100
                type: number
                description: Aspect ratio de la imagen
              wrapped:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Indica si se envuelve para regalo (true) o no (false)
              comments:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 10000
                type: string
                description: Comentarios de la línea de detalle del pedido
              orderLineId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Identificador único de la línea utilizado en el sistema origen. Es una clave natural.
              status:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Estado
              originStatus:
                uniqueItems: true
                type: array
                items:
                  type: object
                  properties:
                    status:
                      type: string
                      description: Estado en el origen
                    quantity:
                      type: number
                      description: Cantidad
                    quantityStatus:
                      type: string
                      description: Estado del numero de unidades
                    isCancel:
                      type: boolean
                      description: Indica si se puede cancelar la unidad (true) o no (false)
                    isReturn:
                      type: boolean
                      description: Indica si la unidad se puede devolver (true) o no (false)
                    isLessQuantity:
                      type: boolean
                      description: Indica si se permite reducir cantidad de unidades (true) o no (false)
                    isLessQuantityReturn:
                      type: boolean
                      description: Indica si se pueden devolver unidades
                    amount:
                      type: number
                      description: Total
                  description: Estado
              vprReservationId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Id de reserva vpr
              orderLineType:
                type: string
                description: Tipo de línea de pedido
                enum:
                 - PRODUCT
                 - SHIPPING_COST
                 - GIFT
                 - VPR
                 - DIGITAL
                 - SERVICES_CHARGE
                 - MKP
                 - GENERIC
                 - FLAT_RATE
                 - REFUND_CHARGE
                 - BOOKS
                 - SAMPLE
                 - EDP
                 - INSURANCE
                 - THIRD_PARTY_SERVICE_A
                 - PARKING
                 - FUEL
                 - TRV
                 - SERVICE
              couponCode:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Código de cupón
              signalServices:
                uniqueItems: true
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Nombre del servicio
                    type:
                      type: string
                      description: Tipo del servicio
                    code:
                      type: string
                      description: Código del servicio
                  description: Tipos de servicio contratados
              variants:
                type: object
                properties:
                  talla:
                    type: number
                    description: Talla
                  copa:
                    type: string
                    description: Copa
                  color:
                    type: string
                    description: Color
                  modelo:
                    type: string
                    description: Modelo
                description: Variante del producto
              isCancel:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Se permite cancelar una línea
              stlPrimeLineNo:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Número linea principal STL
              stlSubLineNo:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Número de sublinea STL
              isLessQuantity:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Se permite reducir cantidad a nivel de línea
              serialNumber:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: "Número de serie de la unidad correspondiente a la línea de pedido. En caso de ser la línea de pedido correspondiente a los gastos de envío, identificar la tarifa plana aplicada"
              isReturn:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Indica si el producto se puede devolver
              isNotReturnable:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Indica si el producto se puede devolver
              isLessQuantityReturn:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Indica si se pueden devolver unidades de un producto
              gifts:
                uniqueItems: true
                type: array
                items:
                  multipleOf: 1
                  maximum: 999999
                  minimum: 0
                  maxLength: 100
                  type: string
                  description: Regalos
              giftsDetails:
                uniqueItems: true
                type: array
                items:
                  type: object
                  properties:
                    orderLineId:
                      type: string
                      description: Identificador de la línea
                    stlPrimeLineNo:
                      type: string
                      description: Número linea principal STL
                    stlSubLineNo:
                      type: string
                      description: Número de sublinea STL
                    stlPrimeLineNoSg:
                      type: string
                      description: Número linea principal STL a nivel de operación de venta
                  description: Detalle regalos
              pdpUrl:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2000
                type: string
                description: Url PDP
              stlPrimeLineNoSg:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Número linea principal STL a nivel de operación de venta
              shippingGroupLineId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Identificador único de la línea utilizado en el sistema origen a nivel de operación de venta. Es una clave natural.
              code:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Código de producto en Omnistore
              itemGroups:
                uniqueItems: true
                type: array
                items:
                  multipleOf: 1
                  maximum: 999999
                  minimum: 0
                  maxLength: 100
                  type: string
                  description: Jerarquías de venta
              brand:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Código de marca en Omnistore
              productReviewEnabled:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Habilitada review de producto
              originMethod:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Tipo de cumplimentación
              providerCode:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Código de proveedor
              goodsType:
                type: string
                description: Tipo de producto
                enum:
                 - LIGHT
                 - NON_BULKY
                 - BULKY
                 - VERY_BULKY
              productReviewInfo:
                type: object
                properties:
                  code:
                    type: string
                    description: Código de producto en Omnistore
                  brand:
                    type: string
                    description: Código de marca en Omnistore
                  itemGroups:
                    type: array
                    description: Jerarquías de venta
                    items:
                      type: string
                description: Información para reviews
              eciSupplier:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Tipo de explotación
              providerDescription:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Descripción del proveedor
              isAwaitingSupplier:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: A la espera del proveedor
              orderLineTypeSort:
                multipleOf: 0.001
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: number
                description: Peso ordenación por tipo de linea
              estimatedDelivery:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Fecha de entrega estimada
                format: date-time
              isDateChangedByCus:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Fecha de entrega elegida por el cliente
              providerTaxId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Identificación fistal del proveedor
              providerAddress:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Dirección del proveedor
              shipNode:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Centro logístico
              isLuxury:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: El producto es mercancía de lujo
              digitalAdminCode:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Código administrativo (mercancía digital)
              relatedDigitalLines:
                uniqueItems: true
                type: array
                items:
                  multipleOf: 1
                  maximum: 999999
                  minimum: 0
                  maxLength: 100
                  type: string
                  description: Mercancía digital vinculada
              availableParcelCollectionCompany:
                uniqueItems: true
                type: array
                items:
                  multipleOf: 1
                  maximum: 999999
                  minimum: 0
                  maxLength: 100
                  type: string
                  description: Códigos de empresa para devolución
              inverseOfRelatedDigitalLines:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Mercancía física vinculada
              requestedQuantity:
                multipleOf: 0.001
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: number
                description: Cantidad solicitada
              requestedQuantityUnit:
                type: string
                description: Unidad de medida la cantidad solicitada
                enum:
                 - GRAMS
                 - TRAY
                 - UNITS
                 - LITRES
                 - KILOGRAMS
                 - PIECE
                 - METERS
              dispatchedQuantity:
                multipleOf: 0.001
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: number
                description: Cantidad surtida
              dispatchedQuantityUnit:
                type: string
                description: Unidad de medida la cantidad surtida
                enum:
                 - GRAMS
                 - TRAY
                 - UNITS
                 - LITRES
                 - KILOGRAMS
                 - PIECE
                 - METERS
              replacedBy:
                uniqueItems: true
                type: array
                items:
                  multipleOf: 1
                  maximum: 999999
                  minimum: 0
                  maxLength: 2000
                  type: string
                  description: Sustituido por
              replacementFor:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2000
                type: string
                description: Sustituye a
              shipNodeCentre:
                maxLength: 24
                minLength: 24
                pattern: "[0-9a-fA-F]{24}"
                type: string
                description: Centro de expedición y centro derivado para consultas y reclamaciones de clientes
              insurancePolicyId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Número de póliza
              insuranceCertificate:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Certificado del seguro
              urgentDeliveryType:
                type: string
                description: Entrega urgente en 24 o 48 horas
                enum:
                 - "24"
                 - "48"
              isExactDeliveryDate:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Fecha de entrega exacta
              launchDate:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2000
                type: string
                description: Fecha de lanzamiento
                format: date-time
              foodPreparationInstruction:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2000
                type: string
                description: Tipo de preparado
              originPayments:
                uniqueItems: true
                type: array
                items:
                  type: object
                  properties:
                    method:
                      type: string
                      description: Método de pago
                    amount:
                      type: number
                      description: Total
                    paymentAmount:
                      type: number
                      description: Total del pago en origen
                  description: Pagos de esta línea
              recipientPhoneNumber:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Recipient Phone number
              recipientEmail:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Recipient Email
              dedicationUrl:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2000
                type: string
                description: Url de la dedicatoria
              modificationDedicationUrl:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2000
                type: string
                description: Url para modificaciones de la dedicatoria
              deliverySlotStart:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Fecha inicio tramo de entrega
                format: date-time
              deliverySlotEnd:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Fecha fin tramo de entrega
                format: date-time
              isModifiableDeliveryTimeSlot:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Se permite modificar el tramo horario de envío
              estimatedStartDelivery:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Fecha inicio entrega estimada
                format: date-time
              isApproximatePrice:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Indica si es un precio aproximado
              resendPIN:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Indica si se puede reenviar el PIN
              resendEmail:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Indica si se puede reenviar el email
              isReturnTP:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Indica si el pedido se puede devolver con Tarifa Plana
              fulfillmentDate:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Fecha de completación
            additionalProperties: false
            description: Líneas de detalle de los pedidos
        ordersPaymentsList:
          type: array
          items:
            required:
             - amount
             - method
             - transactionDate
             - transactionId
            type: object
            properties:
              _id:
                type: string
                description: "Entity Unique ID, this field must not be included on entity creation (POST)"
              _lastModified:
                type: string
                description: "Last modification timestamp, this field must not be included on entity creation (POST)"
                format: date-time
              _types:
                minItems: 1
                uniqueItems: true
                type: array
                description: Entity type
                items:
                  type: string
                  enum:
                   - OrdersPayments
              transactionId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Identificador de la transacción
              method:
                type: string
                description: Método de pago
                enum:
                 - CREDIT_CARD
                 - ECI_CARD
                 - CASH
                 - PAYPAL
                 - GIFT_CARD
                 - CREDIT_LINE
                 - HIRE_PURCHASE
                 - INSTALLMENTS
                 - MULTIBANK
                 - ALIPAY
                 - BALANCE_BAG
                 - CHECK
                 - EPAY
                 - OTHER
                 - TWYP
                 - VOUCHER
                 - WAYLET
                 - WECHAT
                 - MBWAY
                 - MULTIBANK_SIBS
                 - BIZUM
                 - UNKNOWN
                 - AVIO
              status:
                type: string
                description: Estado del pago
                enum:
                 - PENDING
                 - AUTHORISED
                 - CHARGED
                 - CANCEL
              amount:
                multipleOf: 0.01
                maximum: 999999
                minimum: -999999
                maxLength: 100
                type: number
                description: Importe del pago
              transactionDate:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Fecha de la transacción
                format: date-time
              creditCardLastFourDigits:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 4
                type: string
                description: Últimos cuatro dígitos de la tarjeta de crédito
              transactionType:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Tipo de transacción
              giftCardAmount:
                multipleOf: 0.01
                maximum: 9999999
                minimum: 0
                maxLength: 100
                type: number
                description: "Del total (amount), indica cuánto se ha pagado en tarjetas regalo."
              description:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 1000
                type: string
                description: Descripción del medio de pago
              paymentGroupType:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 1000
                type: string
                description: Servicio corporativo de medios de pago
              orderShippingGroup:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Shipping group al que pertenece
              isHidden:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Si se oculta en el frontal
              codebar:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Código de Barras
            additionalProperties: false
            description: Pagos de los pedidos
        ordersDiscountsList:
          type: array
          items:
            required:
             - amount
            type: object
            properties:
              _id:
                type: string
                description: "Entity Unique ID, this field must not be included on entity creation (POST)"
              _lastModified:
                type: string
                description: "Last modification timestamp, this field must not be included on entity creation (POST)"
                format: date-time
              _types:
                minItems: 1
                uniqueItems: true
                type: array
                description: Entity type
                items:
                  type: string
                  enum:
                   - OrdersDiscounts
              amount:
                multipleOf: 0.01
                maximum: 9999999
                minimum: 0
                maxLength: 100
                type: number
                description: Importe del descuento
              comments:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 10000
                type: string
                description: Comentarios del descuento
              discountCode:
                type: string
                description: Código de descuento
                enum:
                 - COLLECTIVE
                 - PLAN
                 - VOUCHER
                 - GOP
                 - PROG_AVIOS
                 - PLAN_AFTER
                 - PROMOTIONAL
              payment:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 10000
                type: string
                description: Pago asociado
              codebar:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Código de Barras
              percent:
                multipleOf: 0.01
                maximum: 100
                minimum: 0
                maxLength: 100
                type: number
                description: Porcentaje de descuento
            additionalProperties: false
            description: Descuentos de los pedidos
        ordersShippingGroupsList:
          type: array
          items:
            required:
             - method
             - status
            type: object
            properties:
              ordersShippingGroupsReleasesList:
                type: array
                items:
                  required:
                   - releaseId
                  type: object
                  properties:
                    _id:
                      type: string
                      description: "Entity Unique ID, this field must not be included on entity creation (POST)"
                    _lastModified:
                      type: string
                      description: "Last modification timestamp, this field must not be included on entity creation (POST)"
                      format: date-time
                    _types:
                      minItems: 1
                      uniqueItems: true
                      type: array
                      description: Entity type
                      items:
                        type: string
                        enum:
                         - OrdersShippingGroupsReleases
                    releaseId:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 100
                      type: string
                      description: Identificador de release
                    invoiceNumber:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 100
                      type: string
                      description: Números de facturas
                    invoiceDocumentName:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 100
                      type: string
                      description: Nnombre del documento en Documentum correspondiente a la factura
                    fulfillmentDate:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 100
                      type: string
                      description: Fecha de completación
                      format: date-time
                    originMethod:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 100
                      type: string
                      description: Tipo de cumplimentación
                    providerCode:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 100
                      type: string
                      description: Código de proveedor
                    releaseLines:
                      type: array
                      items:
                        type: object
                        properties:
                          orderLineId:
                            type: string
                            description: Id de la linea de la orden
                          shippingGroupLineId:
                            type: string
                            description: Id de la linea de la operación de venta
                          units:
                            type: number
                            description: Unidades
                        description: Lineas
                    trackingUrl:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 2000
                      type: string
                      description: URL identificador de seguimiento
                    deliveryCompany:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 2000
                      type: string
                      description: Empresa de envío
                    trackingNumber:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 2000
                      type: string
                      description: Identificador de seguimiento
                    deliveryCompanyId:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 2000
                      type: string
                      description: Identificador de la empresa de envío
                    deliveryCompanySubcontractor:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 2000
                      type: string
                      description: Subagencia de la empresa de envío
                    deliveryCompanySubcontractorId:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 2000
                      type: string
                      description: Identificador de la subagencia de envío
                    deliveryStatus:
                      type: array
                      items:
                        type: object
                        properties:
                          eventStatus:
                            type: string
                            description: Estado de la entrega
                          startDate:
                            type: string
                            description: 'Fecha del cambio de estado '
                        description: Estado de la entrega
                    saleTransactionId:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 100
                      type: string
                      description: Suboperación de venta
                    deliveryProviderFullName:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 100
                      type: string
                      description: Nombre del repartidor
                    deliveryProviderTelephone:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 100
                      type: string
                      description: Teléfono del repartidor
                    isDeliveryProviderInfoAvailable:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 100
                      type: boolean
                      description: Contiene datos de contacto del transportista
                    subSaleTransactionId:
                      multipleOf: 1
                      maximum: 999999
                      minimum: 0
                      maxLength: 100
                      type: string
                      description: Id de a suboperación de venta
                  additionalProperties: false
                  description: Información de entregas asociadas a la operación de venta
              _id:
                type: string
                description: "Entity Unique ID, this field must not be included on entity creation (POST)"
              _lastModified:
                type: string
                description: "Last modification timestamp, this field must not be included on entity creation (POST)"
                format: date-time
              _types:
                minItems: 1
                uniqueItems: true
                type: array
                description: Entity type
                items:
                  type: string
                  enum:
                   - OrdersShippingGroups
              orderLines:
                uniqueItems: true
                type: array
                items:
                  maxLength: 24
                  minLength: 24
                  pattern: "[0-9a-fA-F]{24}"
                  type: string
                  description: Líneas de detalle del pedido que se envían en este grupo de envío
              status:
                type: string
                description: Estado del grupo de envío
                enum:
                 - PENDING_ACTION
                 - BLOCKED
                 - PENDING_PICKING
                 - PICKING
                 - PICKING_FINISHED
                 - ON_ROUTE
                 - CANCELLED
                 - FULFILLED
                 - TRANSFERRED
                 - PAYMENT_DENIED
                 - RETURN_PENDING_PICKING
                 - RETURN_ON_ROUTE
                 - RETURN_REVISION_PENDING
                 - RETURN_FINISHED
                 - RETURN_CANCELLED
                 - NPDA
                 - PENDING_OMS_INTEGRATION
                 - CUSTOMER_ON_ROUTE
                 - CUSTOMER_IN_STORE
              statusId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Id de stado (opcional)
              releaseId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Id de release
              method:
                type: string
                description: Método de envío
                enum:
                 - HOME_DELIVERY
                 - PICKUP_SAVE_TO_STORE
                 - PICKUP_CLICK_AND_COLLECT
                 - DIGITAL_EBOOKS
                 - DIGITAL_FILMIN
                 - DIGITAL_SPOTIFY
                 - DIGITAL_SONY
                 - CLICK_AND_CAR
                 - CLICK_AND_EXPRESS
                 - TICKET
                 - DEPARTMENT_STORE
                 - INTANGIBLE
              originMethod:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Método de envío gestionado por STERLING
              shoppingCentre:
                maxLength: 24
                minLength: 24
                pattern: "[0-9a-fA-F]{24}"
                type: string
                description: Centro comercial de ECI
              shoppingCentreSts:
                maxLength: 24
                minLength: 24
                pattern: "[0-9a-fA-F]{24}"
                type: string
                description: Centro comercial de ECI
              comments:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 10000
                type: string
                description: Comentarios del grupo de envío
              saleTransactionId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Sale transaction Id (Sterling)
              relatedShippingGroups:
                uniqueItems: true
                type: array
                items:
                  multipleOf: 1
                  maximum: 999999
                  minimum: 0
                  maxLength: 100
                  type: string
                  description: Sterling
              splitType:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Sterling
              transactionType:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Sterling
              invoiceNumbers:
                uniqueItems: true
                type: array
                items:
                  multipleOf: 1
                  maximum: 999999
                  minimum: 0
                  maxLength: 100
                  type: string
                  description: Números de facturas
              province:
                maxLength: 24
                minLength: 24
                pattern: "[0-9a-fA-F]{24}"
                type: string
                description: Provincia a la que está asociado el shippingGroup.
              estimatedDelivery:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Estimación de entrega
                format: date-time
              deliveryTime:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Fecha en la que se produce el cambio de estado
                format: date-time
              shippingAddressAlias:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Alias de la dirección de envío
              shippingAddressFullName:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 1000
                type: string
                description: Nombre completo del contacto de la dirección de envío
              shippingAddressLine1:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 1000
                type: string
                description: "Tipo de vía, nombre de vía, número"
              shippingAddressLine2:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: "Resto de la dirección (bloque, escaleras, piso, puerta, ...)"
              shippingAddressLine3:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: "Código postal, ciudad (provincia)"
              shippingAddressLine4:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: País
              shippingAddressCountryIso:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2
                type: string
                description: Código País
              shippingAddressComments:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 250
                type: string
                description: Comentarios para la ayuda a la entrega de la dirección de envío
              phoneNumber:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Número de teléfono
              deliveryCompany:
                maxLength: 24
                minLength: 24
                pattern: "[0-9a-fA-F]{24}"
                type: string
                description: Empresa de mensajería
              shippingCompany:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Empresa de envío
              deliverySlotStart:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Fecha inicio tramo de entrega
                format: date-time
              deliverySlotEnd:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Fecha fin tramo de entrega
                format: date-time
              trackingNumber:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Identificador de seguimiento
              trackingUrl:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: URL identificador de seguimiento
              collectionPoint:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Punto de recogida
              originStatus:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Estado en el origen
              orderPayments:
                uniqueItems: true
                type: array
                items:
                  maxLength: 24
                  minLength: 24
                  pattern: "[0-9a-fA-F]{24}"
                  type: string
                  description: Pagos de este grupo de envíos
              invoiceDocumentName:
                uniqueItems: true
                type: array
                items:
                  multipleOf: 1
                  maximum: 999999
                  minimum: 0
                  maxLength: 100
                  type: string
                  description: Nnombre del documento en Documentum correspondiente a la factura
              isCancel:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Se permite cancelar una operación de venta
              isModifyShippingAddress:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Se permite modificar la dirección de entrega
              stlDocumentType:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Tipo documento STL
              stlEnterpriseCode:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Código empresa STL
              codebar:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 50
                type: string
                description: Código de barras ECI. Usado para poder hacer las devoluciones relacionadas con el shipping group
              allowFrontModification:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Flag para deaterminar si se pueden hacer modificaciones desde el front . El atributo se usa en la lógica para el calculo de isCancel para evitar que se cancele un pedido un vez que se ha imprimido la etiqueta del pedido desde SPCC en el centro comercial
              controlCode:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 50
                type: string
                description: Código de control de código de barras
              isGeneratedCoupon:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Genera cupón
              isDateChangedByCus:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Fecha de entrega elegida por el cliente
              subtotalAmount:
                multipleOf: 0.01
                maximum: 9999999
                minimum: 0
                maxLength: 100
                type: number
                description: Importe total de la operación de venta sin descuentos globales aplicados
              totalShippingAmount:
                multipleOf: 0.01
                maximum: 9999999
                minimum: 0
                maxLength: 100
                type: number
                description: Gastos de envío totales
              externalSaleTransactionId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Identificador del pedido en el sistema origen
              yantra:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Código yantra
              shippingAddress:
                type: object
                properties:
                  country:
                    type: string
                    description: País
                  region:
                    type: string
                    description: Provincia
                  regionCode:
                    type: string
                    description: Código de provincia
                  locality:
                    type: string
                    description: Localidad
                  postalCode:
                    type: string
                    description: Código postal
                  wayType:
                    type: string
                    description: Tipo de dirección
                  wayName:
                    type: string
                    description: Nombre de dirección
                  wayNumber:
                    type: string
                    description: Número de dirección
                  building:
                    type: string
                    description: Bloque
                  stairs:
                    type: string
                    description: Escalera
                  floor:
                    type: string
                    description: Piso
                  door:
                    type: string
                    description: Puerta
                  otherInformation:
                    type: string
                    description: Información adicional
                description: Dirección
              isAmountPrinted:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Tiene ticket regalo
              isGiftReceiptAllowed:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Permite solicitar ticket regalo
              isModifiableDeliveryTimeSlot:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Se permite modificar el tramo horario de envío
              isModifiableCollectionTimeSlot:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Se permite modificar el tramo horario de recogida
              urgentDeliveryType:
                type: string
                description: Entrega urgente en 24 o 48 horas
                enum:
                 - "24"
                 - "48"
              isAddOrderedItemAllowed:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Se permite añadir mercancía
              isExactDeliveryDate:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Fecha de entrega exacta
              seller:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Proveedor
              salesOperation:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Operación de venta asociado
              isTicketAvailable:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Si está disponible el ticket de venta
              ticketDownloadURL:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2000
                type: string
                description: Url del ticket de venta
              deliveryProviderFullName:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Nombre del repartidor
              deliveryProviderTelephone:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Teléfono del repartidor
              isDeliveryProviderInfoAvailable:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Contiene datos de contacto del transportista
              originPayments:
                uniqueItems: true
                type: array
                items:
                  type: object
                  properties:
                    method:
                      type: string
                      description: MÃ©todo de pago
                    amount:
                      type: number
                      description: Total
                    paymentAmount:
                      type: number
                      description: Total del pago en origen
                  description: Pagos de este grupo de envíos
              distributionCentre:
                type: object
                properties:
                  companyId:
                    type: string
                    description: Id de la empresa
                  centreId:
                    type: string
                    description: Id del centro
                description: Centro de distribucion de este grupo de envios
              collectionPointDescription:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Detalles específicos sobre el punto de recogida
              shippingAddressPostalCode:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Dirección de envío (código postal)
              shippingAddressCity:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Dirección de envío (ciudad)
              shippingAddressState:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Dirección de envío (provincia)
            additionalProperties: false
            description: Datos de envío de grupos de líneas de detalle de los pedidos
        ordersInvoicesList:
          type: array
          items:
            required:
             - invoiceNumber
            type: object
            properties:
              _id:
                type: string
                description: "Entity Unique ID, this field must not be included on entity creation (POST)"
              _lastModified:
                type: string
                description: "Last modification timestamp, this field must not be included on entity creation (POST)"
                format: date-time
              _types:
                minItems: 1
                uniqueItems: true
                type: array
                description: Entity type
                items:
                  type: string
                  enum:
                   - OrdersInvoices
              invoiceNumber:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Números de facturas
              invoiceDocumentName:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Nnombre del documento en Documentum correspondiente a la factura
            additionalProperties: false
            description: Información de facturas
        ordersParcelCollectionsList:
          type: array
          items:
            required:
             - method
             - status
             - transactionId
            type: object
            properties:
              _id:
                type: string
                description: "Entity Unique ID, this field must not be included on entity creation (POST)"
              _lastModified:
                type: string
                description: "Last modification timestamp, this field must not be included on entity creation (POST)"
                format: date-time
              _types:
                minItems: 1
                uniqueItems: true
                type: array
                description: Entity type
                items:
                  type: string
                  enum:
                   - OrdersParcelCollections
              orderLines:
                uniqueItems: true
                type: array
                items:
                  maxLength: 24
                  minLength: 24
                  pattern: "[0-9a-fA-F]{24}"
                  type: string
                  description: Líneas de la recogida
              status:
                type: string
                description: Estado de la recogida
                enum:
                 - PENDING_ACTION
                 - BLOCKED
                 - PENDING_PICKING
                 - PICKING
                 - PICKING_FINISHED
                 - ON_ROUTE
                 - CANCELLED
                 - FULFILLED
                 - TRANSFERRED
                 - PAYMENT_DENIED
                 - RETURN_PENDING_PICKING
                 - RETURN_ON_ROUTE
                 - RETURN_REVISION_PENDING
                 - RETURN_FINISHED
                 - RETURN_CANCELLED
                 - NPDA
                 - PENDING_OMS_INTEGRATION
                 - CUSTOMER_ON_ROUTE
                 - CUSTOMER_IN_STORE
              method:
                type: string
                description: Tipo de recogida
                enum:
                 - HOME_DELIVERY
                 - PICKUP_SAVE_TO_STORE
                 - PICKUP_CLICK_AND_COLLECT
                 - DIGITAL_EBOOKS
                 - DIGITAL_FILMIN
                 - DIGITAL_SPOTIFY
                 - DIGITAL_SONY
                 - CLICK_AND_CAR
                 - CLICK_AND_EXPRESS
                 - TICKET
                 - DEPARTMENT_STORE
                 - INTANGIBLE
              originMethod:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Tipo de recogida gestionado por Sterling
              collectionCentre:
                maxLength: 24
                minLength: 24
                pattern: "[0-9a-fA-F]{24}"
                type: string
                description: Centro comercial
              transactionId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Transacción
              relatedSaleTransactionId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Operación de venta original
              estimatedCollectionDate:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Fecha estimada de recogida
                format: date-time
              parcelQuantity:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: number
                description: Número de bultos
              collectionAddressFullName:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Datos de la dirección de recogida
              collectionAddressLine1:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Datos de la dirección de recogida
              collectionAddressLine2:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Datos de la dirección de recogida
              collectionAddressLine3:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Datos de la dirección de recogida
              collectionAddressLine4:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Datos de la dirección de recogida
              phoneNumber:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Datos de teléfono
              totalCollectionAmount:
                multipleOf: 0.01
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: number
                description: Gastos de recogida
              deliveryCompany:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Empresa de envío
              deliveryCompanyId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Identificador de la empresa de envío
              deliveryCompanySubcontractor:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Subagencia de la empresa de envío
              deliveryCompanySubcontractorId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Identificador de la subagencia de envío
              trackingUrl:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: URL seguimiento
              trackingNumber:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Identificador de seguimiento
              deliveryStatus:
                type: array
                items:
                  type: object
                  properties:
                    eventStatus:
                      type: string
                      description: Estado de la entrega
                    startDate:
                      type: string
                      description: 'Fecha del cambio de estado '
                  description: Estado de la recogida
            additionalProperties: false
            description: Operaciones de recogida
        ordersSubShippingGroupsList:
          type: array
          items:
            required:
             - status
            type: object
            properties:
              _id:
                type: string
                description: "Entity Unique ID, this field must not be included on entity creation (POST)"
              _lastModified:
                type: string
                description: "Last modification timestamp, this field must not be included on entity creation (POST)"
                format: date-time
              _types:
                minItems: 1
                uniqueItems: true
                type: array
                description: Entity type
                items:
                  type: string
                  enum:
                   - OrdersSubShippingGroups
              parentShippingGroup:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Shipping group al que pertenece
              type:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Tipo
              saleTransactionId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Sale transaction Id (Sterling)
              status:
                type: string
                description: Estado del grupo de envío
                enum:
                 - PENDING_ACTION
                 - BLOCKED
                 - PENDING_PICKING
                 - PICKING
                 - PICKING_FINISHED
                 - ON_ROUTE
                 - CANCELLED
                 - FULFILLED
                 - TRANSFERRED
                 - PAYMENT_DENIED
                 - RETURN_PENDING_PICKING
                 - RETURN_ON_ROUTE
                 - RETURN_REVISION_PENDING
                 - RETURN_FINISHED
                 - RETURN_CANCELLED
                 - NPDA
                 - PENDING_OMS_INTEGRATION
                 - CUSTOMER_ON_ROUTE
                 - CUSTOMER_IN_STORE
              isCancel:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Se permite cancelar
            additionalProperties: false
            description: Datos de envío de subgrupos de líneas de detalle de los pedidos
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - Orders
        customer:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Cliente al que pertenece el pedido
        externalId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador del pedido en el sistema origen
        origin:
          type: string
          description: Sistema origen del que procede el pedido
          enum:
           - DVD
           - GPER
           - SPCC
           - STERLING
           - ONEBOX
           - EXPERTUS
           - QWANTIQ
           - JANTO
           - SECUTIX
           - AVAIBOOK
           - TCK_UNKNOWN
           - TPV
           - EXPERTICKET
        totalAmount:
          multipleOf: 0.01
          maximum: 9999999
          minimum: 0
          maxLength: 100
          type: number
          description: Importe total
        orderDateTime:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha del pedido
          format: date-time
        totalShippingAmount:
          multipleOf: 0.01
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: number
          description: Gastos de envío totales
        realShippingAmount:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Indica si los gastos de envío son reales (true) o una estimación (false)
        statusDateTime:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha en la que se produce el cambio de estado
          format: date-time
        comments:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 10000
          type: string
          description: Comentarios del pedido
        status:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Sterling
        companyId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador ECI de la compañía del centro comercial
        channelId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Id de canal
        subchannelId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Id de subcanal
        businessLineId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Id de línea de negocio
        urlSource:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: URL
        billingAddressFullName:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 1000
          type: string
          description: Nombre completo del contacto en la dirección de facturación
        billingAddressAlias:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Alias de la dirección de facturación
        billingAddressLine1:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 1000
          type: string
          description: "Tipo de vía, nombre de vía, número"
        billingAddressLine2:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Resto de la dirección (bloque, escaleras, piso, puerta, ...)"
        billingAddressLine3:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Código postal, ciudad (provincia)"
        billingAddressLine4:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: País
        isRequireInvoice:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Indica si el cliente ya a solicitado una factura
        isInvoiceRequest:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Indica si hay solicitud de factura (True) o no (False)
        invoiceNumbers:
          uniqueItems: true
          type: array
          items:
            multipleOf: 1
            maximum: 999999
            minimum: 0
            maxLength: 100
            type: string
            description: Números de facturas
        invoiceDocumentName:
          uniqueItems: true
          type: array
          items:
            multipleOf: 1
            maximum: 999999
            minimum: 0
            maxLength: 100
            type: string
            description: Nnombre del documento en Documentum correspondiente a la factura
        invoiceCompulsory:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Indica si la factura es obligatoria (True) o no (False)
        invoiceReason:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Razón de la factura
        invoiceDate:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha de la factura
          format: date-time
        invoiceAnswer:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Factura con respuesta (True) o no (False)
        invoiceCodeAnswer:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código de respuesta de la factura
        invoiceAnswerDescription:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Descripción de la respuesta
        invoiceCoutryNifCode:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código ISO del país de emisión de factura
        invoiceGender:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Género de los datos de facturas
        invoiceEmail:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Email asociado a la factura
        subtotalAmount:
          multipleOf: 0.01
          maximum: 9999999
          minimum: 0
          maxLength: 100
          type: number
          description: Importe total sin descuentos globales aplicados
        siteId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Site de compra
        fullName:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Nombre completo del cliente
        channelType:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Tipo de canal
        afterSalesUrl:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 1000
          type: string
          description: Url de postventa
        afterSalesMessage:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 1000
          type: string
          description: Mensaje de postventa
        billingAddress:
          type: object
          properties:
            country:
              type: string
              description: País
            region:
              type: string
              description: Provincia
            regionCode:
              type: string
              description: Código de provincia
            locality:
              type: string
              description: Localidad
            postalCode:
              type: string
              description: Código postal
            wayType:
              type: string
              description: Tipo de dirección
            wayName:
              type: string
              description: Nombre de dirección
            wayNumber:
              type: string
              description: Número de dirección
            building:
              type: string
              description: Bloque
            stairs:
              type: string
              description: Escalera
            floor:
              type: string
              description: Piso
            door:
              type: string
              description: Puerta
            otherInformation:
              type: string
              description: Información adicional
          description: Dirección
        totalPaidAmount:
          multipleOf: 0.01
          maximum: 9999999
          minimum: -9999999
          maxLength: 100
          type: number
          description: Importe total descontando cupones
        email:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Dirección de correo electrónico del cliente
        documentNumber:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Documento de identificación del cliente
        documentType:
          type: string
          description: Tipo de documento de identificación del cliente
          enum:
           - DNI
           - NIE
           - RESIDENTIAL_CARD
           - CIF
           - PASSPORT
           - BI
           - OTHERS
        phoneNumber:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Número de teléfono del cliente
        isCancel:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Se permite cancelar un pedido
        isInvoiceAllowed:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Se permite factura
        totalReturnAmount:
          multipleOf: 0.01
          maximum: 9999999
          minimum: 0
          maxLength: 100
          type: number
          description: Importe total de los artículos devueltos
        amount:
          multipleOf: 0.01
          maximum: 9999999
          minimum: 0
          maxLength: 100
          type: number
          description: Importe resultante de sumar totalAmount y totalShippingAmount
        getOrderDetailResult:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Result of getOrderDetail request
        billingAddressCountryIso:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2
          type: string
          description: Direccion de facturacion (codigo pais)
        transactionType:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Tipo de transferencia
        salesOperationList:
          uniqueItems: true
          type: array
          items:
            multipleOf: 1
            maximum: 999999
            minimum: 0
            maxLength: 100
            type: string
            description: Operaciones de venta relacionadas
        alternateExternalId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador alternativo del pedido
        originPayments:
          type: object
          properties:
            method:
              type: string
              description: MÃ©todo de pago
            amount:
              type: number
              description: Total
            paymentAmount:
              type: number
              description: Total del pago en origen
          description: Pagos de esta orden
        isFinished:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Campo que indica si el pedido esta finalizado
        serviceType:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Campo que indica el tipo de servicio
        dedication:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Dedicatoria del pedido
        serviceOrigin:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Para estos pedidos tendrá un valor del tipo GLOVO pero para futuros casos podrá tener JUSTEAT
        exchangeExternalId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador de pedido de intercambio
        isPackingList:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Pedido con formato packing list
        billingAddressPostalCode:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Dirección de facturación (código postal)
        billingAddressCity:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: ' Dirección de facturación (ciudad)'
        billingAddressState:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Dirección de facturación (provincia)
      additionalProperties: false
      description: Pedidos
    OrdersLines:
      title: OrdersLines validation
      required:
       - amount
       - order
       - orderLineType
      type: object
      properties:
        ordersLinesDiscountsList:
          type: array
          items:
            required:
             - percent
            type: object
            properties:
              _id:
                type: string
                description: "Entity Unique ID, this field must not be included on entity creation (POST)"
              _lastModified:
                type: string
                description: "Last modification timestamp, this field must not be included on entity creation (POST)"
                format: date-time
              _types:
                minItems: 1
                uniqueItems: true
                type: array
                description: Entity type
                items:
                  type: string
                  enum:
                   - OrdersLinesDiscounts
              percent:
                multipleOf: 0.01
                maximum: 100
                minimum: 0
                maxLength: 100
                type: number
                description: Porcentaje de descuento
              comments:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 10000
                type: string
                description: Comentarios del descuento
              amount:
                multipleOf: 0.01
                maximum: 9999999
                minimum: 0
                maxLength: 100
                type: number
                description: Importe
              discountCode:
                type: string
                description: Código de descuento
                enum:
                 - COLLECTIVE
                 - PLAN
                 - VOUCHER
                 - GOP
                 - PROG_AVIOS
                 - PLAN_AFTER
                 - PROMOTIONAL
              resultAmount:
                multipleOf: 0.01
                maximum: 999999
                minimum: -999999
                maxLength: 100
                type: number
                description: Importe resultante
            additionalProperties: false
            description: Descuentos de las líneas de detalle de los pedidos
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - OrdersLines
        order:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Pedido al que pertenece la línea de detalle
        reference:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Referencia del producto que contiene la línea de pedido
        gtin:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código estándar de producto
        ean:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 13
          type: string
          description: Código EAN 13. Se especifica en las líneas de pedidos SPCC.
        stlQuantity:
          multipleOf: 0.001
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: number
          description: Campo original de cantidad
        stlQuantityUnit:
          type: string
          description: Campo original de la unidad en la que se mide la cantidad
          enum:
           - GRAMS
           - TRAY
           - UNITS
           - LITRES
           - KILOGRAMS
           - PIECE
           - METERS
        quantity:
          multipleOf: 0.001
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: number
          description: Cantidad
        quantityUnit:
          type: string
          description: Unidad en la que se mide la cantidad
          enum:
           - GRAMS
           - TRAY
           - UNITS
           - LITRES
           - KILOGRAMS
           - PIECE
           - METERS
        seller:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Proveedor
        salePrice:
          multipleOf: 0.01
          maximum: 9999999
          minimum: 0
          maxLength: 100
          type: number
          description: Precio de venta unitario
        unitPrice:
          multipleOf: 0.01
          maximum: 9999999
          minimum: 0
          maxLength: 100
          type: number
          description: Precio final aplicado por unidad
        unitPriceUnit:
          type: string
          description: Unidad en la que se mide la cantidad
          enum:
           - GRAMS
           - TRAY
           - UNITS
           - LITRES
           - KILOGRAMS
           - PIECE
           - METERS
        amount:
          multipleOf: 0.01
          maximum: 9999999
          minimum: 0
          maxLength: 100
          type: number
          description: Importe de la línea de pedido
        description:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 1000
          type: string
          description: Descripción del producto como mezcla de atributos suficientemente detallado
        imageUrl:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2000
          type: string
          description: Imagen del producto
        imageAspectRatio:
          multipleOf: 0.01
          maximum: 10
          minimum: 0
          maxLength: 100
          type: number
          description: Aspect ratio de la imagen
        wrapped:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Indica si se envuelve para regalo (true) o no (false)
        comments:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 10000
          type: string
          description: Comentarios de la línea de detalle del pedido
        orderLineId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador único de la línea utilizado en el sistema origen. Es una clave natural.
        status:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Estado
        originStatus:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              status:
                type: string
                description: Estado en el origen
              quantity:
                type: number
                description: Cantidad
              quantityStatus:
                type: string
                description: Estado del numero de unidades
              isCancel:
                type: boolean
                description: Indica si se puede cancelar la unidad (true) o no (false)
              isReturn:
                type: boolean
                description: Indica si la unidad se puede devolver (true) o no (false)
              isLessQuantity:
                type: boolean
                description: Indica si se permite reducir cantidad de unidades (true) o no (false)
              isLessQuantityReturn:
                type: boolean
                description: Indica si se pueden devolver unidades
              amount:
                type: number
                description: Total
            description: Estado
        vprReservationId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Id de reserva vpr
        orderLineType:
          type: string
          description: Tipo de línea de pedido
          enum:
           - PRODUCT
           - SHIPPING_COST
           - GIFT
           - VPR
           - DIGITAL
           - SERVICES_CHARGE
           - MKP
           - GENERIC
           - FLAT_RATE
           - REFUND_CHARGE
           - BOOKS
           - SAMPLE
           - EDP
           - INSURANCE
           - THIRD_PARTY_SERVICE_A
           - PARKING
           - FUEL
           - TRV
           - SERVICE
        couponCode:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código de cupón
        signalServices:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Nombre del servicio
              type:
                type: string
                description: Tipo del servicio
              code:
                type: string
                description: Código del servicio
            description: Tipos de servicio contratados
        variants:
          type: object
          properties:
            talla:
              type: number
              description: Talla
            copa:
              type: string
              description: Copa
            color:
              type: string
              description: Color
            modelo:
              type: string
              description: Modelo
          description: Variante del producto
        isCancel:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Se permite cancelar una línea
        stlPrimeLineNo:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Número linea principal STL
        stlSubLineNo:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Número de sublinea STL
        isLessQuantity:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Se permite reducir cantidad a nivel de línea
        serialNumber:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Número de serie de la unidad correspondiente a la línea de pedido. En caso de ser la línea de pedido correspondiente a los gastos de envío, identificar la tarifa plana aplicada"
        isReturn:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Indica si el producto se puede devolver
        isNotReturnable:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Indica si el producto se puede devolver
        isLessQuantityReturn:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Indica si se pueden devolver unidades de un producto
        gifts:
          uniqueItems: true
          type: array
          items:
            multipleOf: 1
            maximum: 999999
            minimum: 0
            maxLength: 100
            type: string
            description: Regalos
        giftsDetails:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              orderLineId:
                type: string
                description: Identificador de la línea
              stlPrimeLineNo:
                type: string
                description: Número linea principal STL
              stlSubLineNo:
                type: string
                description: Número de sublinea STL
              stlPrimeLineNoSg:
                type: string
                description: Número linea principal STL a nivel de operación de venta
            description: Detalle regalos
        pdpUrl:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2000
          type: string
          description: Url PDP
        stlPrimeLineNoSg:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Número linea principal STL a nivel de operación de venta
        shippingGroupLineId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador único de la línea utilizado en el sistema origen a nivel de operación de venta. Es una clave natural.
        code:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código de producto en Omnistore
        itemGroups:
          uniqueItems: true
          type: array
          items:
            multipleOf: 1
            maximum: 999999
            minimum: 0
            maxLength: 100
            type: string
            description: Jerarquías de venta
        brand:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código de marca en Omnistore
        productReviewEnabled:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Habilitada review de producto
        originMethod:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Tipo de cumplimentación
        providerCode:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código de proveedor
        goodsType:
          type: string
          description: Tipo de producto
          enum:
           - LIGHT
           - NON_BULKY
           - BULKY
           - VERY_BULKY
        productReviewInfo:
          type: object
          properties:
            code:
              type: string
              description: Código de producto en Omnistore
            brand:
              type: string
              description: Código de marca en Omnistore
            itemGroups:
              type: array
              description: Jerarquías de venta
              items:
                type: string
          description: Información para reviews
        eciSupplier:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Tipo de explotación
        providerDescription:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Descripción del proveedor
        isAwaitingSupplier:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: A la espera del proveedor
        orderLineTypeSort:
          multipleOf: 0.001
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: number
          description: Peso ordenación por tipo de linea
        estimatedDelivery:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha de entrega estimada
          format: date-time
        isDateChangedByCus:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Fecha de entrega elegida por el cliente
        providerTaxId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificación fistal del proveedor
        providerAddress:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Dirección del proveedor
        shipNode:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Centro logístico
        isLuxury:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: El producto es mercancía de lujo
        digitalAdminCode:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código administrativo (mercancía digital)
        relatedDigitalLines:
          uniqueItems: true
          type: array
          items:
            multipleOf: 1
            maximum: 999999
            minimum: 0
            maxLength: 100
            type: string
            description: Mercancía digital vinculada
        availableParcelCollectionCompany:
          uniqueItems: true
          type: array
          items:
            multipleOf: 1
            maximum: 999999
            minimum: 0
            maxLength: 100
            type: string
            description: Códigos de empresa para devolución
        inverseOfRelatedDigitalLines:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Mercancía física vinculada
        requestedQuantity:
          multipleOf: 0.001
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: number
          description: Cantidad solicitada
        requestedQuantityUnit:
          type: string
          description: Unidad de medida la cantidad solicitada
          enum:
           - GRAMS
           - TRAY
           - UNITS
           - LITRES
           - KILOGRAMS
           - PIECE
           - METERS
        dispatchedQuantity:
          multipleOf: 0.001
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: number
          description: Cantidad surtida
        dispatchedQuantityUnit:
          type: string
          description: Unidad de medida la cantidad surtida
          enum:
           - GRAMS
           - TRAY
           - UNITS
           - LITRES
           - KILOGRAMS
           - PIECE
           - METERS
        replacedBy:
          uniqueItems: true
          type: array
          items:
            multipleOf: 1
            maximum: 999999
            minimum: 0
            maxLength: 2000
            type: string
            description: Sustituido por
        replacementFor:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2000
          type: string
          description: Sustituye a
        shipNodeCentre:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Centro de expedición y centro derivado para consultas y reclamaciones de clientes
        insurancePolicyId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Número de póliza
        insuranceCertificate:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Certificado del seguro
        urgentDeliveryType:
          type: string
          description: Entrega urgente en 24 o 48 horas
          enum:
           - "24"
           - "48"
        isExactDeliveryDate:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Fecha de entrega exacta
        launchDate:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2000
          type: string
          description: Fecha de lanzamiento
          format: date-time
        foodPreparationInstruction:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2000
          type: string
          description: Tipo de preparado
        originPayments:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              method:
                type: string
                description: Método de pago
              amount:
                type: number
                description: Total
              paymentAmount:
                type: number
                description: Total del pago en origen
            description: Pagos de esta línea
        recipientPhoneNumber:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Recipient Phone number
        recipientEmail:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Recipient Email
        dedicationUrl:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2000
          type: string
          description: Url de la dedicatoria
        modificationDedicationUrl:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2000
          type: string
          description: Url para modificaciones de la dedicatoria
        deliverySlotStart:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha inicio tramo de entrega
          format: date-time
        deliverySlotEnd:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha fin tramo de entrega
          format: date-time
        isModifiableDeliveryTimeSlot:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Se permite modificar el tramo horario de envío
        estimatedStartDelivery:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha inicio entrega estimada
          format: date-time
        isApproximatePrice:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Indica si es un precio aproximado
        resendPIN:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Indica si se puede reenviar el PIN
        resendEmail:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Indica si se puede reenviar el email
        isReturnTP:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Indica si el pedido se puede devolver con Tarifa Plana
        fulfillmentDate:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha de completación
      additionalProperties: false
      description: Líneas de detalle de los pedidos
    OrdersPayments:
      title: OrdersPayments validation
      required:
       - amount
       - method
       - order
       - transactionDate
       - transactionId
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - OrdersPayments
        order:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Pedido al que pertenece el pago
        transactionId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador de la transacción
        method:
          type: string
          description: Método de pago
          enum:
           - CREDIT_CARD
           - ECI_CARD
           - CASH
           - PAYPAL
           - GIFT_CARD
           - CREDIT_LINE
           - HIRE_PURCHASE
           - INSTALLMENTS
           - MULTIBANK
           - ALIPAY
           - BALANCE_BAG
           - CHECK
           - EPAY
           - OTHER
           - TWYP
           - VOUCHER
           - WAYLET
           - WECHAT
           - MBWAY
           - MULTIBANK_SIBS
           - BIZUM
           - UNKNOWN
           - AVIO
        status:
          type: string
          description: Estado del pago
          enum:
           - PENDING
           - AUTHORISED
           - CHARGED
           - CANCEL
        amount:
          multipleOf: 0.01
          maximum: 999999
          minimum: -999999
          maxLength: 100
          type: number
          description: Importe del pago
        transactionDate:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha de la transacción
          format: date-time
        creditCardLastFourDigits:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 4
          type: string
          description: Últimos cuatro dígitos de la tarjeta de crédito
        transactionType:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Tipo de transacción
        giftCardAmount:
          multipleOf: 0.01
          maximum: 9999999
          minimum: 0
          maxLength: 100
          type: number
          description: "Del total (amount), indica cuánto se ha pagado en tarjetas regalo."
        description:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 1000
          type: string
          description: Descripción del medio de pago
        paymentGroupType:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 1000
          type: string
          description: Servicio corporativo de medios de pago
        orderShippingGroup:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Shipping group al que pertenece
        isHidden:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Si se oculta en el frontal
        codebar:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código de Barras
      additionalProperties: false
      description: Pagos de los pedidos
    OrdersDiscounts:
      title: OrdersDiscounts validation
      required:
       - amount
       - order
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - OrdersDiscounts
        order:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Pedido al que pertenece el descuento
        amount:
          multipleOf: 0.01
          maximum: 9999999
          minimum: 0
          maxLength: 100
          type: number
          description: Importe del descuento
        comments:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 10000
          type: string
          description: Comentarios del descuento
        discountCode:
          type: string
          description: Código de descuento
          enum:
           - COLLECTIVE
           - PLAN
           - VOUCHER
           - GOP
           - PROG_AVIOS
           - PLAN_AFTER
           - PROMOTIONAL
        payment:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 10000
          type: string
          description: Pago asociado
        codebar:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código de Barras
        percent:
          multipleOf: 0.01
          maximum: 100
          minimum: 0
          maxLength: 100
          type: number
          description: Porcentaje de descuento
      additionalProperties: false
      description: Descuentos de los pedidos
    OrdersLinesDiscounts:
      title: OrdersLinesDiscounts validation
      required:
       - orderLine
       - percent
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - OrdersLinesDiscounts
        orderLine:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Línea de detalle a la que pertenece el descuento
        percent:
          multipleOf: 0.01
          maximum: 100
          minimum: 0
          maxLength: 100
          type: number
          description: Porcentaje de descuento
        comments:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 10000
          type: string
          description: Comentarios del descuento
        amount:
          multipleOf: 0.01
          maximum: 9999999
          minimum: 0
          maxLength: 100
          type: number
          description: Importe
        discountCode:
          type: string
          description: Código de descuento
          enum:
           - COLLECTIVE
           - PLAN
           - VOUCHER
           - GOP
           - PROG_AVIOS
           - PLAN_AFTER
           - PROMOTIONAL
        resultAmount:
          multipleOf: 0.01
          maximum: 999999
          minimum: -999999
          maxLength: 100
          type: number
          description: Importe resultante
      additionalProperties: false
      description: Descuentos de las líneas de detalle de los pedidos
    OrdersShippingGroups:
      title: OrdersShippingGroups validation
      required:
       - method
       - order
       - status
      type: object
      properties:
        ordersShippingGroupsReleasesList:
          type: array
          items:
            required:
             - releaseId
            type: object
            properties:
              _id:
                type: string
                description: "Entity Unique ID, this field must not be included on entity creation (POST)"
              _lastModified:
                type: string
                description: "Last modification timestamp, this field must not be included on entity creation (POST)"
                format: date-time
              _types:
                minItems: 1
                uniqueItems: true
                type: array
                description: Entity type
                items:
                  type: string
                  enum:
                   - OrdersShippingGroupsReleases
              releaseId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Identificador de release
              invoiceNumber:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Números de facturas
              invoiceDocumentName:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Nnombre del documento en Documentum correspondiente a la factura
              fulfillmentDate:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Fecha de completación
                format: date-time
              originMethod:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Tipo de cumplimentación
              providerCode:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Código de proveedor
              releaseLines:
                type: array
                items:
                  type: object
                  properties:
                    orderLineId:
                      type: string
                      description: Id de la linea de la orden
                    shippingGroupLineId:
                      type: string
                      description: Id de la linea de la operación de venta
                    units:
                      type: number
                      description: Unidades
                  description: Lineas
              trackingUrl:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2000
                type: string
                description: URL identificador de seguimiento
              deliveryCompany:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2000
                type: string
                description: Empresa de envío
              trackingNumber:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2000
                type: string
                description: Identificador de seguimiento
              deliveryCompanyId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2000
                type: string
                description: Identificador de la empresa de envío
              deliveryCompanySubcontractor:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2000
                type: string
                description: Subagencia de la empresa de envío
              deliveryCompanySubcontractorId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 2000
                type: string
                description: Identificador de la subagencia de envío
              deliveryStatus:
                type: array
                items:
                  type: object
                  properties:
                    eventStatus:
                      type: string
                      description: Estado de la entrega
                    startDate:
                      type: string
                      description: 'Fecha del cambio de estado '
                  description: Estado de la entrega
              saleTransactionId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Suboperación de venta
              deliveryProviderFullName:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Nombre del repartidor
              deliveryProviderTelephone:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Teléfono del repartidor
              isDeliveryProviderInfoAvailable:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: boolean
                description: Contiene datos de contacto del transportista
              subSaleTransactionId:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Id de a suboperación de venta
            additionalProperties: false
            description: Información de entregas asociadas a la operación de venta
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - OrdersShippingGroups
        order:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Pedido al que pertenece el grupo de envío
        orderLines:
          uniqueItems: true
          type: array
          items:
            maxLength: 24
            minLength: 24
            pattern: "[0-9a-fA-F]{24}"
            type: string
            description: Líneas de detalle del pedido que se envían en este grupo de envío
        status:
          type: string
          description: Estado del grupo de envío
          enum:
           - PENDING_ACTION
           - BLOCKED
           - PENDING_PICKING
           - PICKING
           - PICKING_FINISHED
           - ON_ROUTE
           - CANCELLED
           - FULFILLED
           - TRANSFERRED
           - PAYMENT_DENIED
           - RETURN_PENDING_PICKING
           - RETURN_ON_ROUTE
           - RETURN_REVISION_PENDING
           - RETURN_FINISHED
           - RETURN_CANCELLED
           - NPDA
           - PENDING_OMS_INTEGRATION
           - CUSTOMER_ON_ROUTE
           - CUSTOMER_IN_STORE
        statusId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Id de stado (opcional)
        releaseId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Id de release
        method:
          type: string
          description: Método de envío
          enum:
           - HOME_DELIVERY
           - PICKUP_SAVE_TO_STORE
           - PICKUP_CLICK_AND_COLLECT
           - DIGITAL_EBOOKS
           - DIGITAL_FILMIN
           - DIGITAL_SPOTIFY
           - DIGITAL_SONY
           - CLICK_AND_CAR
           - CLICK_AND_EXPRESS
           - TICKET
           - DEPARTMENT_STORE
           - INTANGIBLE
        originMethod:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Método de envío gestionado por STERLING
        shoppingCentre:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Centro comercial de ECI
        shoppingCentreSts:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Centro comercial de ECI
        comments:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 10000
          type: string
          description: Comentarios del grupo de envío
        saleTransactionId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Sale transaction Id (Sterling)
        relatedShippingGroups:
          uniqueItems: true
          type: array
          items:
            multipleOf: 1
            maximum: 999999
            minimum: 0
            maxLength: 100
            type: string
            description: Sterling
        splitType:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Sterling
        transactionType:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Sterling
        invoiceNumbers:
          uniqueItems: true
          type: array
          items:
            multipleOf: 1
            maximum: 999999
            minimum: 0
            maxLength: 100
            type: string
            description: Números de facturas
        province:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Provincia a la que está asociado el shippingGroup.
        estimatedDelivery:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Estimación de entrega
          format: date-time
        deliveryTime:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha en la que se produce el cambio de estado
          format: date-time
        shippingAddressAlias:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Alias de la dirección de envío
        shippingAddressFullName:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 1000
          type: string
          description: Nombre completo del contacto de la dirección de envío
        shippingAddressLine1:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 1000
          type: string
          description: "Tipo de vía, nombre de vía, número"
        shippingAddressLine2:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Resto de la dirección (bloque, escaleras, piso, puerta, ...)"
        shippingAddressLine3:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Código postal, ciudad (provincia)"
        shippingAddressLine4:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: País
        shippingAddressCountryIso:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2
          type: string
          description: Código País
        shippingAddressComments:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 250
          type: string
          description: Comentarios para la ayuda a la entrega de la dirección de envío
        phoneNumber:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Número de teléfono
        deliveryCompany:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Empresa de mensajería
        shippingCompany:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Empresa de envío
        deliverySlotStart:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha inicio tramo de entrega
          format: date-time
        deliverySlotEnd:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha fin tramo de entrega
          format: date-time
        trackingNumber:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador de seguimiento
        trackingUrl:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: URL identificador de seguimiento
        collectionPoint:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Punto de recogida
        originStatus:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Estado en el origen
        orderPayments:
          uniqueItems: true
          type: array
          items:
            maxLength: 24
            minLength: 24
            pattern: "[0-9a-fA-F]{24}"
            type: string
            description: Pagos de este grupo de envíos
        invoiceDocumentName:
          uniqueItems: true
          type: array
          items:
            multipleOf: 1
            maximum: 999999
            minimum: 0
            maxLength: 100
            type: string
            description: Nnombre del documento en Documentum correspondiente a la factura
        isCancel:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Se permite cancelar una operación de venta
        isModifyShippingAddress:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Se permite modificar la dirección de entrega
        stlDocumentType:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Tipo documento STL
        stlEnterpriseCode:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código empresa STL
        codebar:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 50
          type: string
          description: Código de barras ECI. Usado para poder hacer las devoluciones relacionadas con el shipping group
        allowFrontModification:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Flag para deaterminar si se pueden hacer modificaciones desde el front . El atributo se usa en la lógica para el calculo de isCancel para evitar que se cancele un pedido un vez que se ha imprimido la etiqueta del pedido desde SPCC en el centro comercial
        controlCode:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 50
          type: string
          description: Código de control de código de barras
        isGeneratedCoupon:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Genera cupón
        isDateChangedByCus:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Fecha de entrega elegida por el cliente
        subtotalAmount:
          multipleOf: 0.01
          maximum: 9999999
          minimum: 0
          maxLength: 100
          type: number
          description: Importe total de la operación de venta sin descuentos globales aplicados
        totalShippingAmount:
          multipleOf: 0.01
          maximum: 9999999
          minimum: 0
          maxLength: 100
          type: number
          description: Gastos de envío totales
        externalSaleTransactionId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador del pedido en el sistema origen
        yantra:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código yantra
        shippingAddress:
          type: object
          properties:
            country:
              type: string
              description: País
            region:
              type: string
              description: Provincia
            regionCode:
              type: string
              description: Código de provincia
            locality:
              type: string
              description: Localidad
            postalCode:
              type: string
              description: Código postal
            wayType:
              type: string
              description: Tipo de dirección
            wayName:
              type: string
              description: Nombre de dirección
            wayNumber:
              type: string
              description: Número de dirección
            building:
              type: string
              description: Bloque
            stairs:
              type: string
              description: Escalera
            floor:
              type: string
              description: Piso
            door:
              type: string
              description: Puerta
            otherInformation:
              type: string
              description: Información adicional
          description: Dirección
        isAmountPrinted:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Tiene ticket regalo
        isGiftReceiptAllowed:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Permite solicitar ticket regalo
        isModifiableDeliveryTimeSlot:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Se permite modificar el tramo horario de envío
        isModifiableCollectionTimeSlot:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Se permite modificar el tramo horario de recogida
        urgentDeliveryType:
          type: string
          description: Entrega urgente en 24 o 48 horas
          enum:
           - "24"
           - "48"
        isAddOrderedItemAllowed:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Se permite añadir mercancía
        isExactDeliveryDate:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Fecha de entrega exacta
        seller:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Proveedor
        salesOperation:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Operación de venta asociado
        isTicketAvailable:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Si está disponible el ticket de venta
        ticketDownloadURL:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2000
          type: string
          description: Url del ticket de venta
        deliveryProviderFullName:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Nombre del repartidor
        deliveryProviderTelephone:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Teléfono del repartidor
        isDeliveryProviderInfoAvailable:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Contiene datos de contacto del transportista
        originPayments:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              method:
                type: string
                description: MÃ©todo de pago
              amount:
                type: number
                description: Total
              paymentAmount:
                type: number
                description: Total del pago en origen
            description: Pagos de este grupo de envíos
        distributionCentre:
          type: object
          properties:
            companyId:
              type: string
              description: Id de la empresa
            centreId:
              type: string
              description: Id del centro
          description: Centro de distribucion de este grupo de envios
        collectionPointDescription:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Detalles específicos sobre el punto de recogida
        shippingAddressPostalCode:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Dirección de envío (código postal)
        shippingAddressCity:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Dirección de envío (ciudad)
        shippingAddressState:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Dirección de envío (provincia)
      additionalProperties: false
      description: Datos de envío de grupos de líneas de detalle de los pedidos
    ShoppingCentres:
      title: ShoppingCentres validation
      required:
       - name
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - ShoppingCentres
        name:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Nombre del centro comercial
        centreId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador ECI del centro comercial
        companyId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador ECI de la compañía del centro comercial
        addressLine1:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Tipo de vía, nombre de vía, número"
        addressLine2:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Resto de la dirección (bloque, escaleras, piso, puerta, ...)"
        addressLine3:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Código postal, ciudad (provincia)"
        addressLine4:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: País
        province:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Provincia en la que se encuentra el centro comercial
        telephone:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Teléfono del centro comercial
        clickAndCarCentre:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Centro Click and Car asociado
        sellCentreId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador ECI del centro comercial
        sellCompanyId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador ECI de la compañía vendedora del centro comercial
        stockCompanyId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador ECI de la sociedad anónima del centro comercial
      additionalProperties: false
      description: Centros comerciales de ECI
    ShoppingCentresSts:
      title: ShoppingCentresSts validation
      required:
       - name
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - ShoppingCentresSts
        name:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Nombre del centro comercial
        centreId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador ECI del centro comercial
        companyId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador ECI de la compañía del centro comercial
        addressLine1:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Tipo de vía, nombre de vía, número"
        addressLine2:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Resto de la dirección (bloque, escaleras, piso, puerta, ...)"
        addressLine3:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Código postal, ciudad (provincia)"
        addressLine4:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: País
        province:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Provincia en la que se encuentra el centro comercial
        telephone:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Teléfono del centro comercial
        sellCentreId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador ECI del centro comercial
        sellCompanyId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador ECI de la compañía vendedora del centro comercial
        stockCompanyId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador ECI de la sociedad anónima del centro comercial
      additionalProperties: false
      description: Centros comerciales de ECI
    Countries:
      title: Countries validation
      required:
       - name
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - Countries
        name:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Nombre del país
        code:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código ISO del país
      additionalProperties: false
      description: Países
    Provinces:
      title: Provinces validation
      required:
       - country
       - name
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - Provinces
        country:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: País al que pertenece la provincia
        name:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Nombre de la provincia
        code:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código ISO de la provincia
      additionalProperties: false
      description: Provincias
    DeliveryCompanies:
      title: DeliveryCompanies validation
      required:
       - name
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - DeliveryCompanies
        name:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Nombre de la empresa de mensajería
        code:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código de la empresa de mensajería
        parentDeliveryCompany:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Empresa padre
      additionalProperties: false
      description: Empresas de mensajería
    OrdersShippingGroupsReleases:
      title: OrdersShippingGroupsReleases validation
      required:
       - orderShippingGroup
       - releaseId
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - OrdersShippingGroupsReleases
        orderShippingGroup:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Operación de venta a la que pertence la entrega de mercancía
        releaseId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador de release
        invoiceNumber:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Números de facturas
        invoiceDocumentName:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Nnombre del documento en Documentum correspondiente a la factura
        fulfillmentDate:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha de completación
          format: date-time
        originMethod:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Tipo de cumplimentación
        providerCode:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código de proveedor
        releaseLines:
          type: array
          items:
            type: object
            properties:
              orderLineId:
                type: string
                description: Id de la linea de la orden
              shippingGroupLineId:
                type: string
                description: Id de la linea de la operación de venta
              units:
                type: number
                description: Unidades
            description: Lineas
        trackingUrl:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2000
          type: string
          description: URL identificador de seguimiento
        deliveryCompany:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2000
          type: string
          description: Empresa de envío
        trackingNumber:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2000
          type: string
          description: Identificador de seguimiento
        deliveryCompanyId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2000
          type: string
          description: Identificador de la empresa de envío
        deliveryCompanySubcontractor:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2000
          type: string
          description: Subagencia de la empresa de envío
        deliveryCompanySubcontractorId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 2000
          type: string
          description: Identificador de la subagencia de envío
        deliveryStatus:
          type: array
          items:
            type: object
            properties:
              eventStatus:
                type: string
                description: Estado de la entrega
              startDate:
                type: string
                description: 'Fecha del cambio de estado '
            description: Estado de la entrega
        saleTransactionId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Suboperación de venta
        deliveryProviderFullName:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Nombre del repartidor
        deliveryProviderTelephone:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Teléfono del repartidor
        isDeliveryProviderInfoAvailable:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Contiene datos de contacto del transportista
        subSaleTransactionId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Id de a suboperación de venta
      additionalProperties: false
      description: Información de entregas asociadas a la operación de venta
    OrdersInvoices:
      title: OrdersInvoices validation
      required:
       - invoiceNumber
       - order
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - OrdersInvoices
        order:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Pedido al que pertenece la factura
        invoiceNumber:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Números de facturas
        invoiceDocumentName:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Nnombre del documento en Documentum correspondiente a la factura
      additionalProperties: false
      description: Información de facturas
    SelfServiceMaxDevolutionPeriod:
      title: SelfServiceMaxDevolutionPeriod validation
      required:
       - description
       - maxDaysAllowed
      type: object
      properties:
        selfServiceMaxDevolutionPeriodCriteriaList:
          type: array
          items:
            required:
             - attribute
             - condition
             - entity
             - values
            type: object
            properties:
              _id:
                type: string
                description: "Entity Unique ID, this field must not be included on entity creation (POST)"
              _lastModified:
                type: string
                description: "Last modification timestamp, this field must not be included on entity creation (POST)"
                format: date-time
              _types:
                minItems: 1
                uniqueItems: true
                type: array
                description: Entity type
                items:
                  type: string
                  enum:
                   - SelfServiceMaxDevolutionPeriodCriteria
              entity:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Entidad del criterio
              attribute:
                multipleOf: 1
                maximum: 999999
                minimum: 0
                maxLength: 100
                type: string
                description: Atributo del criterio
              condition:
                type: string
                description: Condición del criterio
                enum:
                 - equals
                 - startsWith
                 - endsWith
                 - contains
              values:
                minItems: 1
                uniqueItems: true
                type: array
                items:
                  multipleOf: 1
                  maximum: 999999
                  minimum: 0
                  maxLength: 100
                  type: string
                  description: Valores del criterio
            additionalProperties: false
            description: Información de facturas
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - SelfServiceMaxDevolutionPeriod
        description:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Descripción del periodo de devolución
        maxDaysAllowed:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: number
          description: Días permitidos
        maxDateAllowedFrom:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha desde permitida
          format: date-time
        maxDateAllowed:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha máxima permitida
          format: date-time
        disabled:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Flag de desactivado
        operations:
          uniqueItems: true
          type: array
          items:
            multipleOf: 1
            maximum: 999999
            minimum: 0
            maxLength: 100
            type: string
            description: Operaciones
      additionalProperties: false
      description: Información de facturas
    SelfServiceMaxDevolutionPeriodCriteria:
      title: SelfServiceMaxDevolutionPeriodCriteria validation
      required:
       - attribute
       - condition
       - entity
       - selfServiceMaxDevolutionPeriod
       - values
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - SelfServiceMaxDevolutionPeriodCriteria
        selfServiceMaxDevolutionPeriod:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Periodo al que se asocia este criterio
        entity:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Entidad del criterio
        attribute:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Atributo del criterio
        condition:
          type: string
          description: Condición del criterio
          enum:
           - equals
           - startsWith
           - endsWith
           - contains
        values:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            multipleOf: 1
            maximum: 999999
            minimum: 0
            maxLength: 100
            type: string
            description: Valores del criterio
      additionalProperties: false
      description: Información de facturas
    ClickAndCarCentres:
      title: ClickAndCarCentres validation
      required:
       - name
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - ClickAndCarCentres
        name:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Nombre del centro Click and Car
        centreId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador ECI del centro Click and Car
        companyId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador ECI de la compañía del centro Click and Car
        addressLine1:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Tipo de vía, nombre de vía, número"
        addressLine2:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Resto de la dirección (bloque, escaleras, piso, puerta, ...)"
        addressLine3:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Código postal, ciudad (provincia)"
        addressLine4:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: País
        province:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Provincia en la que se encuentra el centro Click and Car
        telephone:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Teléfono del centro Click and Car
      additionalProperties: false
      description: Centros Click and Car de ECI
    OrdersParcelCollections:
      title: OrdersParcelCollections validation
      required:
       - method
       - order
       - status
       - transactionId
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - OrdersParcelCollections
        order:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Pedido al que pertenece la operacion de recogida
        orderLines:
          uniqueItems: true
          type: array
          items:
            maxLength: 24
            minLength: 24
            pattern: "[0-9a-fA-F]{24}"
            type: string
            description: Líneas de la recogida
        status:
          type: string
          description: Estado de la recogida
          enum:
           - PENDING_ACTION
           - BLOCKED
           - PENDING_PICKING
           - PICKING
           - PICKING_FINISHED
           - ON_ROUTE
           - CANCELLED
           - FULFILLED
           - TRANSFERRED
           - PAYMENT_DENIED
           - RETURN_PENDING_PICKING
           - RETURN_ON_ROUTE
           - RETURN_REVISION_PENDING
           - RETURN_FINISHED
           - RETURN_CANCELLED
           - NPDA
           - PENDING_OMS_INTEGRATION
           - CUSTOMER_ON_ROUTE
           - CUSTOMER_IN_STORE
        method:
          type: string
          description: Tipo de recogida
          enum:
           - HOME_DELIVERY
           - PICKUP_SAVE_TO_STORE
           - PICKUP_CLICK_AND_COLLECT
           - DIGITAL_EBOOKS
           - DIGITAL_FILMIN
           - DIGITAL_SPOTIFY
           - DIGITAL_SONY
           - CLICK_AND_CAR
           - CLICK_AND_EXPRESS
           - TICKET
           - DEPARTMENT_STORE
           - INTANGIBLE
        originMethod:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Tipo de recogida gestionado por Sterling
        collectionCentre:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Centro comercial
        transactionId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Transacción
        relatedSaleTransactionId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Operación de venta original
        estimatedCollectionDate:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Fecha estimada de recogida
          format: date-time
        parcelQuantity:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: number
          description: Número de bultos
        collectionAddressFullName:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Datos de la dirección de recogida
        collectionAddressLine1:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Datos de la dirección de recogida
        collectionAddressLine2:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Datos de la dirección de recogida
        collectionAddressLine3:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Datos de la dirección de recogida
        collectionAddressLine4:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Datos de la dirección de recogida
        phoneNumber:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Datos de teléfono
        totalCollectionAmount:
          multipleOf: 0.01
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: number
          description: Gastos de recogida
        deliveryCompany:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Empresa de envío
        deliveryCompanyId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador de la empresa de envío
        deliveryCompanySubcontractor:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Subagencia de la empresa de envío
        deliveryCompanySubcontractorId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador de la subagencia de envío
        trackingUrl:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: URL seguimiento
        trackingNumber:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Identificador de seguimiento
        deliveryStatus:
          type: array
          items:
            type: object
            properties:
              eventStatus:
                type: string
                description: Estado de la entrega
              startDate:
                type: string
                description: 'Fecha del cambio de estado '
            description: Estado de la recogida
      additionalProperties: false
      description: Operaciones de recogida
    OrdersSubShippingGroups:
      title: OrdersSubShippingGroups validation
      required:
       - order
       - status
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - OrdersSubShippingGroups
        order:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Pedido al que pertenece la línea de detalle
        parentShippingGroup:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Shipping group al que pertenece
        type:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Tipo
        saleTransactionId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Sale transaction Id (Sterling)
        status:
          type: string
          description: Estado del grupo de envío
          enum:
           - PENDING_ACTION
           - BLOCKED
           - PENDING_PICKING
           - PICKING
           - PICKING_FINISHED
           - ON_ROUTE
           - CANCELLED
           - FULFILLED
           - TRANSFERRED
           - PAYMENT_DENIED
           - RETURN_PENDING_PICKING
           - RETURN_ON_ROUTE
           - RETURN_REVISION_PENDING
           - RETURN_FINISHED
           - RETURN_CANCELLED
           - NPDA
           - PENDING_OMS_INTEGRATION
           - CUSTOMER_ON_ROUTE
           - CUSTOMER_IN_STORE
        isCancel:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: boolean
          description: Se permite cancelar
      additionalProperties: false
      description: Datos de envío de subgrupos de líneas de detalle de los pedidos
    DeliveryPoints:
      title: DeliveryPoints validation
      required:
       - deliveryPointId
      type: object
      properties:
        _id:
          type: string
          description: "Entity Unique ID, this field must not be included on entity creation (POST)"
        _lastModified:
          type: string
          description: "Last modification timestamp, this field must not be included on entity creation (POST)"
          format: date-time
        _types:
          minItems: 1
          uniqueItems: true
          type: array
          description: Entity type
          items:
            type: string
            enum:
             - DeliveryPoints
        deliveryPointId:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Código de punto de entrega
        address:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: "Dirección (tipo de vía, nombre de vía, número)"
        floor:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Piso en el que se encuentra el punto de entrega
        building:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Edificio en el que se encuentra el punto de entrega
        description:
          multipleOf: 1
          maximum: 999999
          minimum: 0
          maxLength: 100
          type: string
          description: Descripción del punto de entrega
        shoppingCentre:
          maxLength: 24
          minLength: 24
          pattern: "[0-9a-fA-F]{24}"
          type: string
          description: Centro comercial al que pertenece el punto de entrega
      additionalProperties: false
      description: Puntos de entrega de ECI
  parameters:
    id:
      name: id
      in: path
      description: Id of the resource
      required: true
      style: simple
      explode: false
      schema:
        type: string
    searchParam:
      name: search
      in: query
      description: "Indicates the text by which you want to search. To do this search, the text index of the database is used."
      required: false
      style: form
      explode: true
      schema:
        type: string
    customSearchParam:
      name: customSearch
      in: query
      description: "Performs advanced search. Values must be a valid JSON containning all the clauses as detailed on the example. Clauses are concatenated with AND operator. Here is an example: {\"attribute1\":{\"operator\":\"EQUALS\",\"value\":\"value\"},\"attribute2\":{\"operator\":\"NOT_EQUALS\",\"negate\":true,\"value\":[\"value1\",\"value2\"]},\"attribute3\":null,\"attribute4\":{\"operator\":\"RANGE\",\"value\":[{\"start\":\"minValue\",\"end\":\"maxValue\"}]}}"
      required: false
      style: form
      explode: true
      schema:
        type: string
    countParam:
      name: count
      in: query
      description: Indicates if you want the total number of documents found to be returned in the response.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    skipParam:
      name: skip
      in: query
      description: "Indicates the number of documents to be skipped. Normally, this parameter is used together with the 'limit' parameter to implement paging."
      required: false
      style: form
      explode: true
      schema:
        type: integer
    limitParam:
      name: limit
      in: query
      description: "Indicates the number of documents that you want to return. Normally, this parameter is used together with the 'skip' parameter to implement paging."
      required: false
      style: form
      explode: true
      schema:
        type: integer
    termsParam:
      name: terms
      in: query
      description: "Perform query based on terms, the input is of the type terms=term1,term2,..."
      required: false
      style: form
      explode: true
      schema:
        type: string
    rangesParam:
      name: ranges
      in: query
      description: "Perform query based on range, the input is of the type ranges=field1:value1:value2,field2:value1:value2,..."
      required: false
      style: form
      explode: true
      schema:
        type: string
    loadListsParam:
      name: loadLists
      in: query
      description: Load list fields values on results
      required: false
      style: form
      explode: true
      schema:
        type: string
    initializeParam:
      name: initialize
      in: query
      description: "Indicates the attributes or dependent entities separated by commas that you want to initialize and return in the response. Using the point, attributes can be initialized recursively. For example, '? Initialize = attribute1.atribute2, attribute3', etc."
      required: false
      style: form
      explode: true
      schema:
        type: string
    onDemandActionsParam:
      name: onDemandActions
      in: query
      description: "Indica los atributos con acciones o resolvers a ejecutar que sean bajo demanda. For example, '? onDemandActions = action1, action2', etc."
      required: false
      style: form
      explode: true
      schema:
        type: string
    attribute1:
      name: attribute1
      in: path
      description: Attribute of the entity name
      required: true
      style: simple
      explode: false
      schema:
        type: string
    value1:
      name: value1
      in: path
      description: Value of the entity attribute
      required: true
      style: simple
      explode: false
      schema:
        type: string
    attribute2:
      name: attribute2
      in: path
      description: Attribute of the entity name
      required: true
      style: simple
      explode: false
      schema:
        type: string
    value2:
      name: value2
      in: path
      description: Value of the entity attribute
      required: true
      style: simple
      explode: false
      schema:
        type: string
    attribute3:
      name: attribute3
      in: path
      description: Attribute of the entity name
      required: true
      style: simple
      explode: false
      schema:
        type: string
    value3:
      name: value3
      in: path
      description: Value of the entity attribute
      required: true
      style: simple
      explode: false
      schema:
        type: string
  securitySchemes:
    ivuser:
      type: apiKey
      name: iv-user
      in: header
    xowner:
      type: apiKey
      name: x-owner
      in: header
    xclient:
      type: apiKey
      name: x-client
      in: header
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://test.com
          scopes: {}
x-throttling-tier: 50KPerMin
x-wso2-cors:
  corsConfigurationEnabled: false
  accessControlAllowOrigins:
   - '*'
  accessControlAllowCredentials: false
  accessControlAllowHeaders:
   - authorization
   - Access-Control-Allow-Origin
   - Content-Type
   - SOAPAction
  accessControlAllowMethods:
   - GET
   - PUT
   - POST
   - DELETE
   - PATCH
   - OPTIONS
x-wso2-production-endpoints:
  urls:
   - https://qpe-orders-v3.paas.eci.geci/geciorders/
  type: http
x-wso2-sandbox-endpoints:
  urls:
   - https://qpe-orders-v3.paas.eci.geci/geciorders/
  type: http
x-wso2-basePath: /geciorders/2.8.0
x-wso2-transports:
 - http
 - https
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300
